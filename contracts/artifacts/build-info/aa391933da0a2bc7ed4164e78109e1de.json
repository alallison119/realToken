{
	"id": "aa391933da0a2bc7ed4164e78109e1de",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ICO.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ICO is AccessControl{\n    using SafeMath for uint256;\n    bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    //address payable immutable owner;\n    //address payable immutable devAddress;\n\n    address payable owner;\n    address payable private devAddress;\n    address[] minters_;\n    uint256 maxSupply_;\n    uint256 timeLock=18000000000;\n    IERC20 eftt;\n    uint256 maxICO = 100000 *10**18;\n    uint256 SoldInMetis;\n    uint256 SoldEFTT;\n    uint256 ratioMetis =1;\n    mapping(uint => uint) timeLocks;\n\n\n\n    constructor(address _eftt, address _dev) payable {\n        //below might have to obfuscate with for loop\n        _grantRole(INVESTOR_ROLE, _dev);\n        _grantRole(BURNER_ROLE, _dev);\n        owner = payable(msg.sender);\n        eftt = IERC20(_eftt);\n        devAddress = payable(_dev);\n        timeLocks[0] = 111;\n        timeLocks[1] = 222;\n        timeLocks[2] = 333;\n            }\n\n    event Log(string func);\n    event Sold(uint);\n \n    modifier _timeCheck(){\n        require(block.timestamp < timeLock,\"ICO is over :( \");\n        _;\n    }\n    modifier _onlyOwner(){\n        require(owner == msg.sender,\"You're not the owner\");\n        _;\n    }\n    \n    receive() external payable {\n        //add in if just metis sent to contract\n        emit Log(\"fallback hit\");\n        buy();\n    }\n\n\n    function buy() public payable _timeCheck returns(bool){\n        require(msg.value > 0,\"them/they please send metis\");\n        uint256 buyAmount = conversion(msg.value);\n        require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\");\n        eftt.allowance( address(this),msg.sender);\n        eftt.transfer(msg.sender, buyAmount);\n        SoldEFTT = buyAmount + SoldEFTT;\n        emit Sold(buyAmount);\n        return true;\n    }\n\n    function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {\n        if (timeLocks[2]> block.timestamp){\n            payable(msg.sender).transfer(_amnt);\n        } else if (timeLocks[1]> block.timestamp){\n            //uint256 converted = soldPercent();\n            payable(msg.sender).transfer(_amnt);\n        } else if (timeLocks[0]> block.timestamp){\n            payable(msg.sender).transfer(_amnt);\n        }\n        \n    }\n\n    function endICO() public _timeCheck onlyRole(BURNER_ROLE){\n        \n\n    }\n\n    function conversion(uint256 _amnt) private view returns(uint256){\n        return(_amnt.mul(ratioMetis));\n    }\n\n    function soldPercent() private view returns(uint256){\n        return SoldEFTT.div(maxICO);\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ICO.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eftt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dev",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "func",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Sold",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INVESTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amnt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ICO.sol\":232:2818  contract ICO is AccessControl{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ICO.sol\":656:667  18000000000 */\n  0x0430e23400\n    /* \"contracts/ICO.sol\":639:667  uint256 timeLock=18000000000 */\n  0x05\n  sstore\n    /* \"contracts/ICO.sol\":707:721  100000 *10**18 */\n  0x152d02c7e14af6800000\n    /* \"contracts/ICO.sol\":690:721  uint256 maxICO = 100000 *10**18 */\n  0x07\n  sstore\n    /* \"contracts/ICO.sol\":794:795  1 */\n  0x01\n    /* \"contracts/ICO.sol\":774:795  uint256 ratioMetis =1 */\n  0x0a\n  sstore\n    /* \"contracts/ICO.sol\":841:1226  constructor(address _eftt, address _dev) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/ICO.sol\":954:985  _grantRole(INVESTOR_ROLE, _dev) */\n  tag_5\n    /* \"contracts/ICO.sol\":339:365  keccak256(\"INVESTOR_ROLE\") */\n  0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n    /* \"contracts/ICO.sol\":980:984  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":954:964  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":954:985  _grantRole(INVESTOR_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/ICO.sol\":995:1024  _grantRole(BURNER_ROLE, _dev) */\n  tag_7\n    /* \"contracts/ICO.sol\":409:433  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"contracts/ICO.sol\":1019:1023  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":995:1005  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":995:1024  _grantRole(BURNER_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/ICO.sol\":1050:1060  msg.sender */\n  caller\n    /* \"contracts/ICO.sol\":1034:1039  owner */\n  0x01\n  0x00\n    /* \"contracts/ICO.sol\":1034:1061  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1085:1090  _eftt */\n  dup2\n    /* \"contracts/ICO.sol\":1071:1075  eftt */\n  0x06\n  0x00\n    /* \"contracts/ICO.sol\":1071:1091  eftt = IERC20(_eftt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1122:1126  _dev */\n  dup1\n    /* \"contracts/ICO.sol\":1101:1111  devAddress */\n  0x02\n  0x00\n    /* \"contracts/ICO.sol\":1101:1127  devAddress = payable(_dev) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1152:1155  111 */\n  0x6f\n    /* \"contracts/ICO.sol\":1137:1146  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1137:1149  timeLocks[0] */\n  0x00\n    /* \"contracts/ICO.sol\":1147:1148  0 */\n  dup1\n    /* \"contracts/ICO.sol\":1137:1149  timeLocks[0] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1137:1155  timeLocks[0] = 111 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1180:1183  222 */\n  0xde\n    /* \"contracts/ICO.sol\":1165:1174  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1165:1177  timeLocks[1] */\n  0x00\n    /* \"contracts/ICO.sol\":1175:1176  1 */\n  0x01\n    /* \"contracts/ICO.sol\":1165:1177  timeLocks[1] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1165:1183  timeLocks[1] = 222 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1208:1211  333 */\n  0x014d\n    /* \"contracts/ICO.sol\":1193:1202  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1193:1205  timeLocks[2] */\n  0x00\n    /* \"contracts/ICO.sol\":1203:1204  2 */\n  0x02\n    /* \"contracts/ICO.sol\":1193:1205  timeLocks[2] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1193:1211  timeLocks[2] = 333 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":841:1226  constructor(address _eftt, address _dev) payable {... */\n  pop\n  pop\n    /* \"contracts/ICO.sol\":232:2818  contract ICO is AccessControl{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_2:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":949:1068   */\ntag_37:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_39\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_40\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ICO.sol\":232:2818  contract ICO is AccessControl{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ICO.sol\":232:2818  contract ICO is AccessControl{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f248409\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x4f248409\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x76082a5e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/ICO.sol\":1591:1610  Log(\"fallback hit\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":1620:1625  buy() */\n      tag_20\n        /* \"contracts/ICO.sol\":1620:1623  buy */\n      tag_21\n        /* \"contracts/ICO.sol\":1620:1625  buy() */\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/ICO.sol\":232:2818  contract ICO is AccessControl{... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":371:433  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":2086:2518  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/ICO.sol\":2524:2598  function endICO() public _timeCheck onlyRole(BURNER_ROLE){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ICO.sol\":299:365  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":1639:2080  function buy() public payable _timeCheck returns(bool){... */\n    tag_13:\n      tag_70\n      tag_21\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/ICO.sol\":1639:2080  function buy() public payable _timeCheck returns(bool){... */\n    tag_21:\n        /* \"contracts/ICO.sol\":1688:1692  bool */\n      0x00\n        /* \"contracts/ICO.sol\":1341:1349  timeLock */\n      sload(0x05)\n        /* \"contracts/ICO.sol\":1323:1338  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1323:1349  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1315:1368  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/ICO.sol\":1723:1724  0 */\n      0x00\n        /* \"contracts/ICO.sol\":1711:1720  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":1711:1724  msg.value > 0 */\n      gt\n        /* \"contracts/ICO.sol\":1703:1755  require(msg.value > 0,\"them/they please send metis\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/ICO.sol\":1765:1782  uint256 buyAmount */\n      0x00\n        /* \"contracts/ICO.sol\":1785:1806  conversion(msg.value) */\n      tag_84\n        /* \"contracts/ICO.sol\":1796:1805  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":1785:1795  conversion */\n      tag_85\n        /* \"contracts/ICO.sol\":1785:1806  conversion(msg.value) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ICO.sol\":1765:1806  uint256 buyAmount = conversion(msg.value) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":1847:1853  maxICO */\n      sload(0x07)\n        /* \"contracts/ICO.sol\":1836:1844  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":1824:1833  buyAmount */\n      dup3\n        /* \"contracts/ICO.sol\":1824:1844  buyAmount + SoldEFTT */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/ICO.sol\":1824:1853  buyAmount + SoldEFTT < maxICO */\n      lt\n        /* \"contracts/ICO.sol\":1816:1884  require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/ICO.sol\":1894:1898  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":1894:1908  eftt.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/ICO.sol\":1918:1922  this */\n      address\n        /* \"contracts/ICO.sol\":1924:1934  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":1894:1935  eftt.allowance( address(this),msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      pop\n        /* \"contracts/ICO.sol\":1945:1949  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":1945:1958  eftt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ICO.sol\":1959:1969  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":1971:1980  buyAmount */\n      dup4\n        /* \"contracts/ICO.sol\":1945:1981  eftt.transfer(msg.sender, buyAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      pop\n        /* \"contracts/ICO.sol\":2014:2022  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":2002:2011  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2002:2022  buyAmount + SoldEFTT */\n      tag_103\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_103:\n        /* \"contracts/ICO.sol\":1991:1999  SoldEFTT */\n      0x09\n        /* \"contracts/ICO.sol\":1991:2022  SoldEFTT = buyAmount + SoldEFTT */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":2037:2052  Sold(buyAmount) */\n      0x92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727\n        /* \"contracts/ICO.sol\":2042:2051  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2037:2052  Sold(buyAmount) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":2069:2073  true */\n      0x01\n        /* \"contracts/ICO.sol\":2062:2073  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ICO.sol\":1639:2080  function buy() public payable _timeCheck returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":371:433  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_38:\n        /* \"contracts/ICO.sol\":409:433  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/ICO.sol\":371:433  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ICO.sol\":2086:2518  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_44:\n        /* \"contracts/ICO.sol\":339:365  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ICO.sol\":2178:2193  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":2164:2173  timeLocks */\n      0x0b\n        /* \"contracts/ICO.sol\":2164:2176  timeLocks[2] */\n      0x00\n        /* \"contracts/ICO.sol\":2174:2175  2 */\n      0x02\n        /* \"contracts/ICO.sol\":2164:2176  timeLocks[2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ICO.sol\":2164:2193  timeLocks[2]> block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":2160:2503  if (timeLocks[2]> block.timestamp){... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/ICO.sol\":2216:2226  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2208:2236  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2208:2243  payable(msg.sender).transfer(_amnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":2237:2242  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":2208:2243  payable(msg.sender).transfer(_amnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n        /* \"contracts/ICO.sol\":2160:2503  if (timeLocks[2]> block.timestamp){... */\n      jump(tag_118)\n    tag_115:\n        /* \"contracts/ICO.sol\":2278:2293  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":2264:2273  timeLocks */\n      0x0b\n        /* \"contracts/ICO.sol\":2264:2276  timeLocks[1] */\n      0x00\n        /* \"contracts/ICO.sol\":2274:2275  1 */\n      0x01\n        /* \"contracts/ICO.sol\":2264:2276  timeLocks[1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ICO.sol\":2264:2293  timeLocks[1]> block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":2260:2503  if (timeLocks[1]> block.timestamp){... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/ICO.sol\":2365:2375  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2357:2385  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2357:2392  payable(msg.sender).transfer(_amnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":2386:2391  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":2357:2392  payable(msg.sender).transfer(_amnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n        /* \"contracts/ICO.sol\":2260:2503  if (timeLocks[1]> block.timestamp){... */\n      jump(tag_122)\n    tag_119:\n        /* \"contracts/ICO.sol\":2427:2442  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":2413:2422  timeLocks */\n      0x0b\n        /* \"contracts/ICO.sol\":2413:2425  timeLocks[0] */\n      0x00\n        /* \"contracts/ICO.sol\":2423:2424  0 */\n      dup1\n        /* \"contracts/ICO.sol\":2413:2425  timeLocks[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ICO.sol\":2413:2442  timeLocks[0]> block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":2409:2503  if (timeLocks[0]> block.timestamp){... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/ICO.sol\":2465:2475  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2457:2485  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2457:2492  payable(msg.sender).transfer(_amnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":2486:2491  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":2457:2492  payable(msg.sender).transfer(_amnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n        /* \"contracts/ICO.sol\":2409:2503  if (timeLocks[0]> block.timestamp){... */\n    tag_123:\n        /* \"contracts/ICO.sol\":2260:2503  if (timeLocks[1]> block.timestamp){... */\n    tag_122:\n        /* \"contracts/ICO.sol\":2160:2503  if (timeLocks[2]> block.timestamp){... */\n    tag_118:\n        /* \"contracts/ICO.sol\":2086:2518  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_33\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":2524:2598  function endICO() public _timeCheck onlyRole(BURNER_ROLE){... */\n    tag_56:\n        /* \"contracts/ICO.sol\":1341:1349  timeLock */\n      sload(0x05)\n        /* \"contracts/ICO.sol\":1323:1338  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1323:1349  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1315:1368  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_79\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/ICO.sol\":409:433  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/ICO.sol\":1378:1379  _ */\n      pop\n        /* \"contracts/ICO.sol\":2524:2598  function endICO() public _timeCheck onlyRole(BURNER_ROLE){... */\n      jump\t// out\n        /* \"contracts/ICO.sol\":299:365  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_59:\n        /* \"contracts/ICO.sol\":339:365  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"contracts/ICO.sol\":299:365  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_33\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":2604:2714  function conversion(uint256 _amnt) private view returns(uint256){... */\n    tag_85:\n        /* \"contracts/ICO.sol\":2660:2667  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":2685:2706  _amnt.mul(ratioMetis) */\n      tag_153\n        /* \"contracts/ICO.sol\":2695:2705  ratioMetis */\n      sload(0x0a)\n        /* \"contracts/ICO.sol\":2685:2690  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":2685:2694  _amnt.mul */\n      tag_154\n      swap1\n        /* \"contracts/ICO.sol\":2685:2706  _amnt.mul(ratioMetis) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/ICO.sol\":2678:2707  return(_amnt.mul(ratioMetis)) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":2604:2714  function conversion(uint256 _amnt) private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_186\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_187\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n    tag_188:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_191:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n    tag_192:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_194\n      jump\t// in\n    tag_196:\n    tag_195:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_200\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_201\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_203\n      tag_194\n      jump\t// in\n    tag_203:\n    tag_202:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_194\n      jump\t// in\n    tag_205:\n    tag_204:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_211:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:344   */\n    tag_212:\n        /* \"#utility.yul\":322:336   */\n      0x66616c6c6261636b206869740000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:337   */\n      mstore\n        /* \"#utility.yul\":182:344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":350:716   */\n    tag_213:\n        /* \"#utility.yul\":492:495   */\n      0x00\n        /* \"#utility.yul\":513:580   */\n      tag_263\n        /* \"#utility.yul\":577:579   */\n      0x0c\n        /* \"#utility.yul\":572:575   */\n      dup4\n        /* \"#utility.yul\":513:580   */\n      tag_211\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":506:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":589:682   */\n      tag_264\n        /* \"#utility.yul\":678:681   */\n      dup3\n        /* \"#utility.yul\":589:682   */\n      tag_212\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":702:705   */\n      dup3\n        /* \"#utility.yul\":698:710   */\n      add\n        /* \"#utility.yul\":691:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":350:716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:1141   */\n    tag_19:\n        /* \"#utility.yul\":888:892   */\n      0x00\n        /* \"#utility.yul\":926:928   */\n      0x20\n        /* \"#utility.yul\":915:924   */\n      dup3\n        /* \"#utility.yul\":911:929   */\n      add\n        /* \"#utility.yul\":903:929   */\n      swap1\n      pop\n        /* \"#utility.yul\":975:984   */\n      dup2\n        /* \"#utility.yul\":969:973   */\n      dup2\n        /* \"#utility.yul\":965:985   */\n      sub\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":950:959   */\n      dup4\n        /* \"#utility.yul\":946:963   */\n      add\n        /* \"#utility.yul\":939:986   */\n      mstore\n        /* \"#utility.yul\":1003:1134   */\n      tag_266\n        /* \"#utility.yul\":1129:1133   */\n      dup2\n        /* \"#utility.yul\":1003:1134   */\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":995:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":722:1141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1345   */\n    tag_215:\n        /* \"#utility.yul\":1337:1338   */\n      0x00\n        /* \"#utility.yul\":1334:1335   */\n      dup1\n        /* \"#utility.yul\":1327:1339   */\n      revert\n        /* \"#utility.yul\":1474:1623   */\n    tag_217:\n        /* \"#utility.yul\":1510:1517   */\n      0x00\n        /* \"#utility.yul\":1550:1616   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1543:1548   */\n      dup3\n        /* \"#utility.yul\":1539:1617   */\n      and\n        /* \"#utility.yul\":1528:1617   */\n      swap1\n      pop\n        /* \"#utility.yul\":1474:1623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1749   */\n    tag_218:\n        /* \"#utility.yul\":1701:1724   */\n      tag_272\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1701:1724   */\n      tag_217\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1725   */\n      eq\n        /* \"#utility.yul\":1681:1743   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1739:1740   */\n      0x00\n        /* \"#utility.yul\":1736:1737   */\n      dup1\n        /* \"#utility.yul\":1729:1741   */\n      revert\n        /* \"#utility.yul\":1681:1743   */\n    tag_273:\n        /* \"#utility.yul\":1629:1749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:1892   */\n    tag_219:\n        /* \"#utility.yul\":1800:1805   */\n      0x00\n        /* \"#utility.yul\":1838:1844   */\n      dup2\n        /* \"#utility.yul\":1825:1845   */\n      calldataload\n        /* \"#utility.yul\":1816:1845   */\n      swap1\n      pop\n        /* \"#utility.yul\":1854:1886   */\n      tag_275\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1854:1886   */\n      tag_218\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1755:1892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1898:2225   */\n    tag_25:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":1993:2002   */\n      dup3\n        /* \"#utility.yul\":1984:1991   */\n      dup5\n        /* \"#utility.yul\":1980:2003   */\n      sub\n        /* \"#utility.yul\":1976:2008   */\n      slt\n        /* \"#utility.yul\":1973:2092   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2011:2090   */\n      tag_278\n      tag_215\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1973:2092   */\n    tag_277:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2156:2208   */\n      tag_279\n        /* \"#utility.yul\":2200:2207   */\n      dup5\n        /* \"#utility.yul\":2191:2197   */\n      dup3\n        /* \"#utility.yul\":2180:2189   */\n      dup6\n        /* \"#utility.yul\":2176:2198   */\n      add\n        /* \"#utility.yul\":2156:2208   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2146:2208   */\n      swap2\n      pop\n        /* \"#utility.yul\":2102:2218   */\n      pop\n        /* \"#utility.yul\":1898:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2321   */\n    tag_220:\n        /* \"#utility.yul\":2265:2272   */\n      0x00\n        /* \"#utility.yul\":2308:2313   */\n      dup2\n        /* \"#utility.yul\":2301:2314   */\n      iszero\n        /* \"#utility.yul\":2294:2315   */\n      iszero\n        /* \"#utility.yul\":2283:2315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2436   */\n    tag_221:\n        /* \"#utility.yul\":2408:2429   */\n      tag_282\n        /* \"#utility.yul\":2423:2428   */\n      dup2\n        /* \"#utility.yul\":2408:2429   */\n      tag_220\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2403:2406   */\n      dup3\n        /* \"#utility.yul\":2396:2430   */\n      mstore\n        /* \"#utility.yul\":2327:2436   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2652   */\n    tag_28:\n        /* \"#utility.yul\":2529:2533   */\n      0x00\n        /* \"#utility.yul\":2567:2569   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup3\n        /* \"#utility.yul\":2552:2570   */\n      add\n        /* \"#utility.yul\":2544:2570   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2645   */\n      tag_284\n        /* \"#utility.yul\":2642:2643   */\n      0x00\n        /* \"#utility.yul\":2631:2640   */\n      dup4\n        /* \"#utility.yul\":2627:2644   */\n      add\n        /* \"#utility.yul\":2618:2624   */\n      dup5\n        /* \"#utility.yul\":2580:2645   */\n      tag_221\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2442:2652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:2735   */\n    tag_222:\n        /* \"#utility.yul\":2695:2702   */\n      0x00\n        /* \"#utility.yul\":2724:2729   */\n      dup2\n        /* \"#utility.yul\":2713:2729   */\n      swap1\n      pop\n        /* \"#utility.yul\":2658:2735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2863   */\n    tag_223:\n        /* \"#utility.yul\":2814:2838   */\n      tag_287\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2814:2838   */\n      tag_222\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2804:2839   */\n      eq\n        /* \"#utility.yul\":2794:2857   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      dup1\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2794:2857   */\n    tag_288:\n        /* \"#utility.yul\":2741:2863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3008   */\n    tag_224:\n        /* \"#utility.yul\":2915:2920   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      dup2\n        /* \"#utility.yul\":2940:2960   */\n      calldataload\n        /* \"#utility.yul\":2931:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3002   */\n      tag_290\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2969:3002   */\n      tag_223\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2869:3008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3014:3343   */\n    tag_32:\n        /* \"#utility.yul\":3073:3079   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3110:3119   */\n      dup3\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3097:3120   */\n      sub\n        /* \"#utility.yul\":3093:3125   */\n      slt\n        /* \"#utility.yul\":3090:3209   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3128:3207   */\n      tag_293\n      tag_215\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3090:3209   */\n    tag_292:\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3273:3326   */\n      tag_294\n        /* \"#utility.yul\":3318:3325   */\n      dup5\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3298:3307   */\n      dup6\n        /* \"#utility.yul\":3294:3316   */\n      add\n        /* \"#utility.yul\":3273:3326   */\n      tag_224\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3263:3326   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3336   */\n      pop\n        /* \"#utility.yul\":3014:3343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3467   */\n    tag_225:\n        /* \"#utility.yul\":3436:3460   */\n      tag_296\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3436:3460   */\n      tag_222\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3461   */\n      mstore\n        /* \"#utility.yul\":3349:3467   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3695   */\n    tag_35:\n        /* \"#utility.yul\":3566:3570   */\n      0x00\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3593:3602   */\n      dup3\n        /* \"#utility.yul\":3589:3607   */\n      add\n        /* \"#utility.yul\":3581:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3617:3688   */\n      tag_298\n        /* \"#utility.yul\":3685:3686   */\n      0x00\n        /* \"#utility.yul\":3674:3683   */\n      dup4\n        /* \"#utility.yul\":3670:3687   */\n      add\n        /* \"#utility.yul\":3661:3667   */\n      dup5\n        /* \"#utility.yul\":3617:3688   */\n      tag_225\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3473:3695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3701:3778   */\n    tag_226:\n        /* \"#utility.yul\":3738:3745   */\n      0x00\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3756:3772   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3784:3906   */\n    tag_227:\n        /* \"#utility.yul\":3857:3881   */\n      tag_301\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3857:3881   */\n      tag_226\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3850:3855   */\n      dup2\n        /* \"#utility.yul\":3847:3882   */\n      eq\n        /* \"#utility.yul\":3837:3900   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3893:3894   */\n      dup1\n        /* \"#utility.yul\":3886:3898   */\n      revert\n        /* \"#utility.yul\":3837:3900   */\n    tag_302:\n        /* \"#utility.yul\":3784:3906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4051   */\n    tag_228:\n        /* \"#utility.yul\":3958:3963   */\n      0x00\n        /* \"#utility.yul\":3996:4002   */\n      dup2\n        /* \"#utility.yul\":3983:4003   */\n      calldataload\n        /* \"#utility.yul\":3974:4003   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4045   */\n      tag_304\n        /* \"#utility.yul\":4039:4044   */\n      dup2\n        /* \"#utility.yul\":4012:4045   */\n      tag_227\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3912:4051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4057:4386   */\n    tag_43:\n        /* \"#utility.yul\":4116:4122   */\n      0x00\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4153:4162   */\n      dup3\n        /* \"#utility.yul\":4144:4151   */\n      dup5\n        /* \"#utility.yul\":4140:4163   */\n      sub\n        /* \"#utility.yul\":4136:4168   */\n      slt\n        /* \"#utility.yul\":4133:4252   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4171:4250   */\n      tag_307\n      tag_215\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4133:4252   */\n    tag_306:\n        /* \"#utility.yul\":4291:4292   */\n      0x00\n        /* \"#utility.yul\":4316:4369   */\n      tag_308\n        /* \"#utility.yul\":4361:4368   */\n      dup5\n        /* \"#utility.yul\":4352:4358   */\n      dup3\n        /* \"#utility.yul\":4341:4350   */\n      dup6\n        /* \"#utility.yul\":4337:4359   */\n      add\n        /* \"#utility.yul\":4316:4369   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4306:4369   */\n      swap2\n      pop\n        /* \"#utility.yul\":4262:4379   */\n      pop\n        /* \"#utility.yul\":4057:4386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4392:4518   */\n    tag_229:\n        /* \"#utility.yul\":4429:4436   */\n      0x00\n        /* \"#utility.yul\":4469:4511   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4462:4467   */\n      dup3\n        /* \"#utility.yul\":4458:4512   */\n      and\n        /* \"#utility.yul\":4447:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4392:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4620   */\n    tag_230:\n        /* \"#utility.yul\":4561:4568   */\n      0x00\n        /* \"#utility.yul\":4590:4614   */\n      tag_311\n        /* \"#utility.yul\":4608:4613   */\n      dup3\n        /* \"#utility.yul\":4590:4614   */\n      tag_229\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4579:4614   */\n      swap1\n      pop\n        /* \"#utility.yul\":4524:4620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:4748   */\n    tag_231:\n        /* \"#utility.yul\":4699:4723   */\n      tag_313\n        /* \"#utility.yul\":4717:4722   */\n      dup2\n        /* \"#utility.yul\":4699:4723   */\n      tag_230\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4692:4697   */\n      dup2\n        /* \"#utility.yul\":4689:4724   */\n      eq\n        /* \"#utility.yul\":4679:4742   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4738:4739   */\n      0x00\n        /* \"#utility.yul\":4735:4736   */\n      dup1\n        /* \"#utility.yul\":4728:4740   */\n      revert\n        /* \"#utility.yul\":4679:4742   */\n    tag_314:\n        /* \"#utility.yul\":4626:4748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4754:4893   */\n    tag_232:\n        /* \"#utility.yul\":4800:4805   */\n      0x00\n        /* \"#utility.yul\":4838:4844   */\n      dup2\n        /* \"#utility.yul\":4825:4845   */\n      calldataload\n        /* \"#utility.yul\":4816:4845   */\n      swap1\n      pop\n        /* \"#utility.yul\":4854:4887   */\n      tag_316\n        /* \"#utility.yul\":4881:4886   */\n      dup2\n        /* \"#utility.yul\":4854:4887   */\n      tag_231\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4754:4893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4899:5373   */\n    tag_48:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":5024:5026   */\n      0x40\n        /* \"#utility.yul\":5012:5021   */\n      dup4\n        /* \"#utility.yul\":5003:5010   */\n      dup6\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5027   */\n      slt\n        /* \"#utility.yul\":4992:5111   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5030:5109   */\n      tag_319\n      tag_215\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4992:5111   */\n    tag_318:\n        /* \"#utility.yul\":5150:5151   */\n      0x00\n        /* \"#utility.yul\":5175:5228   */\n      tag_320\n        /* \"#utility.yul\":5220:5227   */\n      dup6\n        /* \"#utility.yul\":5211:5217   */\n      dup3\n        /* \"#utility.yul\":5200:5209   */\n      dup7\n        /* \"#utility.yul\":5196:5218   */\n      add\n        /* \"#utility.yul\":5175:5228   */\n      tag_224\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5165:5228   */\n      swap3\n      pop\n        /* \"#utility.yul\":5121:5238   */\n      pop\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5303:5356   */\n      tag_321\n        /* \"#utility.yul\":5348:5355   */\n      dup6\n        /* \"#utility.yul\":5339:5345   */\n      dup3\n        /* \"#utility.yul\":5328:5337   */\n      dup7\n        /* \"#utility.yul\":5324:5346   */\n      add\n        /* \"#utility.yul\":5303:5356   */\n      tag_232\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5293:5356   */\n      swap2\n      pop\n        /* \"#utility.yul\":5248:5366   */\n      pop\n        /* \"#utility.yul\":4899:5373   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5379:5548   */\n    tag_233:\n        /* \"#utility.yul\":5519:5536   */\n      0x49434f206973206f766572203a28200000000000000000000000000000000000\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5507:5513   */\n      dup3\n        /* \"#utility.yul\":5503:5517   */\n      add\n        /* \"#utility.yul\":5496:5537   */\n      mstore\n        /* \"#utility.yul\":5379:5548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5940   */\n    tag_234:\n        /* \"#utility.yul\":5700:5703   */\n      0x00\n        /* \"#utility.yul\":5725:5792   */\n      tag_324\n        /* \"#utility.yul\":5789:5791   */\n      0x0f\n        /* \"#utility.yul\":5784:5787   */\n      dup4\n        /* \"#utility.yul\":5725:5792   */\n      tag_211\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5718:5792   */\n      swap2\n      pop\n        /* \"#utility.yul\":5805:5898   */\n      tag_325\n        /* \"#utility.yul\":5894:5897   */\n      dup3\n        /* \"#utility.yul\":5805:5898   */\n      tag_233\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5927:5929   */\n      0x20\n        /* \"#utility.yul\":5922:5925   */\n      dup3\n        /* \"#utility.yul\":5918:5930   */\n      add\n        /* \"#utility.yul\":5911:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5558:5940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5950:6385   */\n    tag_79:\n        /* \"#utility.yul\":6116:6120   */\n      0x00\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6147:6156   */\n      dup3\n        /* \"#utility.yul\":6143:6161   */\n      add\n        /* \"#utility.yul\":6135:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6211:6220   */\n      dup2\n        /* \"#utility.yul\":6205:6209   */\n      dup2\n        /* \"#utility.yul\":6201:6221   */\n      sub\n        /* \"#utility.yul\":6197:6198   */\n      0x00\n        /* \"#utility.yul\":6186:6195   */\n      dup4\n        /* \"#utility.yul\":6182:6199   */\n      add\n        /* \"#utility.yul\":6175:6222   */\n      mstore\n        /* \"#utility.yul\":6243:6374   */\n      tag_327\n        /* \"#utility.yul\":6369:6373   */\n      dup2\n        /* \"#utility.yul\":6243:6374   */\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6235:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":5950:6385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6580   */\n    tag_235:\n        /* \"#utility.yul\":6539:6568   */\n      0x7468656d2f7468657920706c656173652073656e64206d657469730000000000\n        /* \"#utility.yul\":6535:6536   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6523:6537   */\n      add\n        /* \"#utility.yul\":6516:6569   */\n      mstore\n        /* \"#utility.yul\":6395:6580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6972   */\n    tag_236:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6757:6824   */\n      tag_330\n        /* \"#utility.yul\":6821:6823   */\n      0x1b\n        /* \"#utility.yul\":6816:6819   */\n      dup4\n        /* \"#utility.yul\":6757:6824   */\n      tag_211\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6750:6824   */\n      swap2\n      pop\n        /* \"#utility.yul\":6837:6930   */\n      tag_331\n        /* \"#utility.yul\":6926:6929   */\n      dup3\n        /* \"#utility.yul\":6837:6930   */\n      tag_235\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"#utility.yul\":6954:6957   */\n      dup3\n        /* \"#utility.yul\":6950:6962   */\n      add\n        /* \"#utility.yul\":6943:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7417   */\n    tag_83:\n        /* \"#utility.yul\":7148:7152   */\n      0x00\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7179:7188   */\n      dup3\n        /* \"#utility.yul\":7175:7193   */\n      add\n        /* \"#utility.yul\":7167:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":7243:7252   */\n      dup2\n        /* \"#utility.yul\":7237:7241   */\n      dup2\n        /* \"#utility.yul\":7233:7253   */\n      sub\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7218:7227   */\n      dup4\n        /* \"#utility.yul\":7214:7231   */\n      add\n        /* \"#utility.yul\":7207:7254   */\n      mstore\n        /* \"#utility.yul\":7275:7406   */\n      tag_333\n        /* \"#utility.yul\":7401:7405   */\n      dup2\n        /* \"#utility.yul\":7275:7406   */\n      tag_236\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7267:7406   */\n      swap1\n      pop\n        /* \"#utility.yul\":6982:7417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:7623   */\n    tag_237:\n        /* \"#utility.yul\":7479:7556   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7476:7477   */\n      0x00\n        /* \"#utility.yul\":7469:7557   */\n      mstore\n        /* \"#utility.yul\":7580:7584   */\n      0x11\n        /* \"#utility.yul\":7577:7578   */\n      0x04\n        /* \"#utility.yul\":7570:7585   */\n      mstore\n        /* \"#utility.yul\":7608:7612   */\n      0x24\n        /* \"#utility.yul\":7605:7606   */\n      0x00\n        /* \"#utility.yul\":7598:7613   */\n      revert\n        /* \"#utility.yul\":7633:7844   */\n    tag_87:\n        /* \"#utility.yul\":7673:7676   */\n      0x00\n        /* \"#utility.yul\":7696:7716   */\n      tag_336\n        /* \"#utility.yul\":7714:7715   */\n      dup3\n        /* \"#utility.yul\":7696:7716   */\n      tag_226\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7691:7716   */\n      swap2\n      pop\n        /* \"#utility.yul\":7734:7754   */\n      tag_337\n        /* \"#utility.yul\":7752:7753   */\n      dup4\n        /* \"#utility.yul\":7734:7754   */\n      tag_226\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7729:7754   */\n      swap3\n      pop\n        /* \"#utility.yul\":7781:7782   */\n      dup3\n        /* \"#utility.yul\":7778:7779   */\n      dup3\n        /* \"#utility.yul\":7774:7783   */\n      add\n        /* \"#utility.yul\":7767:7783   */\n      swap1\n      pop\n        /* \"#utility.yul\":7806:7809   */\n      dup1\n        /* \"#utility.yul\":7803:7804   */\n      dup3\n        /* \"#utility.yul\":7800:7810   */\n      gt\n        /* \"#utility.yul\":7797:7833   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7813:7831   */\n      tag_339\n      tag_237\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7797:7833   */\n    tag_338:\n        /* \"#utility.yul\":7633:7844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8038   */\n    tag_238:\n        /* \"#utility.yul\":7998:8026   */\n      0x657863656564732074686520746f74616c20666f722073616c65000000000000\n        /* \"#utility.yul\":7994:7995   */\n      0x00\n        /* \"#utility.yul\":7986:7992   */\n      dup3\n        /* \"#utility.yul\":7982:7996   */\n      add\n        /* \"#utility.yul\":7975:8027   */\n      mstore\n        /* \"#utility.yul\":7854:8038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8048:8430   */\n    tag_239:\n        /* \"#utility.yul\":8190:8193   */\n      0x00\n        /* \"#utility.yul\":8215:8282   */\n      tag_342\n        /* \"#utility.yul\":8279:8281   */\n      0x1a\n        /* \"#utility.yul\":8274:8277   */\n      dup4\n        /* \"#utility.yul\":8215:8282   */\n      tag_211\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8208:8282   */\n      swap2\n      pop\n        /* \"#utility.yul\":8295:8388   */\n      tag_343\n        /* \"#utility.yul\":8384:8387   */\n      dup3\n        /* \"#utility.yul\":8295:8388   */\n      tag_238\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8417:8419   */\n      0x20\n        /* \"#utility.yul\":8412:8415   */\n      dup3\n        /* \"#utility.yul\":8408:8420   */\n      add\n        /* \"#utility.yul\":8401:8420   */\n      swap1\n      pop\n        /* \"#utility.yul\":8048:8430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8875   */\n    tag_90:\n        /* \"#utility.yul\":8606:8610   */\n      0x00\n        /* \"#utility.yul\":8648:8650   */\n      0x20\n        /* \"#utility.yul\":8637:8646   */\n      dup3\n        /* \"#utility.yul\":8633:8651   */\n      add\n        /* \"#utility.yul\":8625:8651   */\n      swap1\n      pop\n        /* \"#utility.yul\":8701:8710   */\n      dup2\n        /* \"#utility.yul\":8695:8699   */\n      dup2\n        /* \"#utility.yul\":8691:8711   */\n      sub\n        /* \"#utility.yul\":8687:8688   */\n      0x00\n        /* \"#utility.yul\":8676:8685   */\n      dup4\n        /* \"#utility.yul\":8672:8689   */\n      add\n        /* \"#utility.yul\":8665:8712   */\n      mstore\n        /* \"#utility.yul\":8733:8864   */\n      tag_345\n        /* \"#utility.yul\":8859:8863   */\n      dup2\n        /* \"#utility.yul\":8733:8864   */\n      tag_239\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8725:8864   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8885:9011   */\n    tag_240:\n        /* \"#utility.yul\":8976:9000   */\n      tag_347\n        /* \"#utility.yul\":8994:8999   */\n      dup2\n        /* \"#utility.yul\":8976:9000   */\n      tag_230\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8971:8974   */\n      dup3\n        /* \"#utility.yul\":8964:9001   */\n      mstore\n        /* \"#utility.yul\":8885:9011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9021:9369   */\n    tag_92:\n        /* \"#utility.yul\":9142:9146   */\n      0x00\n        /* \"#utility.yul\":9184:9186   */\n      0x40\n        /* \"#utility.yul\":9173:9182   */\n      dup3\n        /* \"#utility.yul\":9169:9187   */\n      add\n        /* \"#utility.yul\":9161:9187   */\n      swap1\n      pop\n        /* \"#utility.yul\":9201:9272   */\n      tag_349\n        /* \"#utility.yul\":9269:9270   */\n      0x00\n        /* \"#utility.yul\":9258:9267   */\n      dup4\n        /* \"#utility.yul\":9254:9271   */\n      add\n        /* \"#utility.yul\":9245:9251   */\n      dup6\n        /* \"#utility.yul\":9201:9272   */\n      tag_240\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9286:9358   */\n      tag_350\n        /* \"#utility.yul\":9354:9356   */\n      0x20\n        /* \"#utility.yul\":9343:9352   */\n      dup4\n        /* \"#utility.yul\":9339:9357   */\n      add\n        /* \"#utility.yul\":9330:9336   */\n      dup5\n        /* \"#utility.yul\":9286:9358   */\n      tag_240\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9021:9369   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9534   */\n    tag_241:\n        /* \"#utility.yul\":9436:9441   */\n      0x00\n        /* \"#utility.yul\":9471:9477   */\n      dup2\n        /* \"#utility.yul\":9465:9478   */\n      mload\n        /* \"#utility.yul\":9456:9478   */\n      swap1\n      pop\n        /* \"#utility.yul\":9491:9524   */\n      tag_352\n        /* \"#utility.yul\":9518:9523   */\n      dup2\n        /* \"#utility.yul\":9491:9524   */\n      tag_227\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9379:9534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9544:9919   */\n    tag_96:\n        /* \"#utility.yul\":9614:9620   */\n      0x00\n        /* \"#utility.yul\":9667:9669   */\n      0x20\n        /* \"#utility.yul\":9655:9664   */\n      dup3\n        /* \"#utility.yul\":9646:9653   */\n      dup5\n        /* \"#utility.yul\":9642:9665   */\n      sub\n        /* \"#utility.yul\":9638:9670   */\n      slt\n        /* \"#utility.yul\":9635:9754   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9673:9752   */\n      tag_355\n      tag_215\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9635:9754   */\n    tag_354:\n        /* \"#utility.yul\":9801:9802   */\n      0x00\n        /* \"#utility.yul\":9830:9894   */\n      tag_356\n        /* \"#utility.yul\":9886:9893   */\n      dup5\n        /* \"#utility.yul\":9877:9883   */\n      dup3\n        /* \"#utility.yul\":9866:9875   */\n      dup6\n        /* \"#utility.yul\":9862:9884   */\n      add\n        /* \"#utility.yul\":9830:9894   */\n      tag_241\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9820:9894   */\n      swap2\n      pop\n        /* \"#utility.yul\":9768:9908   */\n      pop\n        /* \"#utility.yul\":9544:9919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9929:10055   */\n    tag_242:\n        /* \"#utility.yul\":10020:10044   */\n      tag_358\n        /* \"#utility.yul\":10038:10043   */\n      dup2\n        /* \"#utility.yul\":10020:10044   */\n      tag_226\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10015:10018   */\n      dup3\n        /* \"#utility.yul\":10008:10045   */\n      mstore\n        /* \"#utility.yul\":9929:10055   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10065:10413   */\n    tag_98:\n        /* \"#utility.yul\":10186:10190   */\n      0x00\n        /* \"#utility.yul\":10228:10230   */\n      0x40\n        /* \"#utility.yul\":10217:10226   */\n      dup3\n        /* \"#utility.yul\":10213:10231   */\n      add\n        /* \"#utility.yul\":10205:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10245:10316   */\n      tag_360\n        /* \"#utility.yul\":10313:10314   */\n      0x00\n        /* \"#utility.yul\":10302:10311   */\n      dup4\n        /* \"#utility.yul\":10298:10315   */\n      add\n        /* \"#utility.yul\":10289:10295   */\n      dup6\n        /* \"#utility.yul\":10245:10316   */\n      tag_240\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10330:10402   */\n      tag_361\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10387:10396   */\n      dup4\n        /* \"#utility.yul\":10383:10401   */\n      add\n        /* \"#utility.yul\":10374:10380   */\n      dup5\n        /* \"#utility.yul\":10330:10402   */\n      tag_242\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10065:10413   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10423:10547   */\n    tag_243:\n        /* \"#utility.yul\":10497:10518   */\n      tag_363\n        /* \"#utility.yul\":10512:10517   */\n      dup2\n        /* \"#utility.yul\":10497:10518   */\n      tag_220\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10487:10519   */\n      eq\n        /* \"#utility.yul\":10477:10537   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":10533:10534   */\n      0x00\n        /* \"#utility.yul\":10530:10531   */\n      dup1\n        /* \"#utility.yul\":10523:10535   */\n      revert\n        /* \"#utility.yul\":10477:10537   */\n    tag_364:\n        /* \"#utility.yul\":10423:10547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10557:10706   */\n    tag_244:\n        /* \"#utility.yul\":10611:10616   */\n      0x00\n        /* \"#utility.yul\":10646:10652   */\n      dup2\n        /* \"#utility.yul\":10640:10653   */\n      mload\n        /* \"#utility.yul\":10631:10653   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10696   */\n      tag_366\n        /* \"#utility.yul\":10690:10695   */\n      dup2\n        /* \"#utility.yul\":10666:10696   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10557:10706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10716:11085   */\n    tag_102:\n        /* \"#utility.yul\":10783:10789   */\n      0x00\n        /* \"#utility.yul\":10836:10838   */\n      0x20\n        /* \"#utility.yul\":10824:10833   */\n      dup3\n        /* \"#utility.yul\":10815:10822   */\n      dup5\n        /* \"#utility.yul\":10811:10834   */\n      sub\n        /* \"#utility.yul\":10807:10839   */\n      slt\n        /* \"#utility.yul\":10804:10923   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":10842:10921   */\n      tag_369\n      tag_215\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10804:10923   */\n    tag_368:\n        /* \"#utility.yul\":10970:10971   */\n      0x00\n        /* \"#utility.yul\":10999:11060   */\n      tag_370\n        /* \"#utility.yul\":11052:11059   */\n      dup5\n        /* \"#utility.yul\":11043:11049   */\n      dup3\n        /* \"#utility.yul\":11032:11041   */\n      dup6\n        /* \"#utility.yul\":11028:11050   */\n      add\n        /* \"#utility.yul\":10999:11060   */\n      tag_244\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10989:11060   */\n      swap2\n      pop\n        /* \"#utility.yul\":10937:11074   */\n      pop\n        /* \"#utility.yul\":10716:11085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11095:11329   */\n    tag_105:\n        /* \"#utility.yul\":11188:11192   */\n      0x00\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"#utility.yul\":11219:11228   */\n      dup3\n        /* \"#utility.yul\":11215:11233   */\n      add\n        /* \"#utility.yul\":11207:11233   */\n      swap1\n      pop\n        /* \"#utility.yul\":11247:11318   */\n      tag_372\n        /* \"#utility.yul\":11315:11316   */\n      0x00\n        /* \"#utility.yul\":11304:11313   */\n      dup4\n        /* \"#utility.yul\":11300:11317   */\n      add\n        /* \"#utility.yul\":11291:11297   */\n      dup5\n        /* \"#utility.yul\":11247:11318   */\n      tag_242\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11095:11329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11585   */\n    tag_245:\n        /* \"#utility.yul\":11483:11517   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11479:11480   */\n      0x00\n        /* \"#utility.yul\":11471:11477   */\n      dup3\n        /* \"#utility.yul\":11467:11481   */\n      add\n        /* \"#utility.yul\":11460:11518   */\n      mstore\n        /* \"#utility.yul\":11556:11573   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11551:11553   */\n      0x20\n        /* \"#utility.yul\":11543:11549   */\n      dup3\n        /* \"#utility.yul\":11539:11554   */\n      add\n        /* \"#utility.yul\":11532:11574   */\n      mstore\n        /* \"#utility.yul\":11339:11585   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11595:11977   */\n    tag_246:\n        /* \"#utility.yul\":11737:11740   */\n      0x00\n        /* \"#utility.yul\":11762:11829   */\n      tag_375\n        /* \"#utility.yul\":11826:11828   */\n      0x2f\n        /* \"#utility.yul\":11821:11824   */\n      dup4\n        /* \"#utility.yul\":11762:11829   */\n      tag_211\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11755:11829   */\n      swap2\n      pop\n        /* \"#utility.yul\":11842:11935   */\n      tag_376\n        /* \"#utility.yul\":11931:11934   */\n      dup3\n        /* \"#utility.yul\":11842:11935   */\n      tag_245\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11964:11966   */\n      0x40\n        /* \"#utility.yul\":11959:11962   */\n      dup3\n        /* \"#utility.yul\":11955:11967   */\n      add\n        /* \"#utility.yul\":11948:11967   */\n      swap1\n      pop\n        /* \"#utility.yul\":11595:11977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11987:12422   */\n    tag_137:\n        /* \"#utility.yul\":12153:12157   */\n      0x00\n        /* \"#utility.yul\":12195:12197   */\n      0x20\n        /* \"#utility.yul\":12184:12193   */\n      dup3\n        /* \"#utility.yul\":12180:12198   */\n      add\n        /* \"#utility.yul\":12172:12198   */\n      swap1\n      pop\n        /* \"#utility.yul\":12248:12257   */\n      dup2\n        /* \"#utility.yul\":12242:12246   */\n      dup2\n        /* \"#utility.yul\":12238:12258   */\n      sub\n        /* \"#utility.yul\":12234:12235   */\n      0x00\n        /* \"#utility.yul\":12223:12232   */\n      dup4\n        /* \"#utility.yul\":12219:12236   */\n      add\n        /* \"#utility.yul\":12212:12259   */\n      mstore\n        /* \"#utility.yul\":12280:12411   */\n      tag_378\n        /* \"#utility.yul\":12406:12410   */\n      dup2\n        /* \"#utility.yul\":12280:12411   */\n      tag_246\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12272:12411   */\n      swap1\n      pop\n        /* \"#utility.yul\":11987:12422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12432:12890   */\n    tag_171:\n        /* \"#utility.yul\":12472:12479   */\n      0x00\n        /* \"#utility.yul\":12499:12519   */\n      tag_380\n        /* \"#utility.yul\":12517:12518   */\n      dup3\n        /* \"#utility.yul\":12499:12519   */\n      tag_226\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12494:12519   */\n      swap2\n      pop\n        /* \"#utility.yul\":12537:12557   */\n      tag_381\n        /* \"#utility.yul\":12555:12556   */\n      dup4\n        /* \"#utility.yul\":12537:12557   */\n      tag_226\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12532:12557   */\n      swap3\n      pop\n        /* \"#utility.yul\":12596:12597   */\n      dup3\n        /* \"#utility.yul\":12593:12594   */\n      dup3\n        /* \"#utility.yul\":12589:12598   */\n      mul\n        /* \"#utility.yul\":12622:12652   */\n      tag_382\n        /* \"#utility.yul\":12640:12651   */\n      dup2\n        /* \"#utility.yul\":12622:12652   */\n      tag_226\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12611:12652   */\n      swap2\n      pop\n        /* \"#utility.yul\":12821:12822   */\n      dup3\n        /* \"#utility.yul\":12812:12819   */\n      dup3\n        /* \"#utility.yul\":12808:12823   */\n      div\n        /* \"#utility.yul\":12805:12806   */\n      dup5\n        /* \"#utility.yul\":12802:12824   */\n      eq\n        /* \"#utility.yul\":12778:12779   */\n      dup4\n        /* \"#utility.yul\":12771:12780   */\n      iszero\n        /* \"#utility.yul\":12747:12842   */\n      or\n        /* \"#utility.yul\":12720:12879   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":12859:12877   */\n      tag_384\n      tag_237\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12720:12879   */\n    tag_383:\n        /* \"#utility.yul\":12480:12890   */\n      pop\n        /* \"#utility.yul\":12432:12890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12900:13056   */\n    tag_247:\n        /* \"#utility.yul\":13002:13013   */\n      0x00\n        /* \"#utility.yul\":13043:13046   */\n      dup2\n        /* \"#utility.yul\":13028:13046   */\n      swap1\n      pop\n        /* \"#utility.yul\":12900:13056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13066:13247   */\n    tag_248:\n        /* \"#utility.yul\":13210:13235   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13206:13207   */\n      0x00\n        /* \"#utility.yul\":13198:13204   */\n      dup3\n        /* \"#utility.yul\":13194:13208   */\n      add\n        /* \"#utility.yul\":13187:13236   */\n      mstore\n        /* \"#utility.yul\":13066:13247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13257:13675   */\n    tag_249:\n        /* \"#utility.yul\":13417:13420   */\n      0x00\n        /* \"#utility.yul\":13442:13527   */\n      tag_388\n        /* \"#utility.yul\":13524:13526   */\n      0x17\n        /* \"#utility.yul\":13519:13522   */\n      dup4\n        /* \"#utility.yul\":13442:13527   */\n      tag_247\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13435:13527   */\n      swap2\n      pop\n        /* \"#utility.yul\":13540:13633   */\n      tag_389\n        /* \"#utility.yul\":13629:13632   */\n      dup3\n        /* \"#utility.yul\":13540:13633   */\n      tag_248\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13662:13664   */\n      0x17\n        /* \"#utility.yul\":13657:13660   */\n      dup3\n        /* \"#utility.yul\":13653:13665   */\n      add\n        /* \"#utility.yul\":13646:13665   */\n      swap1\n      pop\n        /* \"#utility.yul\":13257:13675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13685:13792   */\n    tag_250:\n        /* \"#utility.yul\":13737:13743   */\n      0x00\n        /* \"#utility.yul\":13775:13780   */\n      dup2\n        /* \"#utility.yul\":13769:13781   */\n      mload\n        /* \"#utility.yul\":13759:13781   */\n      swap1\n      pop\n        /* \"#utility.yul\":13685:13792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13802:14076   */\n    tag_251:\n        /* \"#utility.yul\":13887:13888   */\n      0x00\n        /* \"#utility.yul\":13901:14026   */\n    tag_392:\n        /* \"#utility.yul\":13915:13921   */\n      dup4\n        /* \"#utility.yul\":13912:13913   */\n      dup2\n        /* \"#utility.yul\":13909:13922   */\n      lt\n        /* \"#utility.yul\":13901:14026   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":14008:14009   */\n      dup1\n        /* \"#utility.yul\":14003:14006   */\n      dup3\n        /* \"#utility.yul\":13999:14010   */\n      add\n        /* \"#utility.yul\":13993:14011   */\n      mload\n        /* \"#utility.yul\":13989:13990   */\n      dup2\n        /* \"#utility.yul\":13984:13987   */\n      dup5\n        /* \"#utility.yul\":13980:13991   */\n      add\n        /* \"#utility.yul\":13973:14012   */\n      mstore\n        /* \"#utility.yul\":13937:13939   */\n      0x20\n        /* \"#utility.yul\":13934:13935   */\n      dup2\n        /* \"#utility.yul\":13930:13940   */\n      add\n        /* \"#utility.yul\":13925:13940   */\n      swap1\n      pop\n        /* \"#utility.yul\":13901:14026   */\n      jump(tag_392)\n    tag_394:\n        /* \"#utility.yul\":14064:14065   */\n      0x00\n        /* \"#utility.yul\":14055:14061   */\n      dup5\n        /* \"#utility.yul\":14050:14053   */\n      dup5\n        /* \"#utility.yul\":14046:14062   */\n      add\n        /* \"#utility.yul\":14039:14066   */\n      mstore\n        /* \"#utility.yul\":13864:14076   */\n      pop\n        /* \"#utility.yul\":13802:14076   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14086:14496   */\n    tag_252:\n        /* \"#utility.yul\":14192:14195   */\n      0x00\n        /* \"#utility.yul\":14224:14263   */\n      tag_396\n        /* \"#utility.yul\":14257:14262   */\n      dup3\n        /* \"#utility.yul\":14224:14263   */\n      tag_250\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14283:14372   */\n      tag_397\n        /* \"#utility.yul\":14365:14371   */\n      dup2\n        /* \"#utility.yul\":14360:14363   */\n      dup6\n        /* \"#utility.yul\":14283:14372   */\n      tag_247\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14276:14372   */\n      swap4\n      pop\n        /* \"#utility.yul\":14385:14450   */\n      tag_398\n        /* \"#utility.yul\":14443:14449   */\n      dup2\n        /* \"#utility.yul\":14438:14441   */\n      dup6\n        /* \"#utility.yul\":14431:14435   */\n      0x20\n        /* \"#utility.yul\":14424:14429   */\n      dup7\n        /* \"#utility.yul\":14420:14436   */\n      add\n        /* \"#utility.yul\":14385:14450   */\n      tag_251\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14479:14485   */\n      dup1\n        /* \"#utility.yul\":14474:14477   */\n      dup5\n        /* \"#utility.yul\":14470:14486   */\n      add\n        /* \"#utility.yul\":14463:14486   */\n      swap2\n      pop\n        /* \"#utility.yul\":14196:14496   */\n      pop\n        /* \"#utility.yul\":14086:14496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14506:14681   */\n    tag_253:\n        /* \"#utility.yul\":14650:14669   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":14646:14647   */\n      0x00\n        /* \"#utility.yul\":14638:14644   */\n      dup3\n        /* \"#utility.yul\":14634:14648   */\n      add\n        /* \"#utility.yul\":14627:14670   */\n      mstore\n        /* \"#utility.yul\":14506:14681   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14691:15109   */\n    tag_254:\n        /* \"#utility.yul\":14851:14854   */\n      0x00\n        /* \"#utility.yul\":14876:14961   */\n      tag_401\n        /* \"#utility.yul\":14958:14960   */\n      0x11\n        /* \"#utility.yul\":14953:14956   */\n      dup4\n        /* \"#utility.yul\":14876:14961   */\n      tag_247\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14869:14961   */\n      swap2\n      pop\n        /* \"#utility.yul\":14974:15067   */\n      tag_402\n        /* \"#utility.yul\":15063:15066   */\n      dup3\n        /* \"#utility.yul\":14974:15067   */\n      tag_253\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":15096:15098   */\n      0x11\n        /* \"#utility.yul\":15091:15094   */\n      dup3\n        /* \"#utility.yul\":15087:15099   */\n      add\n        /* \"#utility.yul\":15080:15099   */\n      swap1\n      pop\n        /* \"#utility.yul\":14691:15109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15119:16110   */\n    tag_180:\n        /* \"#utility.yul\":15501:15504   */\n      0x00\n        /* \"#utility.yul\":15527:15675   */\n      tag_404\n        /* \"#utility.yul\":15671:15674   */\n      dup3\n        /* \"#utility.yul\":15527:15675   */\n      tag_249\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15520:15675   */\n      swap2\n      pop\n        /* \"#utility.yul\":15696:15791   */\n      tag_405\n        /* \"#utility.yul\":15787:15790   */\n      dup3\n        /* \"#utility.yul\":15778:15784   */\n      dup6\n        /* \"#utility.yul\":15696:15791   */\n      tag_252\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15689:15791   */\n      swap2\n      pop\n        /* \"#utility.yul\":15812:15960   */\n      tag_406\n        /* \"#utility.yul\":15956:15959   */\n      dup3\n        /* \"#utility.yul\":15812:15960   */\n      tag_254\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15805:15960   */\n      swap2\n      pop\n        /* \"#utility.yul\":15981:16076   */\n      tag_407\n        /* \"#utility.yul\":16072:16075   */\n      dup3\n        /* \"#utility.yul\":16063:16069   */\n      dup5\n        /* \"#utility.yul\":15981:16076   */\n      tag_252\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":15974:16076   */\n      swap2\n      pop\n        /* \"#utility.yul\":16097:16100   */\n      dup2\n        /* \"#utility.yul\":16090:16100   */\n      swap1\n      pop\n        /* \"#utility.yul\":15119:16110   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16120:16230   */\n    tag_255:\n        /* \"#utility.yul\":16161:16167   */\n      0x00\n        /* \"#utility.yul\":16216:16218   */\n      0x1f\n        /* \"#utility.yul\":16212:16219   */\n      not\n        /* \"#utility.yul\":16207:16209   */\n      0x1f\n        /* \"#utility.yul\":16200:16205   */\n      dup4\n        /* \"#utility.yul\":16196:16210   */\n      add\n        /* \"#utility.yul\":16192:16220   */\n      and\n        /* \"#utility.yul\":16182:16220   */\n      swap1\n      pop\n        /* \"#utility.yul\":16120:16230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16240:16637   */\n    tag_256:\n        /* \"#utility.yul\":16328:16331   */\n      0x00\n        /* \"#utility.yul\":16360:16399   */\n      tag_410\n        /* \"#utility.yul\":16393:16398   */\n      dup3\n        /* \"#utility.yul\":16360:16399   */\n      tag_250\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16419:16490   */\n      tag_411\n        /* \"#utility.yul\":16483:16489   */\n      dup2\n        /* \"#utility.yul\":16478:16481   */\n      dup6\n        /* \"#utility.yul\":16419:16490   */\n      tag_211\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":16412:16490   */\n      swap4\n      pop\n        /* \"#utility.yul\":16503:16568   */\n      tag_412\n        /* \"#utility.yul\":16561:16567   */\n      dup2\n        /* \"#utility.yul\":16556:16559   */\n      dup6\n        /* \"#utility.yul\":16549:16553   */\n      0x20\n        /* \"#utility.yul\":16542:16547   */\n      dup7\n        /* \"#utility.yul\":16538:16554   */\n      add\n        /* \"#utility.yul\":16503:16568   */\n      tag_251\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":16597:16626   */\n      tag_413\n        /* \"#utility.yul\":16619:16625   */\n      dup2\n        /* \"#utility.yul\":16597:16626   */\n      tag_255\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":16592:16595   */\n      dup5\n        /* \"#utility.yul\":16588:16627   */\n      add\n        /* \"#utility.yul\":16581:16627   */\n      swap2\n      pop\n        /* \"#utility.yul\":16332:16637   */\n      pop\n        /* \"#utility.yul\":16240:16637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16647:16976   */\n    tag_182:\n        /* \"#utility.yul\":16760:16764   */\n      0x00\n        /* \"#utility.yul\":16802:16804   */\n      0x20\n        /* \"#utility.yul\":16791:16800   */\n      dup3\n        /* \"#utility.yul\":16787:16805   */\n      add\n        /* \"#utility.yul\":16779:16805   */\n      swap1\n      pop\n        /* \"#utility.yul\":16855:16864   */\n      dup2\n        /* \"#utility.yul\":16849:16853   */\n      dup2\n        /* \"#utility.yul\":16845:16865   */\n      sub\n        /* \"#utility.yul\":16841:16842   */\n      0x00\n        /* \"#utility.yul\":16830:16839   */\n      dup4\n        /* \"#utility.yul\":16826:16843   */\n      add\n        /* \"#utility.yul\":16819:16866   */\n      mstore\n        /* \"#utility.yul\":16887:16965   */\n      tag_415\n        /* \"#utility.yul\":16960:16964   */\n      dup2\n        /* \"#utility.yul\":16951:16957   */\n      dup5\n        /* \"#utility.yul\":16887:16965   */\n      tag_256\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16879:16965   */\n      swap1\n      pop\n        /* \"#utility.yul\":16647:16976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17182   */\n    tag_190:\n        /* \"#utility.yul\":17038:17115   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17035:17036   */\n      0x00\n        /* \"#utility.yul\":17028:17116   */\n      mstore\n        /* \"#utility.yul\":17139:17143   */\n      0x41\n        /* \"#utility.yul\":17136:17137   */\n      0x04\n        /* \"#utility.yul\":17129:17144   */\n      mstore\n        /* \"#utility.yul\":17167:17171   */\n      0x24\n        /* \"#utility.yul\":17164:17165   */\n      0x00\n        /* \"#utility.yul\":17157:17172   */\n      revert\n        /* \"#utility.yul\":17192:17388   */\n    tag_194:\n        /* \"#utility.yul\":17244:17321   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17241:17242   */\n      0x00\n        /* \"#utility.yul\":17234:17322   */\n      mstore\n        /* \"#utility.yul\":17345:17349   */\n      0x32\n        /* \"#utility.yul\":17342:17343   */\n      0x04\n        /* \"#utility.yul\":17335:17350   */\n      mstore\n        /* \"#utility.yul\":17373:17377   */\n      0x24\n        /* \"#utility.yul\":17370:17371   */\n      0x00\n        /* \"#utility.yul\":17363:17378   */\n      revert\n        /* \"#utility.yul\":17398:17585   */\n    tag_207:\n        /* \"#utility.yul\":17437:17440   */\n      0x00\n        /* \"#utility.yul\":17464:17488   */\n      tag_419\n        /* \"#utility.yul\":17482:17487   */\n      dup3\n        /* \"#utility.yul\":17464:17488   */\n      tag_226\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":17455:17488   */\n      swap2\n      pop\n        /* \"#utility.yul\":17514:17518   */\n      0x00\n        /* \"#utility.yul\":17507:17512   */\n      dup3\n        /* \"#utility.yul\":17504:17519   */\n      sub\n        /* \"#utility.yul\":17501:17542   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":17522:17540   */\n      tag_421\n      tag_237\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":17501:17542   */\n    tag_420:\n        /* \"#utility.yul\":17573:17574   */\n      0x01\n        /* \"#utility.yul\":17566:17571   */\n      dup3\n        /* \"#utility.yul\":17562:17575   */\n      sub\n        /* \"#utility.yul\":17555:17575   */\n      swap1\n      pop\n        /* \"#utility.yul\":17398:17585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17595:17785   */\n    tag_257:\n        /* \"#utility.yul\":17739:17773   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":17735:17736   */\n      0x00\n        /* \"#utility.yul\":17727:17733   */\n      dup3\n        /* \"#utility.yul\":17723:17737   */\n      add\n        /* \"#utility.yul\":17716:17774   */\n      mstore\n        /* \"#utility.yul\":17595:17785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17795:18177   */\n    tag_258:\n        /* \"#utility.yul\":17937:17940   */\n      0x00\n        /* \"#utility.yul\":17962:18029   */\n      tag_424\n        /* \"#utility.yul\":18026:18028   */\n      0x20\n        /* \"#utility.yul\":18021:18024   */\n      dup4\n        /* \"#utility.yul\":17962:18029   */\n      tag_211\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":17955:18029   */\n      swap2\n      pop\n        /* \"#utility.yul\":18042:18135   */\n      tag_425\n        /* \"#utility.yul\":18131:18134   */\n      dup3\n        /* \"#utility.yul\":18042:18135   */\n      tag_257\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":18164:18166   */\n      0x20\n        /* \"#utility.yul\":18159:18162   */\n      dup3\n        /* \"#utility.yul\":18155:18167   */\n      add\n        /* \"#utility.yul\":18148:18167   */\n      swap1\n      pop\n        /* \"#utility.yul\":17795:18177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18187:18622   */\n    tag_210:\n        /* \"#utility.yul\":18353:18357   */\n      0x00\n        /* \"#utility.yul\":18395:18397   */\n      0x20\n        /* \"#utility.yul\":18384:18393   */\n      dup3\n        /* \"#utility.yul\":18380:18398   */\n      add\n        /* \"#utility.yul\":18372:18398   */\n      swap1\n      pop\n        /* \"#utility.yul\":18448:18457   */\n      dup2\n        /* \"#utility.yul\":18442:18446   */\n      dup2\n        /* \"#utility.yul\":18438:18458   */\n      sub\n        /* \"#utility.yul\":18434:18435   */\n      0x00\n        /* \"#utility.yul\":18423:18432   */\n      dup4\n        /* \"#utility.yul\":18419:18436   */\n      add\n        /* \"#utility.yul\":18412:18459   */\n      mstore\n        /* \"#utility.yul\":18480:18611   */\n      tag_427\n        /* \"#utility.yul\":18606:18610   */\n      dup2\n        /* \"#utility.yul\":18480:18611   */\n      tag_258\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":18472:18611   */\n      swap1\n      pop\n        /* \"#utility.yul\":18187:18622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202ceacbcb09a77daade85a9cdc39e13b7cac45d5c8b54108a7cac7f5b87e8a53b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1986": {
									"entryPoint": null,
									"id": 1986,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 450,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_478": {
									"entryPoint": 797,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 691,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052640430e2340060055569152d02c7e14af68000006007556001600a5560405162001bfd38038062001bfd83398181016040528101906200004591906200038f565b620000777fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773882620001c260201b60201c565b620000a97f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882620001c260201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606f600b60008081526020019081526020016000208190555060de600b6000600181526020019081526020016000208190555061014d600b600060028152602001908152602001600020819055505050620003d6565b620001d48282620002b360201b60201c565b620002af57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002546200031d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000357826200032a565b9050919050565b62000369816200034a565b81146200037557600080fd5b50565b60008151905062000389816200035e565b92915050565b60008060408385031215620003a957620003a862000325565b5b6000620003b98582860162000378565b9250506020620003cc8582860162000378565b9150509250929050565b61181780620003e66000396000f3fe6080604052600436106100ab5760003560e01c80634f248409116100645780634f2484091461021457806376082a5e1461022b57806391d1485414610256578063a217fddf14610293578063a6f2ae3a146102be578063d547741f146102dc576100ef565b806301ffc9a7146100f4578063248a9ca314610131578063282c51f31461016e5780632e1a7d4d146101995780632f2ff15d146101c257806336568abe146101eb576100ef565b366100ef577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100dd90610f30565b60405180910390a16100ed610305565b005b600080fd5b34801561010057600080fd5b5061011b60048036038101906101169190610fad565b61057f565b6040516101289190610ff5565b60405180910390f35b34801561013d57600080fd5b5061015860048036038101906101539190611046565b6105f9565b6040516101659190611082565b60405180910390f35b34801561017a57600080fd5b50610183610618565b6040516101909190611082565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb91906110d3565b61063c565b005b3480156101ce57600080fd5b506101e960048036038101906101e4919061115e565b61079f565b005b3480156101f757600080fd5b50610212600480360381019061020d919061115e565b6107c0565b005b34801561022057600080fd5b50610229610843565b005b34801561023757600080fd5b506102406108b4565b60405161024d9190611082565b60405180910390f35b34801561026257600080fd5b5061027d6004803603810190610278919061115e565b6108d8565b60405161028a9190610ff5565b60405180910390f35b34801561029f57600080fd5b506102a8610942565b6040516102b59190611082565b60405180910390f35b6102c6610305565b6040516102d39190610ff5565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe919061115e565b610949565b005b6000600554421061034b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610342906111ea565b60405180910390fd5b6000341161038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590611256565b60405180910390fd5b60006103993461096a565b9050600754600954826103ac91906112a5565b106103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390611325565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30336040518363ffffffff1660e01b8152600401610449929190611354565b602060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611392565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104e89291906113ce565b6020604051808303816000875af1158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190611423565b506009548161053a91906112a5565b6009819055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb35205439957278160405161056f9190611450565b60405180910390a1600191505090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f257506105f182610988565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738610666816109f2565b42600b6000600281526020019081526020016000205411156106ce573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106c8573d6000803e3d6000fd5b5061079b565b42600b600060018152602001908152602001600020541115610736573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610730573d6000803e3d6000fd5b5061079a565b42600b6000808152602001908152602001600020541115610799573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610797573d6000803e3d6000fd5b505b5b5b5050565b6107a8826105f9565b6107b1816109f2565b6107bb8383610a06565b505050565b6107c8610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c906114dd565b60405180910390fd5b61083f8282610aee565b5050565b6005544210610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906111ea565b60405180910390fd5b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486108b1816109f2565b50565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773881565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610952826105f9565b61095b816109f2565b6109658383610aee565b505050565b6000610981600a5483610bcf90919063ffffffff16565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a03816109fe610ae6565b610be5565b50565b610a1082826108d8565b610ae257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a87610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610af882826108d8565b15610bcb57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b70610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610bdd91906114fd565b905092915050565b610bef82826108d8565b610c6657610bfc81610c6a565b610c0a8360001c6020610c97565b604051602001610c1b929190611648565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5d91906116cc565b60405180910390fd5b5050565b6060610c908273ffffffffffffffffffffffffffffffffffffffff16601460ff16610c97565b9050919050565b606060006002836002610caa91906114fd565b610cb491906112a5565b67ffffffffffffffff811115610ccd57610ccc6116ee565b5b6040519080825280601f01601f191660200182016040528015610cff5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610d3757610d3661171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610d9b57610d9a61171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ddb91906114fd565b610de591906112a5565b90505b6001811115610e85577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610e2757610e2661171d565b5b1a60f81b828281518110610e3e57610e3d61171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610e7e9061174c565b9050610de8565b5060008414610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec0906117c1565b60405180910390fd5b8091505092915050565b600082825260208201905092915050565b7f66616c6c6261636b206869740000000000000000000000000000000000000000600082015250565b6000610f1a600c83610ed3565b9150610f2582610ee4565b602082019050919050565b60006020820190508181036000830152610f4981610f0d565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f8a81610f55565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b600060208284031215610fc357610fc2610f50565b5b6000610fd184828501610f98565b91505092915050565b60008115159050919050565b610fef81610fda565b82525050565b600060208201905061100a6000830184610fe6565b92915050565b6000819050919050565b61102381611010565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b60006020828403121561105c5761105b610f50565b5b600061106a84828501611031565b91505092915050565b61107c81611010565b82525050565b60006020820190506110976000830184611073565b92915050565b6000819050919050565b6110b08161109d565b81146110bb57600080fd5b50565b6000813590506110cd816110a7565b92915050565b6000602082840312156110e9576110e8610f50565b5b60006110f7848285016110be565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061112b82611100565b9050919050565b61113b81611120565b811461114657600080fd5b50565b60008135905061115881611132565b92915050565b6000806040838503121561117557611174610f50565b5b600061118385828601611031565b925050602061119485828601611149565b9150509250929050565b7f49434f206973206f766572203a28200000000000000000000000000000000000600082015250565b60006111d4600f83610ed3565b91506111df8261119e565b602082019050919050565b60006020820190508181036000830152611203816111c7565b9050919050565b7f7468656d2f7468657920706c656173652073656e64206d657469730000000000600082015250565b6000611240601b83610ed3565b915061124b8261120a565b602082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112b08261109d565b91506112bb8361109d565b92508282019050808211156112d3576112d2611276565b5b92915050565b7f657863656564732074686520746f74616c20666f722073616c65000000000000600082015250565b600061130f601a83610ed3565b915061131a826112d9565b602082019050919050565b6000602082019050818103600083015261133e81611302565b9050919050565b61134e81611120565b82525050565b60006040820190506113696000830185611345565b6113766020830184611345565b9392505050565b60008151905061138c816110a7565b92915050565b6000602082840312156113a8576113a7610f50565b5b60006113b68482850161137d565b91505092915050565b6113c88161109d565b82525050565b60006040820190506113e36000830185611345565b6113f060208301846113bf565b9392505050565b61140081610fda565b811461140b57600080fd5b50565b60008151905061141d816113f7565b92915050565b60006020828403121561143957611438610f50565b5b60006114478482850161140e565b91505092915050565b600060208201905061146560008301846113bf565b92915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006114c7602f83610ed3565b91506114d28261146b565b604082019050919050565b600060208201905081810360008301526114f6816114ba565b9050919050565b60006115088261109d565b91506115138361109d565b92508282026115218161109d565b9150828204841483151761153857611537611276565b5b5092915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061158060178361153f565b915061158b8261154a565b601782019050919050565b600081519050919050565b60005b838110156115bf5780820151818401526020810190506115a4565b60008484015250505050565b60006115d682611596565b6115e0818561153f565b93506115f08185602086016115a1565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061163260118361153f565b915061163d826115fc565b601182019050919050565b600061165382611573565b915061165f82856115cb565b915061166a82611625565b915061167682846115cb565b91508190509392505050565b6000601f19601f8301169050919050565b600061169e82611596565b6116a88185610ed3565b93506116b88185602086016115a1565b6116c181611682565b840191505092915050565b600060208201905081810360008301526116e68184611693565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006117578261109d565b91506000820361176a57611769611276565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006117ab602083610ed3565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b905091905056fea26469706673582212202ceacbcb09a77daade85a9cdc39e13b7cac45d5c8b54108a7cac7f5b87e8a53b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH5 0x430E23400 PUSH1 0x5 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH1 0x40 MLOAD PUSH3 0x1BFD CODESIZE SUB DUP1 PUSH3 0x1BFD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x45 SWAP2 SWAP1 PUSH3 0x38F JUMP JUMPDEST PUSH3 0x77 PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP3 PUSH3 0x1C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA9 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH3 0x1C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6F PUSH1 0xB PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xDE PUSH1 0xB PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0xB PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3D6 JUMP JUMPDEST PUSH3 0x1D4 DUP3 DUP3 PUSH3 0x2B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2AF JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x254 PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x357 DUP3 PUSH3 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x369 DUP2 PUSH3 0x34A JUMP JUMPDEST DUP2 EQ PUSH3 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x389 DUP2 PUSH3 0x35E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3A9 JUMPI PUSH3 0x3A8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3B9 DUP6 DUP3 DUP7 ADD PUSH3 0x378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3CC DUP6 DUP3 DUP7 ADD PUSH3 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1817 DUP1 PUSH3 0x3E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F248409 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2DC JUMPI PUSH2 0xEF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1EB JUMPI PUSH2 0xEF JUMP JUMPDEST CALLDATASIZE PUSH2 0xEF JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xDD SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xED PUSH2 0x305 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x843 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x399 CALLVALUE PUSH2 0x96A JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD DUP3 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST LT PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E3 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP3 SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP2 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5F2 JUMPI POP PUSH2 0x5F1 DUP3 PUSH2 0x988 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x666 DUP2 PUSH2 0x9F2 JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x6CE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x79B JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x736 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x79A JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x799 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7A8 DUP3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x7BB DUP4 DUP4 PUSH2 0xA06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83F DUP3 DUP3 PUSH2 0xAEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x8B1 DUP2 PUSH2 0x9F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x952 DUP3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x965 DUP4 DUP4 PUSH2 0xAEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x981 PUSH1 0xA SLOAD DUP4 PUSH2 0xBCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9FE PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA10 DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0xAE2 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA87 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF8 DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB70 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBEF DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0xC66 JUMPI PUSH2 0xBFC DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xC0A DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC1B SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC90 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xCB4 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0x16EE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE85 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xE27 JUMPI PUSH2 0xE26 PUSH2 0x171D JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE3E JUMPI PUSH2 0xE3D PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xE7E SWAP1 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP PUSH2 0xDE8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP1 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1A PUSH1 0xC DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF25 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF49 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8A DUP2 PUSH2 0xF55 JUMP JUMPDEST DUP2 EQ PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD1 DUP5 DUP3 DUP6 ADD PUSH2 0xF98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFEF DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x100A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0x1010 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1040 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0x1010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1097 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B0 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP2 EQ PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CD DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E8 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10F7 DUP5 DUP3 DUP6 ADD PUSH2 0x10BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112B DUP3 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x1120 JUMP JUMPDEST DUP2 EQ PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1158 DUP2 PUSH2 0x1132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1183 DUP6 DUP3 DUP7 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1194 DUP6 DUP3 DUP7 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D4 PUSH1 0xF DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DF DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1203 DUP2 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468656D2F7468657920706C656173652073656E64206D657469730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 PUSH1 0x1B DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x124B DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126F DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH2 0x12BB DUP4 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH1 0x1A DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x131A DUP3 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x133E DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x1120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1345 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x138C DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B6 DUP5 DUP3 DUP6 ADD PUSH2 0x137D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C8 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x13F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP2 EQ PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x141D DUP2 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1447 DUP5 DUP3 DUP6 ADD PUSH2 0x140E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1465 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C7 PUSH1 0x2F DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D2 DUP3 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x14BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH2 0x1513 DUP4 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1521 DUP2 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1580 PUSH1 0x17 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x158B DUP3 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP3 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x15E0 DUP2 DUP6 PUSH2 0x153F JUMP JUMPDEST SWAP4 POP PUSH2 0x15F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH1 0x11 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP3 DUP6 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP PUSH2 0x166A DUP3 PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP PUSH2 0x1676 DUP3 DUP5 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169E DUP3 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x16A8 DUP2 DUP6 PUSH2 0xED3 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E6 DUP2 DUP5 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1757 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AB PUSH1 0x20 DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B6 DUP3 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DA DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xEA 0xCB 0xCB MULMOD 0xA7 PUSH30 0xAADE85A9CDC39E13B7CAC45D5C8B54108A7CAC7F5B87E8A53B64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "232:2586:9:-:0;;;656:11;639:28;;707:14;690:31;;794:1;774:21;;841:385;;;;;;;;;;;;;;;;;;;;;:::i;:::-;954:31;339:26;980:4;954:10;;;:31;;:::i;:::-;995:29;409:24;1019:4;995:10;;;:29;;:::i;:::-;1050:10;1034:5;;:27;;;;;;;;;;;;;;;;;;1085:5;1071:4;;:20;;;;;;;;;;;;;;;;;;1122:4;1101:10;;:26;;;;;;;;;;;;;;;;;;1152:3;1137:9;:12;1147:1;1137:12;;;;;;;;;;;:18;;;;1180:3;1165:9;:12;1175:1;1165:12;;;;;;;;;;;:18;;;;1208:3;1193:9;:12;1203:1;1193:12;;;;;;;;;;;:18;;;;841:385;;232:2586;;7461:233:0;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;232:2586:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1896": {
									"entryPoint": 1560,
									"id": 1896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2370,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INVESTOR_ROLE_1891": {
									"entryPoint": 2228,
									"id": 1891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2029": {
									"entryPoint": null,
									"id": 2029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 3045,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2546,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 2566,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_478": {
									"entryPoint": 2790,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_314": {
									"entryPoint": 2798,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buy_2092": {
									"entryPoint": 773,
									"id": 2092,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@conversion_2175": {
									"entryPoint": 2410,
									"id": 2175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@endICO_2161": {
									"entryPoint": 2115,
									"id": 2161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_146": {
									"entryPoint": 1529,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1951,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2264,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1770": {
									"entryPoint": 3023,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_209": {
									"entryPoint": 1984,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 2377,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 1407,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_686": {
									"entryPoint": 2440,
									"id": 686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_642": {
									"entryPoint": 3223,
									"id": 642,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_662": {
									"entryPoint": 3178,
									"id": 662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdraw_2152": {
									"entryPoint": 1596,
									"id": 2152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18629:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "66616c6c6261636b20686974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:14:10",
																		"type": "",
																		"value": "fallback hit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "572:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "577:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "513:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "678:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																	"nodeType": "YulIdentifier",
																	"src": "589:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "702:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "484:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "492:3:10",
														"type": ""
													}
												],
												"src": "350:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "915:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "903:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "969:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1129:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1003:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "995:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "888:4:10",
														"type": ""
													}
												],
												"src": "722:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1187:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1197:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1180:6:10",
														"type": ""
													}
												],
												"src": "1147:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1327:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1228:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1351:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1528:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1543:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1528:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1510:7:10",
														"type": ""
													}
												],
												"src": "1474:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1736:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1739:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1729:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1718:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "1701:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1701:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1691:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:42:10"
															},
															"nodeType": "YulIf",
															"src": "1681:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:10",
														"type": ""
													}
												],
												"src": "1629:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1806:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1816:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1838:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1825:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1816:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1880:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1854:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1854:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1784:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1792:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1800:5:10",
														"type": ""
													}
												],
												"src": "1755:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1963:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2009:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2011:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1984:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1993:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1976:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:32:10"
															},
															"nodeType": "YulIf",
															"src": "1973:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2102:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2117:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2121:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2146:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2180:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2200:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2156:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2146:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1933:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1944:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1956:6:10",
														"type": ""
													}
												],
												"src": "1898:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2283:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2308:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2301:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2283:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2255:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2265:7:10",
														"type": ""
													}
												],
												"src": "2231:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2423:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2408:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2374:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2381:3:10",
														"type": ""
													}
												],
												"src": "2327:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2534:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2544:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2556:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2567:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2552:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2544:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2618:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2631:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2642:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2580:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2506:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2518:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2529:4:10",
														"type": ""
													}
												],
												"src": "2442:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2713:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2724:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2713:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2685:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2695:7:10",
														"type": ""
													}
												],
												"src": "2658:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2841:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2814:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2814:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2804:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2804:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:43:10"
															},
															"nodeType": "YulIf",
															"src": "2794:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2777:5:10",
														"type": ""
													}
												],
												"src": "2741:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2940:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2931:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2996:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2969:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2899:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2907:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2915:5:10",
														"type": ""
													}
												],
												"src": "2869:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3126:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3128:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3128:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3097:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:32:10"
															},
															"nodeType": "YulIf",
															"src": "3090:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3219:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3234:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3238:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3263:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3309:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3318:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3273:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3263:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3050:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3061:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:10",
														"type": ""
													}
												],
												"src": "3014:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3454:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3436:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3409:3:10",
														"type": ""
													}
												],
												"src": "3349:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3571:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3581:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3581:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3661:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3617:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3543:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3555:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3566:4:10",
														"type": ""
													}
												],
												"src": "3473:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3756:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3767:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3738:7:10",
														"type": ""
													}
												],
												"src": "3701:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3827:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3850:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3875:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3857:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3857:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3847:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:43:10"
															},
															"nodeType": "YulIf",
															"src": "3837:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3820:5:10",
														"type": ""
													}
												],
												"src": "3784:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3983:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3974:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4039:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4012:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3942:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3958:5:10",
														"type": ""
													}
												],
												"src": "3912:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4169:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4171:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4171:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4171:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4144:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:32:10"
															},
															"nodeType": "YulIf",
															"src": "4133:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4262:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4277:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4281:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4306:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4341:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4352:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4361:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4316:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4306:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4093:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4104:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4116:6:10",
														"type": ""
													}
												],
												"src": "4057:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4437:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4447:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4462:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4447:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4419:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4429:7:10",
														"type": ""
													}
												],
												"src": "4392:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4569:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4579:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4608:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4590:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4579:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4551:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4561:7:10",
														"type": ""
													}
												],
												"src": "4524:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4726:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4735:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4728:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4728:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4692:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4717:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4699:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4699:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:43:10"
															},
															"nodeType": "YulIf",
															"src": "4679:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4662:5:10",
														"type": ""
													}
												],
												"src": "4626:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4806:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4816:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4838:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4825:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4816:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4854:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4784:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4792:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4800:5:10",
														"type": ""
													}
												],
												"src": "4754:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5028:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5030:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5030:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5030:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:32:10"
															},
															"nodeType": "YulIf",
															"src": "4992:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5121:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5136:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5140:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5165:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5200:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5211:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5196:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5196:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5220:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5175:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5165:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5248:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5263:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5267:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5293:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5328:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5339:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5324:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5324:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5303:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5303:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5293:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:10",
														"type": ""
													}
												],
												"src": "4899:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5485:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:14:10"
																	},
																	{
																		"hexValue": "49434f206973206f766572203a2820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5519:17:10",
																		"type": "",
																		"value": "ICO is over :( "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5477:6:10",
														"type": ""
													}
												],
												"src": "5379:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5704:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5718:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5725:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5894:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																	"nodeType": "YulIdentifier",
																	"src": "5805:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5922:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5692:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5700:3:10",
														"type": ""
													}
												],
												"src": "5558:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6121:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6135:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6197:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6205:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6211:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6201:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6235:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6369:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6243:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6235:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6101:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:10",
														"type": ""
													}
												],
												"src": "5950:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6501:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6527:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:14:10"
																	},
																	{
																		"hexValue": "7468656d2f7468657920706c656173652073656e64206d65746973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6539:29:10",
																		"type": "",
																		"value": "them/they please send metis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6493:6:10",
														"type": ""
													}
												],
												"src": "6395:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6750:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6816:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6821:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6757:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6757:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6750:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6926:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																	"nodeType": "YulIdentifier",
																	"src": "6837:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6837:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6943:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6954:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6724:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6732:3:10",
														"type": ""
													}
												],
												"src": "6590:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7153:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7167:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7179:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7175:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7167:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7218:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7229:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7237:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7243:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7233:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7267:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7401:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7275:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7267:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7133:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7148:4:10",
														"type": ""
													}
												],
												"src": "6982:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7455:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7476:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7479:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7469:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7580:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7570:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7570:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7608:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7598:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7427:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7677:167:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7691:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7714:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7696:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7691:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7729:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7752:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7734:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7729:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7767:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7778:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7781:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7774:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7811:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7813:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7813:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7813:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7803:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7806:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7800:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:10:10"
															},
															"nodeType": "YulIf",
															"src": "7797:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7664:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7667:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7673:3:10",
														"type": ""
													}
												],
												"src": "7633:211:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7986:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7994:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7982:14:10"
																	},
																	{
																		"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7998:28:10",
																		"type": "",
																		"value": "exceeds the total for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7975:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7952:6:10",
														"type": ""
													}
												],
												"src": "7854:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8194:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8208:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8215:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8384:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																	"nodeType": "YulIdentifier",
																	"src": "8295:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8295:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8401:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8401:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8182:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8190:3:10",
														"type": ""
													}
												],
												"src": "8048:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8611:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8625:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8637:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8648:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8676:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8687:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8672:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8695:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8701:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8691:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8665:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8725:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8859:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8733:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8725:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8591:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8606:4:10",
														"type": ""
													}
												],
												"src": "8440:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8950:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8971:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8994:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8976:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8964:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8964:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8964:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8938:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8945:3:10",
														"type": ""
													}
												],
												"src": "8885:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9147:222:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9161:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9173:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9184:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9169:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9161:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9245:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9258:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9254:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9201:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9201:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9330:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9343:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9354:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9339:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9286:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9286:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9286:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9111:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9123:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9131:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9142:4:10",
														"type": ""
													}
												],
												"src": "9021:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9442:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9456:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9471:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9465:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9465:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9518:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9491:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9491:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9491:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9420:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9428:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9436:5:10",
														"type": ""
													}
												],
												"src": "9379:155:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9621:298:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9671:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9673:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9673:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9673:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9646:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9642:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9638:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:32:10"
															},
															"nodeType": "YulIf",
															"src": "9635:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9768:140:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9787:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9791:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9820:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9866:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9877:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9862:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9862:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9886:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9830:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9830:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9820:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9591:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9602:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9614:6:10",
														"type": ""
													}
												],
												"src": "9544:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9994:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10015:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10038:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10020:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10020:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9982:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9989:3:10",
														"type": ""
													}
												],
												"src": "9929:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10191:222:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10205:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10217:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10228:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10213:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10213:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10205:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10289:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10302:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10313:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10298:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10245:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10245:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10245:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10374:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10398:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10330:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10330:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10155:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10167:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10175:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10186:4:10",
														"type": ""
													}
												],
												"src": "10065:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10463:84:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10521:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10530:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10533:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10523:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10523:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10523:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10490:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10512:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10497:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10497:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10487:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10487:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:40:10"
															},
															"nodeType": "YulIf",
															"src": "10477:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10456:5:10",
														"type": ""
													}
												],
												"src": "10423:124:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10617:89:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10631:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10646:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10640:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10640:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10631:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10690:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10666:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10666:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10595:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10603:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10611:5:10",
														"type": ""
													}
												],
												"src": "10557:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10790:295:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10840:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10842:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10842:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10842:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10815:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10824:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10811:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10811:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10836:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10807:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:32:10"
															},
															"nodeType": "YulIf",
															"src": "10804:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10937:137:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10956:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10970:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10960:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10989:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11032:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11043:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11028:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11028:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11052:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10999:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10999:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10989:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10760:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10771:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10783:6:10",
														"type": ""
													}
												],
												"src": "10716:369:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11193:136:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11207:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11219:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11230:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11215:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11207:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11291:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11304:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11315:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11300:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11247:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11247:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11247:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11165:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11177:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11188:4:10",
														"type": ""
													}
												],
												"src": "11095:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11445:140:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11471:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11479:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11483:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11460:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11460:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11460:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11543:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11551:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11539:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11539:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11556:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11532:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11532:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11532:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11437:6:10",
														"type": ""
													}
												],
												"src": "11339:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11741:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11755:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11821:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11826:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11762:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11762:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11755:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11931:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "11842:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11842:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11842:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11948:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11959:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11964:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11729:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11737:3:10",
														"type": ""
													}
												],
												"src": "11595:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12158:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12172:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12184:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12195:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12180:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12172:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12223:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12219:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12219:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12242:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12238:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12238:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12212:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12212:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12212:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12272:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12406:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12280:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12272:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12138:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12153:4:10",
														"type": ""
													}
												],
												"src": "11987:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12480:410:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12494:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12517:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12499:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12494:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12532:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12555:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12537:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12532:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12570:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12593:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12596:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12574:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12611:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12640:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12622:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12622:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12611:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12857:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12859:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12859:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12859:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12778:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12771:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12771:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12805:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12812:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12821:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12808:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12808:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12802:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12802:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12747:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12747:95:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12723:133:10"
															},
															"nodeType": "YulIf",
															"src": "12720:159:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12463:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12466:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12472:7:10",
														"type": ""
													}
												],
												"src": "12432:458:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13014:42:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13028:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13043:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13028:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12986:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12991:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13002:11:10",
														"type": ""
													}
												],
												"src": "12900:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13172:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13198:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13206:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13194:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13194:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13210:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13187:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13187:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13164:6:10",
														"type": ""
													}
												],
												"src": "13066:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13421:254:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13435:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13519:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13524:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13442:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13442:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13435:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13629:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "13540:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13540:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13646:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13657:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13662:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13653:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13646:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13409:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13417:3:10",
														"type": ""
													}
												],
												"src": "13257:418:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13744:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13759:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13775:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13769:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13759:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13727:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13737:6:10",
														"type": ""
													}
												],
												"src": "13685:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13864:212:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13878:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13887:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13882:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13955:71:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13984:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13989:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13980:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13980:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14003:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14008:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13999:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13999:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13993:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13993:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13973:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13973:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13973:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13912:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13915:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13909:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13923:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13925:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13934:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13937:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13930:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13930:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13925:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13905:3:10",
																"statements": []
															},
															"src": "13901:125:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14050:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14055:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14046:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14064:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14039:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14039:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14039:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13846:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13851:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13856:6:10",
														"type": ""
													}
												],
												"src": "13802:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14196:300:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14210:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14257:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14224:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14224:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14214:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14276:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14360:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14365:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14283:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14283:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14276:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14424:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14431:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14420:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14420:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14438:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14443:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14385:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14385:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14385:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14463:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14474:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14479:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14470:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14463:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14177:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14184:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14192:3:10",
														"type": ""
													}
												],
												"src": "14086:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14612:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14646:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14634:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14650:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14627:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14627:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14627:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14604:6:10",
														"type": ""
													}
												],
												"src": "14506:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14855:254:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14869:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14953:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14958:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14876:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14869:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15063:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "14974:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14974:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14974:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15080:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15091:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15096:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15080:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14843:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14851:3:10",
														"type": ""
													}
												],
												"src": "14691:418:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15505:605:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15520:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15671:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15527:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15527:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15520:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15689:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15778:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15787:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15696:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15689:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15805:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15956:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15812:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15812:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15805:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15974:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16063:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16072:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15981:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15981:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15974:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16090:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16097:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15476:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15482:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15490:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15501:3:10",
														"type": ""
													}
												],
												"src": "15119:991:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16168:62:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16182:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16200:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16207:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16196:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16216:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16212:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16192:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16192:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16182:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16151:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16161:6:10",
														"type": ""
													}
												],
												"src": "16120:110:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16332:305:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16346:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16393:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16360:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16360:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16350:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16412:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16478:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16483:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16419:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16419:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16412:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16542:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16549:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16538:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16538:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16556:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16561:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16503:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16503:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16503:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16581:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16592:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16619:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16597:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16597:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16588:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16581:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16313:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16320:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16328:3:10",
														"type": ""
													}
												],
												"src": "16240:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16765:211:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16779:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16791:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16802:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16787:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16787:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16779:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16830:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16841:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16826:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16826:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16849:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16855:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16845:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16819:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16819:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16819:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16879:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16951:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16960:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16887:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16887:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16879:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16737:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16749:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16760:4:10",
														"type": ""
													}
												],
												"src": "16647:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17014:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17035:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17038:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17028:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17028:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17028:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17136:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17139:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17129:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17129:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17129:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17164:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17167:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17157:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17157:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17157:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16986:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17220:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17241:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17244:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17234:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17234:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17234:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17342:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17345:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17335:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17335:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17335:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17370:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17373:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17363:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17363:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17363:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17192:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17441:144:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17455:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17482:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17464:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17464:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17455:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17520:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17522:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17522:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17522:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17507:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17514:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17504:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17504:15:10"
															},
															"nodeType": "YulIf",
															"src": "17501:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17555:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17566:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17573:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17562:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17562:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17555:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17427:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17437:3:10",
														"type": ""
													}
												],
												"src": "17398:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17701:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17727:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17735:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17723:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17739:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17716:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17716:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17693:6:10",
														"type": ""
													}
												],
												"src": "17595:190:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17941:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17955:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18021:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18026:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17962:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17962:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17955:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18131:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "18042:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18042:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18042:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18148:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18159:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18164:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18155:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18155:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18148:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17929:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17937:3:10",
														"type": ""
													}
												],
												"src": "17795:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18358:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18372:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18384:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18395:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18380:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18380:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18372:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18423:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18434:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18419:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18419:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18442:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18448:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18438:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18412:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18412:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18472:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18606:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18480:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18480:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18472:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18338:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18353:4:10",
														"type": ""
													}
												],
												"src": "18187:435:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(memPtr) {\n\n        mstore(add(memPtr, 0), \"fallback hit\")\n\n    }\n\n    function abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO is over :( \")\n\n        }\n\n        function abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n            store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd(memPtr) {\n\n            mstore(add(memPtr, 0), \"them/they please send metis\")\n\n        }\n\n        function abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n            store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function panic_error_0x11() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n\n        function checked_add_t_uint256(x, y) -> sum {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            sum := add(x, y)\n\n            if gt(x, sum) { panic_error_0x11() }\n\n        }\n\n        function store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(memPtr) {\n\n            mstore(add(memPtr, 0), \"exceeds the total for sale\")\n\n        }\n\n        function abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n            store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n            mstore(pos, cleanup_t_address(value))\n        }\n\n        function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        }\n\n        function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_uint256(value)\n        }\n\n        function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n            mstore(pos, cleanup_t_uint256(value))\n        }\n\n        function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        }\n\n        function validator_revert_t_bool(value) {\n            if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n        }\n\n        function abi_decode_t_bool_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_bool(value)\n        }\n\n        function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        }\n\n        function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n            mstore(add(memPtr, 32), \" roles for self\")\n\n        }\n\n        function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n            store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n            end := add(pos, 64)\n        }\n\n        function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function checked_mul_t_uint256(x, y) -> product {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            let product_raw := mul(x, y)\n            product := cleanup_t_uint256(product_raw)\n\n            // overflow, if x != 0 and y != product/x\n            if iszero(\n                or(\n                    iszero(x),\n                    eq(y, div(product, x))\n                )\n            ) { panic_error_0x11() }\n\n        }\n\n        function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n            updated_pos := pos\n        }\n\n        function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: account \")\n\n        }\n\n        function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n            store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n            end := add(pos, 23)\n        }\n\n        function array_length_t_string_memory_ptr(value) -> length {\n\n            length := mload(value)\n\n        }\n\n        function copy_memory_to_memory_with_cleanup(src, dst, length) {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, length)\n        }\n\n        function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n            mstore(add(memPtr, 0), \" is missing role \")\n\n        }\n\n        function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n            store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n            end := add(pos, 17)\n        }\n\n        function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n            pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n            pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n            end := pos\n        }\n\n        function round_up_to_mul_of_32(value) -> result {\n            result := and(add(value, 31), not(31))\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, round_up_to_mul_of_32(length))\n        }\n\n        function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        }\n\n        function panic_error_0x41() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n\n        function panic_error_0x32() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x32)\n            revert(0, 0x24)\n        }\n\n        function decrement_t_uint256(value) -> ret {\n            value := cleanup_t_uint256(value)\n            if eq(value, 0x00) { panic_error_0x11() }\n            ret := sub(value, 1)\n        }\n\n        function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n            mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n        }\n\n        function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n            store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n    }\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ab5760003560e01c80634f248409116100645780634f2484091461021457806376082a5e1461022b57806391d1485414610256578063a217fddf14610293578063a6f2ae3a146102be578063d547741f146102dc576100ef565b806301ffc9a7146100f4578063248a9ca314610131578063282c51f31461016e5780632e1a7d4d146101995780632f2ff15d146101c257806336568abe146101eb576100ef565b366100ef577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100dd90610f30565b60405180910390a16100ed610305565b005b600080fd5b34801561010057600080fd5b5061011b60048036038101906101169190610fad565b61057f565b6040516101289190610ff5565b60405180910390f35b34801561013d57600080fd5b5061015860048036038101906101539190611046565b6105f9565b6040516101659190611082565b60405180910390f35b34801561017a57600080fd5b50610183610618565b6040516101909190611082565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb91906110d3565b61063c565b005b3480156101ce57600080fd5b506101e960048036038101906101e4919061115e565b61079f565b005b3480156101f757600080fd5b50610212600480360381019061020d919061115e565b6107c0565b005b34801561022057600080fd5b50610229610843565b005b34801561023757600080fd5b506102406108b4565b60405161024d9190611082565b60405180910390f35b34801561026257600080fd5b5061027d6004803603810190610278919061115e565b6108d8565b60405161028a9190610ff5565b60405180910390f35b34801561029f57600080fd5b506102a8610942565b6040516102b59190611082565b60405180910390f35b6102c6610305565b6040516102d39190610ff5565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe919061115e565b610949565b005b6000600554421061034b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610342906111ea565b60405180910390fd5b6000341161038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590611256565b60405180910390fd5b60006103993461096a565b9050600754600954826103ac91906112a5565b106103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390611325565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30336040518363ffffffff1660e01b8152600401610449929190611354565b602060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611392565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104e89291906113ce565b6020604051808303816000875af1158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190611423565b506009548161053a91906112a5565b6009819055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb35205439957278160405161056f9190611450565b60405180910390a1600191505090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105f257506105f182610988565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738610666816109f2565b42600b6000600281526020019081526020016000205411156106ce573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106c8573d6000803e3d6000fd5b5061079b565b42600b600060018152602001908152602001600020541115610736573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610730573d6000803e3d6000fd5b5061079a565b42600b6000808152602001908152602001600020541115610799573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610797573d6000803e3d6000fd5b505b5b5b5050565b6107a8826105f9565b6107b1816109f2565b6107bb8383610a06565b505050565b6107c8610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c906114dd565b60405180910390fd5b61083f8282610aee565b5050565b6005544210610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906111ea565b60405180910390fd5b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486108b1816109f2565b50565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773881565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b610952826105f9565b61095b816109f2565b6109658383610aee565b505050565b6000610981600a5483610bcf90919063ffffffff16565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a03816109fe610ae6565b610be5565b50565b610a1082826108d8565b610ae257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a87610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610af882826108d8565b15610bcb57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b70610ae6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610bdd91906114fd565b905092915050565b610bef82826108d8565b610c6657610bfc81610c6a565b610c0a8360001c6020610c97565b604051602001610c1b929190611648565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5d91906116cc565b60405180910390fd5b5050565b6060610c908273ffffffffffffffffffffffffffffffffffffffff16601460ff16610c97565b9050919050565b606060006002836002610caa91906114fd565b610cb491906112a5565b67ffffffffffffffff811115610ccd57610ccc6116ee565b5b6040519080825280601f01601f191660200182016040528015610cff5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610d3757610d3661171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610d9b57610d9a61171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610ddb91906114fd565b610de591906112a5565b90505b6001811115610e85577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610e2757610e2661171d565b5b1a60f81b828281518110610e3e57610e3d61171d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610e7e9061174c565b9050610de8565b5060008414610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec0906117c1565b60405180910390fd5b8091505092915050565b600082825260208201905092915050565b7f66616c6c6261636b206869740000000000000000000000000000000000000000600082015250565b6000610f1a600c83610ed3565b9150610f2582610ee4565b602082019050919050565b60006020820190508181036000830152610f4981610f0d565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f8a81610f55565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b600060208284031215610fc357610fc2610f50565b5b6000610fd184828501610f98565b91505092915050565b60008115159050919050565b610fef81610fda565b82525050565b600060208201905061100a6000830184610fe6565b92915050565b6000819050919050565b61102381611010565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b60006020828403121561105c5761105b610f50565b5b600061106a84828501611031565b91505092915050565b61107c81611010565b82525050565b60006020820190506110976000830184611073565b92915050565b6000819050919050565b6110b08161109d565b81146110bb57600080fd5b50565b6000813590506110cd816110a7565b92915050565b6000602082840312156110e9576110e8610f50565b5b60006110f7848285016110be565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061112b82611100565b9050919050565b61113b81611120565b811461114657600080fd5b50565b60008135905061115881611132565b92915050565b6000806040838503121561117557611174610f50565b5b600061118385828601611031565b925050602061119485828601611149565b9150509250929050565b7f49434f206973206f766572203a28200000000000000000000000000000000000600082015250565b60006111d4600f83610ed3565b91506111df8261119e565b602082019050919050565b60006020820190508181036000830152611203816111c7565b9050919050565b7f7468656d2f7468657920706c656173652073656e64206d657469730000000000600082015250565b6000611240601b83610ed3565b915061124b8261120a565b602082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112b08261109d565b91506112bb8361109d565b92508282019050808211156112d3576112d2611276565b5b92915050565b7f657863656564732074686520746f74616c20666f722073616c65000000000000600082015250565b600061130f601a83610ed3565b915061131a826112d9565b602082019050919050565b6000602082019050818103600083015261133e81611302565b9050919050565b61134e81611120565b82525050565b60006040820190506113696000830185611345565b6113766020830184611345565b9392505050565b60008151905061138c816110a7565b92915050565b6000602082840312156113a8576113a7610f50565b5b60006113b68482850161137d565b91505092915050565b6113c88161109d565b82525050565b60006040820190506113e36000830185611345565b6113f060208301846113bf565b9392505050565b61140081610fda565b811461140b57600080fd5b50565b60008151905061141d816113f7565b92915050565b60006020828403121561143957611438610f50565b5b60006114478482850161140e565b91505092915050565b600060208201905061146560008301846113bf565b92915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006114c7602f83610ed3565b91506114d28261146b565b604082019050919050565b600060208201905081810360008301526114f6816114ba565b9050919050565b60006115088261109d565b91506115138361109d565b92508282026115218161109d565b9150828204841483151761153857611537611276565b5b5092915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061158060178361153f565b915061158b8261154a565b601782019050919050565b600081519050919050565b60005b838110156115bf5780820151818401526020810190506115a4565b60008484015250505050565b60006115d682611596565b6115e0818561153f565b93506115f08185602086016115a1565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061163260118361153f565b915061163d826115fc565b601182019050919050565b600061165382611573565b915061165f82856115cb565b915061166a82611625565b915061167682846115cb565b91508190509392505050565b6000601f19601f8301169050919050565b600061169e82611596565b6116a88185610ed3565b93506116b88185602086016115a1565b6116c181611682565b840191505092915050565b600060208201905081810360008301526116e68184611693565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006117578261109d565b91506000820361176a57611769611276565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006117ab602083610ed3565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b905091905056fea26469706673582212202ceacbcb09a77daade85a9cdc39e13b7cac45d5c8b54108a7cac7f5b87e8a53b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F248409 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2DC JUMPI PUSH2 0xEF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1EB JUMPI PUSH2 0xEF JUMP JUMPDEST CALLDATASIZE PUSH2 0xEF JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xDD SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xED PUSH2 0x305 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x843 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x399 CALLVALUE PUSH2 0x96A JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD DUP3 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST LT PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E3 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x449 SWAP3 SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP2 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5F2 JUMPI POP PUSH2 0x5F1 DUP3 PUSH2 0x988 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x666 DUP2 PUSH2 0x9F2 JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x6CE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x79B JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x736 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x79A JUMP JUMPDEST TIMESTAMP PUSH1 0xB PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x799 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7A8 DUP3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x7BB DUP4 DUP4 PUSH2 0xA06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83F DUP3 DUP3 PUSH2 0xAEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x8B1 DUP2 PUSH2 0x9F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x952 DUP3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x965 DUP4 DUP4 PUSH2 0xAEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x981 PUSH1 0xA SLOAD DUP4 PUSH2 0xBCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9FE PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA10 DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0xAE2 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA87 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF8 DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB70 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBEF DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0xC66 JUMPI PUSH2 0xBFC DUP2 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xC0A DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC1B SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC90 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xCB4 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0x16EE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE85 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xE27 JUMPI PUSH2 0xE26 PUSH2 0x171D JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE3E JUMPI PUSH2 0xE3D PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xE7E SWAP1 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP PUSH2 0xDE8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP1 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1A PUSH1 0xC DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF25 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF49 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8A DUP2 PUSH2 0xF55 JUMP JUMPDEST DUP2 EQ PUSH2 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA7 DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD1 DUP5 DUP3 DUP6 ADD PUSH2 0xF98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFEF DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x100A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0x1010 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1040 DUP2 PUSH2 0x101A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105B PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106A DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0x1010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1097 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B0 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP2 EQ PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CD DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E8 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10F7 DUP5 DUP3 DUP6 ADD PUSH2 0x10BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112B DUP3 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x1120 JUMP JUMPDEST DUP2 EQ PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1158 DUP2 PUSH2 0x1132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1183 DUP6 DUP3 DUP7 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1194 DUP6 DUP3 DUP7 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D4 PUSH1 0xF DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DF DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1203 DUP2 PUSH2 0x11C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468656D2F7468657920706C656173652073656E64206D657469730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 PUSH1 0x1B DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x124B DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126F DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH2 0x12BB DUP4 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH1 0x1A DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x131A DUP3 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x133E DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x1120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1345 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x138C DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B6 DUP5 DUP3 DUP6 ADD PUSH2 0x137D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C8 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x13F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1400 DUP2 PUSH2 0xFDA JUMP JUMPDEST DUP2 EQ PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x141D DUP2 PUSH2 0x13F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0xF50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1447 DUP5 DUP3 DUP6 ADD PUSH2 0x140E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1465 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C7 PUSH1 0x2F DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D2 DUP3 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x14BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH2 0x1513 DUP4 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1521 DUP2 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1580 PUSH1 0x17 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x158B DUP3 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP3 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x15E0 DUP2 DUP6 PUSH2 0x153F JUMP JUMPDEST SWAP4 POP PUSH2 0x15F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH1 0x11 DUP4 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x163D DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP3 DUP6 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP PUSH2 0x166A DUP3 PUSH2 0x1625 JUMP JUMPDEST SWAP2 POP PUSH2 0x1676 DUP3 DUP5 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169E DUP3 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x16A8 DUP2 DUP6 PUSH2 0xED3 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E6 DUP2 DUP5 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1757 DUP3 PUSH2 0x109D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1276 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AB PUSH1 0x20 DUP4 PUSH2 0xED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B6 DUP3 PUSH2 0x1775 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DA DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xEA 0xCB 0xCB MULMOD 0xA7 PUSH30 0xAADE85A9CDC39E13B7CAC45D5C8B54108A7CAC7F5B87E8A53B64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "232:2586:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:19;;;;;;:::i;:::-;;;;;;;;1620:5;:3;:5::i;:::-;;232:2586;;;;2606:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;371:62:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2086:432;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4803:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2524:74:9;;;;;;;;;;;;;:::i;:::-;;299:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1639:441:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1639:441:9;1688:4;1341:8;;1323:15;:26;1315:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:1:::1;1711:9;:13;1703:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1765:17;1785:21;1796:9;1785:10;:21::i;:::-;1765:41;;1847:6;;1836:8;;1824:9;:20;;;;:::i;:::-;:29;1816:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1894:4;;;;;;;;;;;:14;;;1918:4;1924:10;1894:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1945:4;;;;;;;;;;;:13;;;1959:10;1971:9;1945:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2014:8;;2002:9;:20;;;;:::i;:::-;1991:8;:31;;;;2037:15;2042:9;2037:15;;;;;;:::i;:::-;;;;;;;;2069:4;2062:11;;;1639:441:::0;:::o;2606:202:0:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;371:62:9:-;409:24;371:62;:::o;2086:432::-;339:26;2505:16:0;2516:4;2505:10;:16::i;:::-;2178:15:9::1;2164:9;:12;2174:1;2164:12;;;;;;;;;;;;:29;2160:343;;;2216:10;2208:28;;:35;2237:5;2208:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2160:343;;;2278:15;2264:9;:12;2274:1;2264:12;;;;;;;;;;;;:29;2260:243;;;2365:10;2357:28;;:35;2386:5;2357:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2260:243;;;2427:15;2413:9;:12;2423:1:::0;2413:12:::1;;;;;;;;;;;;:29;2409:94;;;2465:10;2457:28;;:35;2486:5;2457:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2409:94;2260:243;2160:343;2086:432:::0;;:::o;4803:145:0:-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;2524:74:9:-;1341:8;;1323:15;:26;1315:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;409:24:::1;2505:16:0;2516:4;2505:10;:16::i;:::-;1378:1:9;2524:74::o:0;299:66::-;339:26;299:66;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;5228:147::-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;2604:110:9:-;2660:7;2685:21;2695:10;;2685:5;:9;;:21;;;;:::i;:::-;2678:29;;2604:110;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3465:96:8:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;2102:149:4:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:162::-;322:14;318:1;310:6;306:14;299:38;182:162;:::o;350:366::-;492:3;513:67;577:2;572:3;513:67;:::i;:::-;506:74;;589:93;678:3;589:93;:::i;:::-;707:2;702:3;698:12;691:19;;350:366;;;:::o;722:419::-;888:4;926:2;915:9;911:18;903:26;;975:9;969:4;965:20;961:1;950:9;946:17;939:47;1003:131;1129:4;1003:131;:::i;:::-;995:139;;722:419;;;:::o;1228:117::-;1337:1;1334;1327:12;1474:149;1510:7;1550:66;1543:5;1539:78;1528:89;;1474:149;;;:::o;1629:120::-;1701:23;1718:5;1701:23;:::i;:::-;1694:5;1691:34;1681:62;;1739:1;1736;1729:12;1681:62;1629:120;:::o;1755:137::-;1800:5;1838:6;1825:20;1816:29;;1854:32;1880:5;1854:32;:::i;:::-;1755:137;;;;:::o;1898:327::-;1956:6;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2131:1;2156:52;2200:7;2191:6;2180:9;2176:22;2156:52;:::i;:::-;2146:62;;2102:116;1898:327;;;;:::o;2231:90::-;2265:7;2308:5;2301:13;2294:21;2283:32;;2231:90;;;:::o;2327:109::-;2408:21;2423:5;2408:21;:::i;:::-;2403:3;2396:34;2327:109;;:::o;2442:210::-;2529:4;2567:2;2556:9;2552:18;2544:26;;2580:65;2642:1;2631:9;2627:17;2618:6;2580:65;:::i;:::-;2442:210;;;;:::o;2658:77::-;2695:7;2724:5;2713:16;;2658:77;;;:::o;2741:122::-;2814:24;2832:5;2814:24;:::i;:::-;2807:5;2804:35;2794:63;;2853:1;2850;2843:12;2794:63;2741:122;:::o;2869:139::-;2915:5;2953:6;2940:20;2931:29;;2969:33;2996:5;2969:33;:::i;:::-;2869:139;;;;:::o;3014:329::-;3073:6;3122:2;3110:9;3101:7;3097:23;3093:32;3090:119;;;3128:79;;:::i;:::-;3090:119;3248:1;3273:53;3318:7;3309:6;3298:9;3294:22;3273:53;:::i;:::-;3263:63;;3219:117;3014:329;;;;:::o;3349:118::-;3436:24;3454:5;3436:24;:::i;:::-;3431:3;3424:37;3349:118;;:::o;3473:222::-;3566:4;3604:2;3593:9;3589:18;3581:26;;3617:71;3685:1;3674:9;3670:17;3661:6;3617:71;:::i;:::-;3473:222;;;;:::o;3701:77::-;3738:7;3767:5;3756:16;;3701:77;;;:::o;3784:122::-;3857:24;3875:5;3857:24;:::i;:::-;3850:5;3847:35;3837:63;;3896:1;3893;3886:12;3837:63;3784:122;:::o;3912:139::-;3958:5;3996:6;3983:20;3974:29;;4012:33;4039:5;4012:33;:::i;:::-;3912:139;;;;:::o;4057:329::-;4116:6;4165:2;4153:9;4144:7;4140:23;4136:32;4133:119;;;4171:79;;:::i;:::-;4133:119;4291:1;4316:53;4361:7;4352:6;4341:9;4337:22;4316:53;:::i;:::-;4306:63;;4262:117;4057:329;;;;:::o;4392:126::-;4429:7;4469:42;4462:5;4458:54;4447:65;;4392:126;;;:::o;4524:96::-;4561:7;4590:24;4608:5;4590:24;:::i;:::-;4579:35;;4524:96;;;:::o;4626:122::-;4699:24;4717:5;4699:24;:::i;:::-;4692:5;4689:35;4679:63;;4738:1;4735;4728:12;4679:63;4626:122;:::o;4754:139::-;4800:5;4838:6;4825:20;4816:29;;4854:33;4881:5;4854:33;:::i;:::-;4754:139;;;;:::o;4899:474::-;4967:6;4975;5024:2;5012:9;5003:7;4999:23;4995:32;4992:119;;;5030:79;;:::i;:::-;4992:119;5150:1;5175:53;5220:7;5211:6;5200:9;5196:22;5175:53;:::i;:::-;5165:63;;5121:117;5277:2;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;:::i;:::-;5293:63;;5248:118;4899:474;;;;;:::o;5379:169::-;5519:17;5515:1;5507:6;5503:14;5496:41;5379:169;:::o;5558:382::-;5700:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5805:93;5894:3;5805:93;:::i;:::-;5927:2;5922:3;5918:12;5911:19;;5558:382;;;:::o;5950:435::-;6116:4;6158:2;6147:9;6143:18;6135:26;;6211:9;6205:4;6201:20;6197:1;6186:9;6182:17;6175:47;6243:131;6369:4;6243:131;:::i;:::-;6235:139;;5950:435;;;:::o;6395:185::-;6539:29;6535:1;6527:6;6523:14;6516:53;6395:185;:::o;6590:382::-;6732:3;6757:67;6821:2;6816:3;6757:67;:::i;:::-;6750:74;;6837:93;6926:3;6837:93;:::i;:::-;6959:2;6954:3;6950:12;6943:19;;6590:382;;;:::o;6982:435::-;7148:4;7190:2;7179:9;7175:18;7167:26;;7243:9;7237:4;7233:20;7229:1;7218:9;7214:17;7207:47;7275:131;7401:4;7275:131;:::i;:::-;7267:139;;6982:435;;;:::o;7427:196::-;7479:77;7476:1;7469:88;7580:4;7577:1;7570:15;7608:4;7605:1;7598:15;7633:211;7673:3;7696:20;7714:1;7696:20;:::i;:::-;7691:25;;7734:20;7752:1;7734:20;:::i;:::-;7729:25;;7781:1;7778;7774:9;7767:16;;7806:3;7803:1;7800:10;7797:36;;;7813:18;;:::i;:::-;7797:36;7633:211;;;;:::o;7854:184::-;7998:28;7994:1;7986:6;7982:14;7975:52;7854:184;:::o;8048:382::-;8190:3;8215:67;8279:2;8274:3;8215:67;:::i;:::-;8208:74;;8295:93;8384:3;8295:93;:::i;:::-;8417:2;8412:3;8408:12;8401:19;;8048:382;;;:::o;8440:435::-;8606:4;8648:2;8637:9;8633:18;8625:26;;8701:9;8695:4;8691:20;8687:1;8676:9;8672:17;8665:47;8733:131;8859:4;8733:131;:::i;:::-;8725:139;;8440:435;;;:::o;8885:126::-;8976:24;8994:5;8976:24;:::i;:::-;8971:3;8964:37;8885:126;;:::o;9021:348::-;9142:4;9184:2;9173:9;9169:18;9161:26;;9201:71;9269:1;9258:9;9254:17;9245:6;9201:71;:::i;:::-;9286:72;9354:2;9343:9;9339:18;9330:6;9286:72;:::i;:::-;9021:348;;;;;:::o;9379:155::-;9436:5;9471:6;9465:13;9456:22;;9491:33;9518:5;9491:33;:::i;:::-;9379:155;;;;:::o;9544:375::-;9614:6;9667:2;9655:9;9646:7;9642:23;9638:32;9635:119;;;9673:79;;:::i;:::-;9635:119;9801:1;9830:64;9886:7;9877:6;9866:9;9862:22;9830:64;:::i;:::-;9820:74;;9768:140;9544:375;;;;:::o;9929:126::-;10020:24;10038:5;10020:24;:::i;:::-;10015:3;10008:37;9929:126;;:::o;10065:348::-;10186:4;10228:2;10217:9;10213:18;10205:26;;10245:71;10313:1;10302:9;10298:17;10289:6;10245:71;:::i;:::-;10330:72;10398:2;10387:9;10383:18;10374:6;10330:72;:::i;:::-;10065:348;;;;;:::o;10423:124::-;10497:21;10512:5;10497:21;:::i;:::-;10490:5;10487:32;10477:60;;10533:1;10530;10523:12;10477:60;10423:124;:::o;10557:149::-;10611:5;10646:6;10640:13;10631:22;;10666:30;10690:5;10666:30;:::i;:::-;10557:149;;;;:::o;10716:369::-;10783:6;10836:2;10824:9;10815:7;10811:23;10807:32;10804:119;;;10842:79;;:::i;:::-;10804:119;10970:1;10999:61;11052:7;11043:6;11032:9;11028:22;10999:61;:::i;:::-;10989:71;;10937:137;10716:369;;;;:::o;11095:234::-;11188:4;11230:2;11219:9;11215:18;11207:26;;11247:71;11315:1;11304:9;11300:17;11291:6;11247:71;:::i;:::-;11095:234;;;;:::o;11339:246::-;11483:34;11479:1;11471:6;11467:14;11460:58;11556:17;11551:2;11543:6;11539:15;11532:42;11339:246;:::o;11595:382::-;11737:3;11762:67;11826:2;11821:3;11762:67;:::i;:::-;11755:74;;11842:93;11931:3;11842:93;:::i;:::-;11964:2;11959:3;11955:12;11948:19;;11595:382;;;:::o;11987:435::-;12153:4;12195:2;12184:9;12180:18;12172:26;;12248:9;12242:4;12238:20;12234:1;12223:9;12219:17;12212:47;12280:131;12406:4;12280:131;:::i;:::-;12272:139;;11987:435;;;:::o;12432:458::-;12472:7;12499:20;12517:1;12499:20;:::i;:::-;12494:25;;12537:20;12555:1;12537:20;:::i;:::-;12532:25;;12596:1;12593;12589:9;12622:30;12640:11;12622:30;:::i;:::-;12611:41;;12821:1;12812:7;12808:15;12805:1;12802:22;12778:1;12771:9;12747:95;12720:159;;12859:18;;:::i;:::-;12720:159;12480:410;12432:458;;;;:::o;12900:156::-;13002:11;13043:3;13028:18;;12900:156;;;;:::o;13066:181::-;13210:25;13206:1;13198:6;13194:14;13187:49;13066:181;:::o;13257:418::-;13417:3;13442:85;13524:2;13519:3;13442:85;:::i;:::-;13435:92;;13540:93;13629:3;13540:93;:::i;:::-;13662:2;13657:3;13653:12;13646:19;;13257:418;;;:::o;13685:107::-;13737:6;13775:5;13769:12;13759:22;;13685:107;;;:::o;13802:274::-;13887:1;13901:125;13915:6;13912:1;13909:13;13901:125;;;14008:1;14003:3;13999:11;13993:18;13989:1;13984:3;13980:11;13973:39;13937:2;13934:1;13930:10;13925:15;;13901:125;;;14064:1;14055:6;14050:3;14046:16;14039:27;13864:212;13802:274;;;:::o;14086:410::-;14192:3;14224:39;14257:5;14224:39;:::i;:::-;14283:89;14365:6;14360:3;14283:89;:::i;:::-;14276:96;;14385:65;14443:6;14438:3;14431:4;14424:5;14420:16;14385:65;:::i;:::-;14479:6;14474:3;14470:16;14463:23;;14196:300;14086:410;;;;:::o;14506:175::-;14650:19;14646:1;14638:6;14634:14;14627:43;14506:175;:::o;14691:418::-;14851:3;14876:85;14958:2;14953:3;14876:85;:::i;:::-;14869:92;;14974:93;15063:3;14974:93;:::i;:::-;15096:2;15091:3;15087:12;15080:19;;14691:418;;;:::o;15119:991::-;15501:3;15527:148;15671:3;15527:148;:::i;:::-;15520:155;;15696:95;15787:3;15778:6;15696:95;:::i;:::-;15689:102;;15812:148;15956:3;15812:148;:::i;:::-;15805:155;;15981:95;16072:3;16063:6;15981:95;:::i;:::-;15974:102;;16097:3;16090:10;;15119:991;;;;;:::o;16120:110::-;16161:6;16216:2;16212:7;16207:2;16200:5;16196:14;16192:28;16182:38;;16120:110;;;:::o;16240:397::-;16328:3;16360:39;16393:5;16360:39;:::i;:::-;16419:71;16483:6;16478:3;16419:71;:::i;:::-;16412:78;;16503:65;16561:6;16556:3;16549:4;16542:5;16538:16;16503:65;:::i;:::-;16597:29;16619:6;16597:29;:::i;:::-;16592:3;16588:39;16581:46;;16332:305;16240:397;;;;:::o;16647:329::-;16760:4;16802:2;16791:9;16787:18;16779:26;;16855:9;16849:4;16845:20;16841:1;16830:9;16826:17;16819:47;16887:78;16960:4;16951:6;16887:78;:::i;:::-;16879:86;;16647:329;;;;:::o;16986:196::-;17038:77;17035:1;17028:88;17139:4;17136:1;17129:15;17167:4;17164:1;17157:15;17192:196;17244:77;17241:1;17234:88;17345:4;17342:1;17335:15;17373:4;17370:1;17363:15;17398:187;17437:3;17464:24;17482:5;17464:24;:::i;:::-;17455:33;;17514:4;17507:5;17504:15;17501:41;;17522:18;;:::i;:::-;17501:41;17573:1;17566:5;17562:13;17555:20;;17398:187;;;:::o;17595:190::-;17739:34;17735:1;17727:6;17723:14;17716:58;17595:190;:::o;17795:382::-;17937:3;17962:67;18026:2;18021:3;17962:67;:::i;:::-;17955:74;;18042:93;18131:3;18042:93;:::i;:::-;18164:2;18159:3;18155:12;18148:19;;17795:382;;;:::o;18187:435::-;18353:4;18395:2;18384:9;18380:18;18372:26;;18448:9;18442:4;18438:20;18434:1;18423:9;18419:17;18412:47;18480:131;18606:4;18480:131;:::i;:::-;18472:139;;18187:435;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1233400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "374",
								"DEFAULT_ADMIN_ROLE()": "401",
								"INVESTOR_ROLE()": "351",
								"buy()": "infinite",
								"endICO()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3184",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "728",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"conversion(uint256)": "infinite",
								"soldPercent()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 656,
									"end": 667,
									"name": "PUSH",
									"source": 9,
									"value": "430E23400"
								},
								{
									"begin": 639,
									"end": 667,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 639,
									"end": 667,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 707,
									"end": 721,
									"name": "PUSH",
									"source": 9,
									"value": "152D02C7E14AF6800000"
								},
								{
									"begin": 690,
									"end": 721,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 690,
									"end": 721,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 794,
									"end": 795,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 774,
									"end": 795,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 774,
									"end": 795,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 841,
									"end": 1226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 954,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 339,
									"end": 365,
									"name": "PUSH",
									"source": 9,
									"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
								},
								{
									"begin": 980,
									"end": 984,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 954,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 954,
									"end": 964,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 964,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 954,
									"end": 985,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 985,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 954,
									"end": 985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 954,
									"end": 985,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 954,
									"end": 985,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 409,
									"end": 433,
									"name": "PUSH",
									"source": 9,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 1019,
									"end": 1023,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1024,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1024,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1024,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 995,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1050,
									"end": 1060,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1034,
									"end": 1061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1090,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1126,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1111,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1101,
									"end": 1111,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1152,
									"end": 1155,
									"name": "PUSH",
									"source": 9,
									"value": "6F"
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1149,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1155,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1155,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1155,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1180,
									"end": 1183,
									"name": "PUSH",
									"source": 9,
									"value": "DE"
								},
								{
									"begin": 1165,
									"end": 1174,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1177,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1183,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1208,
									"end": 1211,
									"name": "PUSH",
									"source": 9,
									"value": "14D"
								},
								{
									"begin": 1193,
									"end": 1202,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 1204,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1211,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1211,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1211,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1193,
									"end": 1211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 841,
									"end": 1226,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 2818,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ceacbcb09a77daade85a9cdc39e13b7cac45d5c8b54108a7cac7f5b87e8a53b64736f6c63430008110033",
									".code": [
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "4F248409"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "4F248409"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "76082A5E"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "A6F2AE3A"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "282C51F3"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 9,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1591,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1610,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 232,
											"end": 2818,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 371,
											"end": 433,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2086,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2086,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2524,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 299,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 299,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1639,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1639,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1688,
											"end": 1692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1349,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1341,
											"end": 1349,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1338,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1349,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1315,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1720,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 1724,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1703,
											"end": 1755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1703,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1796,
											"end": 1805,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1785,
											"end": 1806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1785,
											"end": 1806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1847,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1836,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1824,
											"end": 1844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1824,
											"end": 1844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1853,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1816,
											"end": 1884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1816,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1918,
											"end": 1922,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1934,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1894,
											"end": 1935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1894,
											"end": 1935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1959,
											"end": 1969,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1980,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1945,
											"end": 1981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1945,
											"end": 1981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2014,
											"end": 2022,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2002,
											"end": 2022,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2002,
											"end": 2022,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1991,
											"end": 2022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2022,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2022,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727"
										},
										{
											"begin": 2042,
											"end": 2051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2037,
											"end": 2052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2052,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2062,
											"end": 2073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 433,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 371,
											"end": 433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 371,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 9,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2193,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2193,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2226,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2236,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 2237,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2293,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2276,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2293,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2375,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 2386,
											"end": 2391,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2442,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2442,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2409,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2475,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 2486,
											"end": 2491,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2409,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2260,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2160,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1349,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1341,
											"end": 1349,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1338,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1349,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1315,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 409,
											"end": 433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2516,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 9,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 299,
											"end": 365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 299,
											"end": 365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2714,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2604,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2695,
											"end": 2705,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2695,
											"end": 2705,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2685,
											"end": 2694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2714,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2714,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 4,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 182,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "66616C6C6261636B206869740000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 350,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 577,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 513,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 513,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 506,
											"end": 580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 678,
											"end": 681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 589,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 589,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 698,
											"end": 710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 691,
											"end": 710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 691,
											"end": 710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 903,
											"end": 929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 903,
											"end": 929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 969,
											"end": 973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 965,
											"end": 985,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 946,
											"end": 963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 939,
											"end": 986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1003,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1617,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1701,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1691,
											"end": 1725,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1854,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 2008,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2011,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2156,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2423,
											"end": 2428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2408,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2430,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2580,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2814,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2839,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2969,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3128,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3273,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3436,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3617,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3857,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3882,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4012,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4168,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4171,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4350,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4316,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4512,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4590,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4699,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4845,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4854,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5027,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5030,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5209,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5175,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5303,
											"end": 5356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5536,
											"name": "PUSH",
											"source": 10,
											"value": "49434F206973206F766572203A28200000000000000000000000000000000000"
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 5725,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5805,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6221,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6369,
											"end": 6373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 6243,
											"end": 6374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "PUSH",
											"source": 10,
											"value": "7468656D2F7468657920706C656173652073656E64206D657469730000000000"
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 6757,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6750,
											"end": 6824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6750,
											"end": 6824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6837,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7233,
											"end": 7253,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7207,
											"end": 7254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7275,
											"end": 7406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7267,
											"end": 7406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7267,
											"end": 7406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7623,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7427,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7556,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7570,
											"end": 7585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7696,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7752,
											"end": 7753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7734,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7810,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7813,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8026,
											"name": "PUSH",
											"source": 10,
											"value": "657863656564732074686520746F74616C20666F722073616C65000000000000"
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 7996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 8027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8190,
											"end": 8193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 8274,
											"end": 8277,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 8215,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8295,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8859,
											"end": 8863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8733,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8994,
											"end": 8999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 8976,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9186,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9269,
											"end": 9270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9254,
											"end": 9271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9245,
											"end": 9251,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9201,
											"end": 9272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9272,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9201,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9343,
											"end": 9352,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9336,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9286,
											"end": 9358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9358,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9286,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9465,
											"end": 9478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 9518,
											"end": 9523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 9491,
											"end": 9524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9524,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 9491,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9379,
											"end": 9534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9620,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9646,
											"end": 9653,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9642,
											"end": 9665,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9670,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9754,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9635,
											"end": 9754,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9673,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9673,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9673,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9673,
											"end": 9752,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9673,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9754,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9635,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9830,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9886,
											"end": 9893,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9866,
											"end": 9875,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9830,
											"end": 9894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9830,
											"end": 9894,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9830,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10055,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 9929,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10038,
											"end": 10043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 10020,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10015,
											"end": 10018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10230,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10205,
											"end": 10231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10205,
											"end": 10231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10313,
											"end": 10314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10302,
											"end": 10311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10295,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10245,
											"end": 10316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10245,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10330,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10423,
											"end": 10547,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10423,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10512,
											"end": 10517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 10497,
											"end": 10518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10518,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10497,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10519,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10477,
											"end": 10537,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10535,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10537,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10477,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10423,
											"end": 10547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10423,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10653,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10631,
											"end": 10653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10631,
											"end": 10653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10690,
											"end": 10695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10666,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10696,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10666,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10822,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10834,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10923,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 10804,
											"end": 10923,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10842,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10842,
											"end": 10921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10921,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 10842,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10923,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 10804,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10970,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 11052,
											"end": 11059,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11043,
											"end": 11049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11028,
											"end": 11050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10999,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11060,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10999,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 11074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 11085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11207,
											"end": 11233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11207,
											"end": 11233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11304,
											"end": 11313,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11300,
											"end": 11317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 11247,
											"end": 11318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11247,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11585,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 11339,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11517,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11479,
											"end": 11480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11471,
											"end": 11477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11556,
											"end": 11573,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11551,
											"end": 11553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11543,
											"end": 11549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11539,
											"end": 11554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11977,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 11595,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11737,
											"end": 11740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 11821,
											"end": 11824,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 11762,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11762,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11842,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11931,
											"end": 11934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11842,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 11842,
											"end": 11935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11842,
											"end": 11935,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11842,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11964,
											"end": 11966,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11955,
											"end": 11967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11948,
											"end": 11967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11948,
											"end": 11967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12422,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11987,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12172,
											"end": 12198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12172,
											"end": 12198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12219,
											"end": 12236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12212,
											"end": 12259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12280,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12280,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12280,
											"end": 12411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12280,
											"end": 12411,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12280,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 12422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12517,
											"end": 12518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 12499,
											"end": 12519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12519,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12555,
											"end": 12556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 12537,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12596,
											"end": 12597,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 12640,
											"end": 12651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 12622,
											"end": 12652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12652,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 12622,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 12822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12808,
											"end": 12823,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12802,
											"end": 12824,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12771,
											"end": 12780,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12842,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12720,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12720,
											"end": 12879,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 12859,
											"end": 12877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12720,
											"end": 12879,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12720,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12432,
											"end": 12890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13043,
											"end": 13046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13066,
											"end": 13247,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13066,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13210,
											"end": 13235,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13206,
											"end": 13207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13198,
											"end": 13204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13194,
											"end": 13208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13066,
											"end": 13247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13066,
											"end": 13247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13675,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 13257,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13417,
											"end": 13420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13442,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13524,
											"end": 13526,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13519,
											"end": 13522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 13442,
											"end": 13527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13527,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13442,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 13629,
											"end": 13632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13540,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13657,
											"end": 13660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13653,
											"end": 13665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13646,
											"end": 13665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13646,
											"end": 13665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13792,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13685,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13737,
											"end": 13743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13775,
											"end": 13780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13769,
											"end": 13781,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13685,
											"end": 13792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 14076,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 13802,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13887,
											"end": 13888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13912,
											"end": 13913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13909,
											"end": 13922,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14008,
											"end": 14009,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14003,
											"end": 14006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 13987,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13980,
											"end": 13991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 14012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 13939,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13930,
											"end": 13940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 13940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 13940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13901,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14064,
											"end": 14065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14055,
											"end": 14061,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14053,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 14076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 14076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 14076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 14076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 14076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14224,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 14257,
											"end": 14262,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 14224,
											"end": 14263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14263,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 14224,
											"end": 14263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 14365,
											"end": 14371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14360,
											"end": 14363,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 14283,
											"end": 14372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14372,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 14283,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14276,
											"end": 14372,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14276,
											"end": 14372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14385,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14443,
											"end": 14449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14441,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14424,
											"end": 14429,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14420,
											"end": 14436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14385,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 14385,
											"end": 14450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14385,
											"end": 14450,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14385,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14479,
											"end": 14485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14474,
											"end": 14477,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14463,
											"end": 14486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14463,
											"end": 14486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14681,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 14506,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 14646,
											"end": 14647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14638,
											"end": 14644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 14670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 15109,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 14691,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14851,
											"end": 14854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14876,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14958,
											"end": 14960,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14953,
											"end": 14956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 14876,
											"end": 14961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14961,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14876,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14869,
											"end": 14961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14869,
											"end": 14961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 15063,
											"end": 15066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 14974,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 15067,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14974,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15096,
											"end": 15098,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15091,
											"end": 15094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 15109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 15109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 15109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 15109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15527,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 15527,
											"end": 15675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15675,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15527,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15520,
											"end": 15675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15520,
											"end": 15675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15787,
											"end": 15790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15784,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15696,
											"end": 15791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15791,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15696,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15689,
											"end": 15791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15689,
											"end": 15791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 15956,
											"end": 15959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 15812,
											"end": 15960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15960,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 15812,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15981,
											"end": 16076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16072,
											"end": 16075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15981,
											"end": 16076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15981,
											"end": 16076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15981,
											"end": 16076,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 15981,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16097,
											"end": 16100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16090,
											"end": 16100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16090,
											"end": 16100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15119,
											"end": 16110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16230,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16120,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16216,
											"end": 16218,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16212,
											"end": 16219,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16209,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16200,
											"end": 16205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16192,
											"end": 16220,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16182,
											"end": 16220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16182,
											"end": 16220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16360,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16393,
											"end": 16398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 16360,
											"end": 16399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16399,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16360,
											"end": 16399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16483,
											"end": 16489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16478,
											"end": 16481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 16419,
											"end": 16490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16490,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16419,
											"end": 16490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16412,
											"end": 16490,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16412,
											"end": 16490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 16561,
											"end": 16567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16556,
											"end": 16559,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16549,
											"end": 16553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16542,
											"end": 16547,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 16554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 16503,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16568,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 16503,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16619,
											"end": 16625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16597,
											"end": 16626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16626,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16597,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16595,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 16627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 16627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16332,
											"end": 16637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16760,
											"end": 16764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16791,
											"end": 16800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16787,
											"end": 16805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16864,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16849,
											"end": 16853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16865,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16841,
											"end": 16842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16830,
											"end": 16839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16819,
											"end": 16866,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16887,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 16960,
											"end": 16964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16951,
											"end": 16957,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16887,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 16887,
											"end": 16965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16887,
											"end": 16965,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 16887,
											"end": 16965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16879,
											"end": 16965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16879,
											"end": 16965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16986,
											"end": 17182,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 16986,
											"end": 17182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17038,
											"end": 17115,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17035,
											"end": 17036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17028,
											"end": 17116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17139,
											"end": 17143,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 17136,
											"end": 17137,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17129,
											"end": 17144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17167,
											"end": 17171,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17164,
											"end": 17165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17388,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 17192,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17244,
											"end": 17321,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17241,
											"end": 17242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17234,
											"end": 17322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17345,
											"end": 17349,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17342,
											"end": 17343,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17335,
											"end": 17350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17373,
											"end": 17377,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17370,
											"end": 17371,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17363,
											"end": 17378,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17585,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 17398,
											"end": 17585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17437,
											"end": 17440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17464,
											"end": 17488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17482,
											"end": 17487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17464,
											"end": 17488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 17464,
											"end": 17488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17464,
											"end": 17488,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17464,
											"end": 17488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17455,
											"end": 17488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17455,
											"end": 17488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17514,
											"end": 17518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17507,
											"end": 17512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17504,
											"end": 17519,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17501,
											"end": 17542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 17501,
											"end": 17542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 17522,
											"end": 17540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 17522,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17501,
											"end": 17542,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 17501,
											"end": 17542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17574,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17566,
											"end": 17571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17562,
											"end": 17575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17555,
											"end": 17575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17555,
											"end": 17575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17595,
											"end": 17785,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 17595,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17739,
											"end": 17773,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 17735,
											"end": 17736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17723,
											"end": 17737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17716,
											"end": 17774,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17595,
											"end": 17785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17595,
											"end": 17785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 18177,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 17795,
											"end": 18177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17937,
											"end": 17940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 18026,
											"end": 18028,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18021,
											"end": 18024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17962,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 17962,
											"end": 18029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17962,
											"end": 18029,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 17962,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17955,
											"end": 18029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17955,
											"end": 18029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 18131,
											"end": 18134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 18042,
											"end": 18135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18135,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 18042,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18164,
											"end": 18166,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18159,
											"end": 18162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18155,
											"end": 18167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18148,
											"end": 18167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18148,
											"end": 18167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 18177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 18177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 18177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 18177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18622,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 18187,
											"end": 18622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18395,
											"end": 18397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18384,
											"end": 18393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18380,
											"end": 18398,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18372,
											"end": 18398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18372,
											"end": 18398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18448,
											"end": 18457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18442,
											"end": 18446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18438,
											"end": 18458,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18434,
											"end": 18435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18423,
											"end": 18432,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18419,
											"end": 18436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18412,
											"end": 18459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 18606,
											"end": 18610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 18480,
											"end": 18611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18611,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 18480,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18472,
											"end": 18611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18472,
											"end": 18611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"INVESTOR_ROLE()": "76082a5e",
							"buy()": "a6f2ae3a",
							"endICO()": "4f248409",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eftt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVESTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amnt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/ICO.sol\":{\"keccak256\":\"0xf09f3e332256e7e7ac48d28bd5e7eeebdd0d8a4056d2b0dfdc6b8ad68521a2ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9cc457f92eeb8fe815158ddca7b57588896e208d001c53f7369637db6f7a63\",\"dweb:/ipfs/QmeJAWsjmTFNVN2WkCn7rzsXRHCjbBhisUZLG5DQJ2Qf8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/ICO.sol:ICO",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1898,
								"contract": "contracts/ICO.sol:ICO",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 1900,
								"contract": "contracts/ICO.sol:ICO",
								"label": "devAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1903,
								"contract": "contracts/ICO.sol:ICO",
								"label": "minters_",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1905,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxSupply_",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1908,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1911,
								"contract": "contracts/ICO.sol:ICO",
								"label": "eftt",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)466"
							},
							{
								"astId": 1918,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxICO",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1920,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldInMetis",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1922,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldEFTT",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1925,
								"contract": "contracts/ICO.sol:ICO",
								"label": "ratioMetis",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1929,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLocks",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)466": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/ICO.sol:ICO",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/ICO.sol:ICO",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							488
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							699
						],
						"Math": [
							1564
						],
						"Strings": [
							663
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 489,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 664,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 688,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1841:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 488,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								687,
								699,
								388,
								488
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 315,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 315,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 315,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3791:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3801:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3830:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4009:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 663,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$663_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 662,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4116:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 663,
																								"src": "4088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$663_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 642,
																							"src": "4088:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 315,
									"src": "3718:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4461:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4478:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4471:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4452:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:0"
									},
									"scope": 315,
									"src": "4378:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4906:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4877:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:0"
									},
									"scope": 315,
									"src": "4803:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5332:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5303:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:0"
									},
									"scope": 315,
									"src": "5228:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5989:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 315,
									"src": "5912:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6879:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6889:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:0"
									},
									"scope": 315,
									"src": "6811:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7119:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7129:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7257:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7229:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7083:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:0"
									},
									"scope": 315,
									"src": "7046:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7529:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7539:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7568:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7582:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "7664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7632:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:0"
									},
									"scope": 315,
									"src": "7461:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7934:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "7944:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7972:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "7993:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7986:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "8069:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8037:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:0"
									},
									"scope": 315,
									"src": "7865:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1806:6295:0",
							"usedErrors": []
						}
					],
					"src": "108:7994:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 400,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 409,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 466,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 466,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 466,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 466,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 466,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 466,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							488
						]
					},
					"id": 489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 488,
							"linearizedBaseContracts": [
								488
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 473,
												"id": 476,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 488,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 482,
												"id": 485,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 488,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 489,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1564
						],
						"Strings": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 491,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1565,
							"src": "126:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 492,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "Strings",
							"nameLocation": "196:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 495,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "210:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 493,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 498,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "270:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 496,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 497,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "486:625:4",
										"statements": [
											{
												"id": 544,
												"nodeType": "UncheckedBlock",
												"src": "496:609:4",
												"statements": [
													{
														"assignments": [
															507
														],
														"declarations": [
															{
																"constant": false,
																"id": 507,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "520:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "548:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 508,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "537:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1564_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1401,
																	"src": "537:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:4"
													},
													{
														"assignments": [
															516
														],
														"declarations": [
															{
																"constant": false,
																"id": 516,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "572:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 515,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 521,
														"initialValue": {
															"arguments": [
																{
																	"id": 519,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "606:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 517,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:4"
													},
													{
														"assignments": [
															523
														],
														"declarations": [
															{
																"constant": false,
																"id": 523,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "627:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 524,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 516,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:4",
																"valueSize": 1
															},
															{
																"declaration": 507,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:4",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:4",
																"valueSize": 1
															}
														],
														"id": 525,
														"nodeType": "InlineAssembly",
														"src": "699:76:4"
													},
													{
														"body": {
															"id": 540,
															"nodeType": "Block",
															"src": "801:267:4",
															"statements": [
																{
																	"expression": {
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:4",
																		"subExpression": {
																			"id": 527,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "819:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 529,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:4"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:4"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 495,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 523,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 501,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 530,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:4"
																},
																{
																	"expression": {
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1003:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 534,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1036:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 539,
																	"nodeType": "IfStatement",
																	"src": "1032:21:4",
																	"trueBody": {
																		"id": 538,
																		"nodeType": "Break",
																		"src": "1048:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 541,
														"nodeType": "WhileStatement",
														"src": "788:280:4"
													},
													{
														"expression": {
															"id": 542,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 505,
														"id": 543,
														"nodeType": "Return",
														"src": "1081:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "471:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:4"
									},
									"scope": 663,
									"src": "415:696:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "1290:100:4",
										"statements": [
											{
												"id": 564,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "1343:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 558,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "1362:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 556,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1564,
																				"src": "1350:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1564_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1524,
																			"src": "1350:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 554,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	566,
																	642,
																	662
																],
																"referencedDeclaration": 642,
																"src": "1331:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 553,
														"id": 563,
														"nodeType": "Return",
														"src": "1324:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1237:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1275:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:4"
									},
									"scope": 663,
									"src": "1216:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1603:347:4",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1613:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 576,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 581,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "1649:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:4"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1670:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 589,
														"indexExpression": {
															"hexValue": "30",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:4"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 593,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1695:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 595,
														"indexExpression": {
															"hexValue": "31",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:4"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "1765:83:4",
													"statements": [
														{
															"expression": {
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 613,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1779:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 615,
																	"indexExpression": {
																		"id": 614,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "1786:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 616,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "1791:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 620,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "1800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:4"
														},
														{
															"expression": {
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "1826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 626,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1753:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"assignments": [
														600
													],
													"declarations": [
														{
															"constant": false,
															"id": 600,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 628,
															"src": "1725:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 599,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 606,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 602,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "1741:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:4",
														"subExpression": {
															"id": 610,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "1762:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "1865:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1936:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 636,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 640,
												"nodeType": "Return",
												"src": "1922:21:4"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1534:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1549:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:4"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1588:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:4"
									},
									"scope": 663,
									"src": "1513:437:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "2175:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 655,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "2220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 653,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 651,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 658,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "2228:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 650,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															566,
															642,
															662
														],
														"referencedDeclaration": 642,
														"src": "2192:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 649,
												"id": 660,
												"nodeType": "Return",
												"src": "2185:59:4"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2123:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2160:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:4"
									},
									"scope": 663,
									"src": "2102:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 664,
							"src": "188:2065:4",
							"usedErrors": []
						}
					],
					"src": "101:2153:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							687
						],
						"IERC165": [
							699
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 700,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "754:7:5"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687,
								699
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 679,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$699",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 684,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 674,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 671,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 687,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 688,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 692,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 699,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1564
						]
					},
					"id": 1565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 706,
									"members": [
										{
											"id": 703,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 704,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 705,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 716,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 717,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 720,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 719,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 722,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 1564,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 734,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 735,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 738,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 737,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 740,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 1564,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 752,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 753,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 755,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 757,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 759,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 763,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 1564,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 775,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 779,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 783,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 774,
												"id": 788,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 1564,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "1795:3797:7",
										"statements": [
											{
												"id": 910,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:7",
												"statements": [
													{
														"assignments": [
															803
														],
														"declarations": [
															{
																"constant": false,
																"id": 803,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2126:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 804,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:7"
													},
													{
														"assignments": [
															806
														],
														"declarations": [
															{
																"constant": false,
																"id": 806,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2198:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 805,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 807,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:7",
																"valueSize": 1
															}
														],
														"id": 808,
														"nodeType": "InlineAssembly",
														"src": "2269:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "2516:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "2512:75:7",
														"trueBody": {
															"id": 816,
															"nodeType": "Block",
															"src": "2528:59:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 812,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "2553:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 813,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "2561:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 801,
																	"id": 815,
																	"nodeType": "Return",
																	"src": "2546:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2697:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 820,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2711:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 818,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:7"
													},
													{
														"assignments": [
															825
														],
														"declarations": [
															{
																"constant": false,
																"id": 825,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2973:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 826,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:7",
																"valueSize": 1
															}
														],
														"id": 827,
														"nodeType": "InlineAssembly",
														"src": "3004:300:7"
													},
													{
														"assignments": [
															829
														],
														"declarations": [
															{
																"constant": false,
																"id": 829,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "3611:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 828,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 837,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "3626:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:7",
																			"subExpression": {
																				"id": 831,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "3642:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:7",
																"valueSize": 1
															},
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:7",
																"valueSize": 1
															}
														],
														"id": 838,
														"nodeType": "InlineAssembly",
														"src": "3672:371:7"
													},
													{
														"expression": {
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 839,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "4109:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 840,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "4118:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 841,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "4126:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 844,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:7"
													},
													{
														"assignments": [
															846
														],
														"declarations": [
															{
																"constant": false,
																"id": 846,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "4448:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 853,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 848,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "4471:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:7"
													},
													{
														"expression": {
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 854,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4704:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 856,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4719:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 857,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4733:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 861,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:7"
													},
													{
														"expression": {
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 862,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 864,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4788:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 865,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4802:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:7"
													},
													{
														"expression": {
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 870,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4843:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 872,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4858:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 873,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4872:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 877,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:7"
													},
													{
														"expression": {
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4913:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4928:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4942:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 885,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:7"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4983:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4998:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "5012:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:7"
													},
													{
														"expression": {
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "5054:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "5069:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "5083:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 901,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:7"
													},
													{
														"expression": {
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 902,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "5524:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5533:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 904,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "5541:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 907,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:7"
													},
													{
														"expression": {
															"id": 908,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5569:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 801,
														"id": 909,
														"nodeType": "Return",
														"src": "5562:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1692:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1711:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1730:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:7"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1779:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:7"
									},
									"scope": 1564,
									"src": "1667:3925:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "5872:189:7",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "5882:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"id": 930,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "5906:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 931,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "5909:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 932,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5912:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															912,
															956
														],
														"referencedDeclaration": 912,
														"src": "5899:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$706",
															"typeString": "enum Math.Rounding"
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 935,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "5938:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$706",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 936,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5950:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "5950:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$706",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 940,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "5972:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 941,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "5975:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 942,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "5978:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 939,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "5934:98:7",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "5996:36:7",
													"statements": [
														{
															"expression": {
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 947,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "6010:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 953,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "6048:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 954,
												"nodeType": "Return",
												"src": "6041:13:7"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5749:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5787:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5816:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 920,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "5816:8:7"
													},
													"referencedDeclaration": 706,
													"src": "5816:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:7"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5863:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:7"
									},
									"scope": 1564,
									"src": "5724:337:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "6337:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6351:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "6347:45:7",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "6359:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 963,
															"id": 968,
															"nodeType": "Return",
															"src": "6373:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "7071:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 975,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "7099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 974,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1236,
																			1272
																		],
																		"referencedDeclaration": 1236,
																		"src": "7094:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:7"
											},
											{
												"id": 1066,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:7",
												"statements": [
													{
														"expression": {
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 982,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7532:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 983,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7542:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 984,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7551:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 985,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7555:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 988,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 992,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:7"
													},
													{
														"expression": {
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 993,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7581:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 994,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7591:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 995,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7600:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 996,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7604:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 999,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1003,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:7"
													},
													{
														"expression": {
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1004,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7630:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1005,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7640:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1006,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7649:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1007,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7653:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1010,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:7"
													},
													{
														"expression": {
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1015,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7679:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1016,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7689:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1017,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7698:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1018,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7702:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1021,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1025,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:7"
													},
													{
														"expression": {
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1026,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7728:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1027,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7738:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1028,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7747:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1029,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7751:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1032,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:7"
													},
													{
														"expression": {
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1037,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1038,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7787:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1039,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7796:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1040,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7800:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1047,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:7"
													},
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7826:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1049,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7836:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1050,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7845:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1051,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7849:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "7886:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "7894:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1062,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "7898:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1059,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7882:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 963,
														"id": 1065,
														"nodeType": "Return",
														"src": "7875:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "6294:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "6328:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:7"
									},
									"scope": 1564,
									"src": "6280:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "8098:161:7",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:7",
												"statements": [
													{
														"assignments": [
															1080
														],
														"declarations": [
															{
																"constant": false,
																"id": 1080,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "8132:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1079,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1084,
														"initialValue": {
															"arguments": [
																{
																	"id": 1082,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "8154:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1081,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1068,
																	1104
																],
																"referencedDeclaration": 1068,
																"src": "8149:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "8177:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1086,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1074,
																					"src": "8187:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1087,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "8199:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "8199:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1090,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1080,
																						"src": "8214:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1091,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1080,
																						"src": "8223:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1093,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "8232:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1078,
														"id": 1101,
														"nodeType": "Return",
														"src": "8170:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8036:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8047:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1072,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "8047:8:7"
													},
													"referencedDeclaration": 706,
													"src": "8047:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8089:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:7"
									},
									"scope": 1564,
									"src": "8022:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "8444:922:7",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "8454:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"hexValue": "30",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:7"
											},
											{
												"id": 1232,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8510:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "8506:99:7",
														"trueBody": {
															"id": 1129,
															"nodeType": "Block",
															"src": "8528:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8546:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:7"
																},
																{
																	"expression": {
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8577:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1128,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8622:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1145,
														"nodeType": "IfStatement",
														"src": "8618:96:7",
														"trueBody": {
															"id": 1144,
															"nodeType": "Block",
															"src": "8639:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8657:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1139,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:7"
																},
																{
																	"expression": {
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8687:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1143,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8731:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "8727:96:7",
														"trueBody": {
															"id": 1159,
															"nodeType": "Block",
															"src": "8748:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8766:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:7"
																},
																{
																	"expression": {
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8796:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8840:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1175,
														"nodeType": "IfStatement",
														"src": "8836:96:7",
														"trueBody": {
															"id": 1174,
															"nodeType": "Block",
															"src": "8857:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:7"
																},
																{
																	"expression": {
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8905:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1173,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8949:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1190,
														"nodeType": "IfStatement",
														"src": "8945:93:7",
														"trueBody": {
															"id": 1189,
															"nodeType": "Block",
															"src": "8965:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:7"
																},
																{
																	"expression": {
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9012:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1191,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9055:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1205,
														"nodeType": "IfStatement",
														"src": "9051:93:7",
														"trueBody": {
															"id": 1204,
															"nodeType": "Block",
															"src": "9071:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1196,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "9089:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:7"
																},
																{
																	"expression": {
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1200,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9118:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1203,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9161:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1220,
														"nodeType": "IfStatement",
														"src": "9157:93:7",
														"trueBody": {
															"id": 1219,
															"nodeType": "Block",
															"src": "9177:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "9195:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:7"
																},
																{
																	"expression": {
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1215,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9224:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9267:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1231,
														"nodeType": "IfStatement",
														"src": "9263:64:7",
														"trueBody": {
															"id": 1230,
															"nodeType": "Block",
															"src": "9283:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9301:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1233,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1113,
													"src": "9353:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1234,
												"nodeType": "Return",
												"src": "9346:13:7"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "8397:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "8435:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:7"
									},
									"scope": 1564,
									"src": "8383:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "9599:165:7",
										"statements": [
											{
												"id": 1270,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:7",
												"statements": [
													{
														"assignments": [
															1248
														],
														"declarations": [
															{
																"constant": false,
																"id": 1248,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1270,
																"src": "9633:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1247,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1252,
														"initialValue": {
															"arguments": [
																{
																	"id": 1250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "9655:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1249,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1236,
																	1272
																],
																"referencedDeclaration": 1236,
																"src": "9650:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "9682:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1254,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "9692:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1255,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "9704:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "9704:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1259,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1248,
																						"src": "9724:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1261,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1239,
																					"src": "9733:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1246,
														"id": 1269,
														"nodeType": "Return",
														"src": "9675:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9533:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9548:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1240,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "9548:8:7"
													},
													"referencedDeclaration": 706,
													"src": "9548:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:7"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9590:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:7"
									},
									"scope": 1564,
									"src": "9519:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "9951:828:7",
										"statements": [
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9961:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"hexValue": "30",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:7"
											},
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10017:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1300,
														"nodeType": "IfStatement",
														"src": "10013:99:7",
														"trueBody": {
															"id": 1299,
															"nodeType": "Block",
															"src": "10034:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10052:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1294,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:7"
																},
																{
																	"expression": {
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10085:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1298,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10129:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1317,
														"nodeType": "IfStatement",
														"src": "10125:99:7",
														"trueBody": {
															"id": 1316,
															"nodeType": "Block",
															"src": "10146:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10164:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:7"
																},
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10197:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10241:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "10237:99:7",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "10258:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1328,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:7"
																},
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10309:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10353:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1351,
														"nodeType": "IfStatement",
														"src": "10349:96:7",
														"trueBody": {
															"id": 1350,
															"nodeType": "Block",
															"src": "10369:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10387:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:7"
																},
																{
																	"expression": {
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10419:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10462:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "10458:96:7",
														"trueBody": {
															"id": 1367,
															"nodeType": "Block",
															"src": "10478:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10496:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:7"
																},
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10528:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1369,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10571:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1385,
														"nodeType": "IfStatement",
														"src": "10567:96:7",
														"trueBody": {
															"id": 1384,
															"nodeType": "Block",
															"src": "10587:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10605:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:7"
																},
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10637:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1396,
														"nodeType": "IfStatement",
														"src": "10676:64:7",
														"trueBody": {
															"id": 1395,
															"nodeType": "Block",
															"src": "10696:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10714:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1398,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "10766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1399,
												"nodeType": "Return",
												"src": "10759:13:7"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "9904:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "9942:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:7"
									},
									"scope": 1564,
									"src": "9889:890:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "11014:165:7",
										"statements": [
											{
												"id": 1435,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:7",
												"statements": [
													{
														"assignments": [
															1413
														],
														"declarations": [
															{
																"constant": false,
																"id": 1413,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1435,
																"src": "11048:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1412,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1417,
														"initialValue": {
															"arguments": [
																{
																	"id": 1415,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "11071:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1414,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1401,
																	1437
																],
																"referencedDeclaration": 1401,
																"src": "11065:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "11098:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1419,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "11108:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1420,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "11120:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "11120:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1424,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1413,
																						"src": "11139:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1426,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "11148:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1432,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1411,
														"id": 1434,
														"nodeType": "Return",
														"src": "11091:71:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "10948:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "10963:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1405,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "10963:8:7"
													},
													"referencedDeclaration": 706,
													"src": "10963:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "11005:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:7"
									},
									"scope": 1564,
									"src": "10933:246:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "11493:600:7",
										"statements": [
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "11503:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"hexValue": "30",
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:7"
											},
											{
												"id": 1520,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1449,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1463,
														"nodeType": "IfStatement",
														"src": "11555:98:7",
														"trueBody": {
															"id": 1462,
															"nodeType": "Block",
															"src": "11577:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1454,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11595:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1457,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:7"
																},
																{
																	"expression": {
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11626:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1461,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11670:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1478,
														"nodeType": "IfStatement",
														"src": "11666:95:7",
														"trueBody": {
															"id": 1477,
															"nodeType": "Block",
															"src": "11687:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11705:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1472,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:7"
																},
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11735:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11778:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1493,
														"nodeType": "IfStatement",
														"src": "11774:95:7",
														"trueBody": {
															"id": 1492,
															"nodeType": "Block",
															"src": "11795:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1484,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11813:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:7"
																},
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11843:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11886:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "11882:95:7",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "11903:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11921:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1502,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:7"
																},
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11951:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11994:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1519,
														"nodeType": "IfStatement",
														"src": "11990:64:7",
														"trueBody": {
															"id": 1518,
															"nodeType": "Block",
															"src": "12010:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1514,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "12028:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1521,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1446,
													"src": "12080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1522,
												"nodeType": "Return",
												"src": "12073:13:7"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "11446:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:7"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "11484:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:7"
									},
									"scope": 1564,
									"src": "11430:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "12329:173:7",
										"statements": [
											{
												"id": 1561,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:7",
												"statements": [
													{
														"assignments": [
															1536
														],
														"declarations": [
															{
																"constant": false,
																"id": 1536,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1561,
																"src": "12363:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1535,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1540,
														"initialValue": {
															"arguments": [
																{
																	"id": 1538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "12387:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1537,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1524,
																	1563
																],
																"referencedDeclaration": 1524,
																"src": "12380:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "12414:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1542,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1530,
																					"src": "12424:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1543,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "12436:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "12436:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1549,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1547,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1536,
																									"src": "12457:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1548,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1550,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1552,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "12471:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1558,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1534,
														"id": 1560,
														"nodeType": "Return",
														"src": "12407:78:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12263:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12278:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1528,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "12278:8:7"
													},
													"referencedDeclaration": 706,
													"src": "12278:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:7"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12320:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:7"
									},
									"scope": 1564,
									"src": "12247:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1565,
							"src": "202:12302:7",
							"usedErrors": []
						}
					],
					"src": "103:12402:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1876
						]
					},
					"id": 1877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1876,
							"linearizedBaseContracts": [
								1876
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 1597,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															1580
														],
														"declarations": [
															{
																"constant": false,
																"id": 1580,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1597,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1584,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1582,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1585,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1586,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1592,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1578,
															"id": 1591,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1594,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1595,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1578,
														"id": 1596,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1876,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 1625,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1612,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1618,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1610,
															"id": 1617,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1620,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1621,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1623,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1610,
														"id": 1624,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1876,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 1667,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1638,
															"id": 1645,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															1648
														],
														"declarations": [
															{
																"constant": false,
																"id": 1648,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1667,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1647,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1652,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1649,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1653,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1654,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1656,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1662,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1638,
															"id": 1661,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1664,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1665,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1638,
														"id": 1666,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1876,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 1695,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1681,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1688,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1686,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1680,
															"id": 1687,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1690,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1691,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1693,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1680,
														"id": 1694,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1876,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1716,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1708,
															"id": 1715,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1718,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1719,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1721,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1708,
														"id": 1722,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1876,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1736,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1738,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1876,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1751,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1753,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1876,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1768,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1876,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1779,
												"id": 1783,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1876,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1798,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1876,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "5084:106:8",
										"statements": [
											{
												"id": 1823,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1813,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "5126:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1814,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "5131:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1816,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "5134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1812,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1818,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1819,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "5168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "5172:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1811,
														"id": 1822,
														"nodeType": "Return",
														"src": "5161:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "4981:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5000:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5019:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:8"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5075:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:8"
									},
									"scope": 1876,
									"src": "4959:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "5799:105:8",
										"statements": [
											{
												"id": 1848,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "5841:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1841,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "5848:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1837,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1843,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "5882:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1845,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "5886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1836,
														"id": 1847,
														"nodeType": "Return",
														"src": "5875:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5715:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5734:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:8"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:8"
									},
									"scope": 1876,
									"src": "5674:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "6675:105:8",
										"statements": [
											{
												"id": 1873,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1863,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "6717:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1866,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "6724:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1862,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1868,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "6758:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "6762:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1861,
														"id": 1872,
														"nodeType": "Return",
														"src": "6751:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6572:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6591:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6610:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1856,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:8"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:8"
									},
									"scope": 1876,
									"src": "6550:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1877,
							"src": "482:6300:8",
							"usedErrors": []
						}
					],
					"src": "107:6676:8"
				},
				"id": 8
			},
			"contracts/ICO.sol": {
				"ast": {
					"absolutePath": "contracts/ICO.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							488
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							388
						],
						"ICO": [
							2187
						],
						"IERC165": [
							699
						],
						"IERC20": [
							466
						],
						"Math": [
							1564
						],
						"SafeMath": [
							1876
						],
						"Strings": [
							663
						]
					},
					"id": 2188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2188,
							"sourceUnit": 467,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2188,
							"sourceUnit": 1877,
							"src": "114:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2188,
							"sourceUnit": 316,
							"src": "172:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1882,
										"name": "AccessControl",
										"nameLocations": [
											"248:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "248:13:9"
									},
									"id": 1883,
									"nodeType": "InheritanceSpecifier",
									"src": "248:13:9"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2187,
							"linearizedBaseContracts": [
								2187,
								315,
								687,
								699,
								388,
								488
							],
							"name": "ICO",
							"nameLocation": "241:3:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1886,
									"libraryName": {
										"id": 1884,
										"name": "SafeMath",
										"nameLocations": [
											"273:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1876,
										"src": "273:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "267:27:9",
									"typeName": {
										"id": 1885,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "76082a5e",
									"id": 1891,
									"mutability": "constant",
									"name": "INVESTOR_ROLE",
									"nameLocation": "323:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "299:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1887,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "494e564553544f525f524f4c45",
												"id": 1889,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "349:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												},
												"value": "INVESTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												}
											],
											"id": 1888,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "339:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1890,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "339:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1896,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "395:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "371:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1892,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1894,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "419:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1893,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "409:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "409:24:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1898,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "540:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "524:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1897,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "524:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1900,
									"mutability": "mutable",
									"name": "devAddress",
									"nameLocation": "575:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "551:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1899,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "551:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1903,
									"mutability": "mutable",
									"name": "minters_",
									"nameLocation": "601:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "591:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1901,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "591:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1902,
										"nodeType": "ArrayTypeName",
										"src": "591:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1905,
									"mutability": "mutable",
									"name": "maxSupply_",
									"nameLocation": "623:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "615:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1904,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "615:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1908,
									"mutability": "mutable",
									"name": "timeLock",
									"nameLocation": "647:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "639:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138303030303030303030",
										"id": 1907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "656:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18000000000_by_1",
											"typeString": "int_const 18000000000"
										},
										"value": "18000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1911,
									"mutability": "mutable",
									"name": "eftt",
									"nameLocation": "680:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "673:11:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$466",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1909,
											"name": "IERC20",
											"nameLocations": [
												"673:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 466,
											"src": "673:6:9"
										},
										"referencedDeclaration": 466,
										"src": "673:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$466",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1918,
									"mutability": "mutable",
									"name": "maxICO",
									"nameLocation": "698:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "690:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"id": 1917,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030",
											"id": 1913,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "707:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000_by_1",
												"typeString": "int_const 100000"
											},
											"value": "100000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1916,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1914,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "715:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1915,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "719:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "715:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "707:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1920,
									"mutability": "mutable",
									"name": "SoldInMetis",
									"nameLocation": "735:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "727:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1922,
									"mutability": "mutable",
									"name": "SoldEFTT",
									"nameLocation": "760:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "752:16:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1921,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "752:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1925,
									"mutability": "mutable",
									"name": "ratioMetis",
									"nameLocation": "782:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "774:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1923,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "794:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1929,
									"mutability": "mutable",
									"name": "timeLocks",
									"nameLocation": "823:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2187,
									"src": "801:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1928,
										"keyType": {
											"id": 1926,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "809:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "801:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1927,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "817:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "890:336:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1937,
															"name": "INVESTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "965:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1938,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "980:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1936,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "954:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "954:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1942,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "1006:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1943,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "1019:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1941,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "995:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "995:29:9"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1946,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1034:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1949,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1050:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1054:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1050:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1042:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1947,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1042:8:9",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1042:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1034:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "1034:27:9"
											},
											{
												"expression": {
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "eftt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "1071:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1956,
																"name": "_eftt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "1085:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1955,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "1078:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$466_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1078:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"src": "1071:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "1071:20:9"
											},
											{
												"expression": {
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1960,
														"name": "devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "1101:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1963,
																"name": "_dev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "1122:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1114:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1961,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1114:8:9",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1114:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1101:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "1101:26:9"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1967,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "1137:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1969,
														"indexExpression": {
															"hexValue": "30",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1147:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1137:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313131",
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1152:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_111_by_1",
															"typeString": "int_const 111"
														},
														"value": "111"
													},
													"src": "1137:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "1137:18:9"
											},
											{
												"expression": {
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1973,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "1165:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1975,
														"indexExpression": {
															"hexValue": "31",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1165:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323232",
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_222_by_1",
															"typeString": "int_const 222"
														},
														"value": "222"
													},
													"src": "1165:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "1165:18:9"
											},
											{
												"expression": {
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1979,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "1193:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1981,
														"indexExpression": {
															"hexValue": "32",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1193:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1208:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "1193:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "1193:18:9"
											}
										]
									},
									"id": 1986,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "_eftt",
												"nameLocation": "861:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "853:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "876:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "868:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:29:9"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:9"
									},
									"scope": 2187,
									"src": "841:385:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 1990,
									"name": "Log",
									"nameLocation": "1238:3:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"indexed": false,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "1249:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "1242:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1242:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:13:9"
									},
									"src": "1232:23:9"
								},
								{
									"anonymous": false,
									"eventSelector": "92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727",
									"id": 1994,
									"name": "Sold",
									"nameLocation": "1266:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "1271:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1271:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:6:9"
									},
									"src": "1260:17:9"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "1305:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1997,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1323:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1329:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1323:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1999,
																"name": "timeLock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "1341:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1323:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f206973206f766572203a2820",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1350:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															},
															"value": "ICO is over :( "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															}
														],
														"id": 1996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "1315:53:9"
											},
											{
												"id": 2004,
												"nodeType": "PlaceholderStatement",
												"src": "1378:1:9"
											}
										]
									},
									"id": 2006,
									"name": "_timeCheck",
									"nameLocation": "1293:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1303:2:9"
									},
									"src": "1284:102:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "1412:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2009,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "1430:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2010,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1439:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1443:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1439:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1430:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75277265206e6f7420746865206f776e6572",
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1450:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															},
															"value": "You're not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															}
														],
														"id": 2008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "1422:51:9"
											},
											{
												"id": 2016,
												"nodeType": "PlaceholderStatement",
												"src": "1483:1:9"
											}
										]
									},
									"id": 2018,
									"name": "_onlyOwner",
									"nameLocation": "1400:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1410:2:9"
									},
									"src": "1391:100:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "1528:104:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "66616c6c6261636b20686974",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1595:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															},
															"value": "fallback hit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															}
														],
														"id": 2021,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "1591:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "EmitStatement",
												"src": "1586:24:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2025,
														"name": "buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2092,
														"src": "1620:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:5:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "1620:5:9"
											}
										]
									},
									"id": 2029,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:2:9"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1528:0:9"
									},
									"scope": 2187,
									"src": "1501:131:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "1693:387:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2037,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1711:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1715:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1711:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1723:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1711:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468656d2f7468657920706c656173652073656e64206d65746973",
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																"typeString": "literal_string \"them/they please send metis\""
															},
															"value": "them/they please send metis"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																"typeString": "literal_string \"them/they please send metis\""
															}
														],
														"id": 2036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1703:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1703:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "1703:52:9"
											},
											{
												"assignments": [
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "buyAmount",
														"nameLocation": "1773:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 2091,
														"src": "1765:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1765:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2050,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2047,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1796:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1800:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1796:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2046,
														"name": "conversion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2175,
														"src": "1785:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1785:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1765:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2052,
																	"name": "buyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "1824:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2053,
																	"name": "SoldEFTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "1836:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1824:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2055,
																"name": "maxICO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "1847:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1824:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															},
															"value": "exceeds the total for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															}
														],
														"id": 2051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1816:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "1816:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2065,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1918:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2187",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2187",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1910:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1910:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1910:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1924:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1928:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1924:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2060,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "1894:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1899:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "1894:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1894:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "1894:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1959:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1963:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1959:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "1971:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2071,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "1945:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1950:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "1945:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "1945:36:9"
											},
											{
												"expression": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2079,
														"name": "SoldEFTT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "1991:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2080,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "2002:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2081,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "2014:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2002:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1991:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "1991:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2086,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "2042:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2085,
														"name": "Sold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "2037:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2037:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2088,
												"nodeType": "EmitStatement",
												"src": "2032:20:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2069:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2035,
												"id": 2090,
												"nodeType": "Return",
												"src": "2062:11:9"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2032,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2031,
												"name": "_timeCheck",
												"nameLocations": [
													"1669:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2006,
												"src": "1669:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1669:10:9"
										}
									],
									"name": "buy",
									"nameLocation": "1648:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:2:9"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1688:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1688:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1687:6:9"
									},
									"scope": 2187,
									"src": "1639:441:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "2150:368:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2100,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "2164:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2102,
														"indexExpression": {
															"hexValue": "32",
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2164:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2103,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2178:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2178:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2164:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2116,
																"name": "timeLocks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "2264:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2118,
															"indexExpression": {
																"hexValue": "31",
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2264:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2119,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2278:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2284:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2278:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2264:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2132,
																	"name": "timeLocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "2413:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2134,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2423:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2413:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2135,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2427:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2433:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2427:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2413:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2148,
														"nodeType": "IfStatement",
														"src": "2409:94:9",
														"trueBody": {
															"id": 2147,
															"nodeType": "Block",
															"src": "2443:60:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2144,
																				"name": "_amnt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2094,
																				"src": "2486:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2140,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "2465:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 2141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2469:6:9",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "2465:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2457:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 2138,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2457:8:9",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2457:19:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2477:8:9",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"src": "2457:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																				"typeString": "function (uint256)"
																			}
																		},
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2457:35:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2146,
																	"nodeType": "ExpressionStatement",
																	"src": "2457:35:9"
																}
															]
														}
													},
													"id": 2149,
													"nodeType": "IfStatement",
													"src": "2260:243:9",
													"trueBody": {
														"id": 2131,
														"nodeType": "Block",
														"src": "2294:109:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2128,
																			"name": "_amnt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "2386:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2124,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2365:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2369:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2365:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2357:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2122,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2357:8:9",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2357:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2377:8:9",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"src": "2357:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2357:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2130,
																"nodeType": "ExpressionStatement",
																"src": "2357:35:9"
															}
														]
													}
												},
												"id": 2150,
												"nodeType": "IfStatement",
												"src": "2160:343:9",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "2194:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2112,
																		"name": "_amnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "2237:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2108,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2216:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2220:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2216:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2208:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2106,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2208:8:9",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2208:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2228:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2208:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2208:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "2208:35:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2097,
													"name": "INVESTOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1891,
													"src": "2128:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2096,
												"name": "onlyRole",
												"nameLocations": [
													"2119:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2119:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2119:23:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "2095:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "2112:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2104:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:15:9"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:0:9"
									},
									"scope": 2187,
									"src": "2086:432:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "2581:17:9",
										"statements": []
									},
									"functionSelector": "4f248409",
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2154,
												"name": "_timeCheck",
												"nameLocations": [
													"2549:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2006,
												"src": "2549:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2549:10:9"
										},
										{
											"arguments": [
												{
													"id": 2157,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1896,
													"src": "2569:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2156,
												"name": "onlyRole",
												"nameLocations": [
													"2560:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2560:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2560:21:9"
										}
									],
									"name": "endICO",
									"nameLocation": "2533:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2539:2:9"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2581:0:9"
									},
									"scope": 2187,
									"src": "2524:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "2668:46:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2170,
																	"name": "ratioMetis",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "2695:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2168,
																	"name": "_amnt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2685:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2691:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1770,
																"src": "2685:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2685:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2172,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2684:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2167,
												"id": 2173,
												"nodeType": "Return",
												"src": "2678:29:9"
											}
										]
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "conversion",
									"nameLocation": "2613:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "2632:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2624:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:15:9"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2660:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:9:9"
									},
									"scope": 2187,
									"src": "2604:110:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2185,
										"nodeType": "Block",
										"src": "2772:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2182,
															"name": "maxICO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "2802:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2180,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "2789:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2798:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "2789:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2184,
												"nodeType": "Return",
												"src": "2782:27:9"
											}
										]
									},
									"id": 2186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "soldPercent",
									"nameLocation": "2729:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:2:9"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "2764:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:9:9"
									},
									"scope": 2187,
									"src": "2720:96:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2188,
							"src": "232:2586:9",
							"usedErrors": []
						}
					],
					"src": "32:2786:9"
				},
				"id": 9
			}
		}
	}
}
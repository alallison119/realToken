{
	"id": "34b33ae075cd9609ceb8f2a0eb8711b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ICO.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IEFTT.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ICO is AccessControl{\n    using SafeMath for uint256;\n    bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n    bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\");\n\n   // IUniswapV2Factory immutable uniswapV2Factory;\n   // IUniswapV2Router02 immutable uniswapV2Router;\n    address payable owner;\n    //address payable private devAddress;\n    //address constant burnAddres =0x000000000000000000000000000000000000dEaD;\n    address constant METISADDRESS = 0x9E32b13ce7f2E80A01932B42553652E053D6ed8e;\n    address[] minters_;\n    uint256 maxSupply_;\n    uint256 timeLock=18000000000;\n    IEFTT eftt;\n    uint256 maxICO = 100000 *10**18;\n    uint256 SoldInMetis;\n    uint256 SoldEFTT;\n    uint256 ratioMetis =1;\n    mapping(uint => uint) timeLocks;\n    bool private BURNED = false;\n    uint constant liquidityRatio = 7;\n    bool internal locked;\n    uint256 month =2592000;\n    uint256 week = 604800;\n    uint256 immutable creationtTime;\n    uint256 ICOtimeLock;\n\n\n    constructor(address _eftt, address _dev) payable {\n        //below might have to obfuscate with for loop\n        _grantRole(INVESTOR_ROLE, _dev);\n        _grantRole(BURNER_ROLE, _dev);\n        _grantRole(EXTEND_ICO_ROLE, _dev);\n        owner = payable(msg.sender);\n        eftt = IEFTT(_eftt);\n       \n        creationtTime = block.timestamp;\n        timeLocks[0] = 111;\n        timeLocks[1] = 222;\n        timeLocks[2] = 333;\n            }\n\n\n    event Log(string func);\n    event Sold(uint);\n    event Burned(uint);\n \n    modifier _timeCheck(){\n        require(block.timestamp < timeLock,\"ICO is over :( \");\n        _;\n    }\n\n    modifier _burnCheck(){\n        require(!BURNED,\"the supply is already burned\");\n        _;\n        BURNED = true;\n    }\n    modifier _onlyOwner(){\n        require(owner == msg.sender,\"You're not the owner\");\n        _;\n    }\n    \n    modifier _noReentry() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n    \n    receive() external payable {\n        //add in if just metis sent to contract\n        emit Log(\"fallback hit\");\n        buy();\n    }\n\n\n    function buy() public payable _timeCheck returns(bool){\n        require(msg.value > 0,\" please send metis\");\n        uint256 buyAmount = conversion(msg.value);\n\n        require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\");\n        eftt.approve( address(this), buyAmount);\n        eftt.transfer(msg.sender, buyAmount);\n        SoldEFTT = buyAmount + SoldEFTT;\n        SoldInMetis += msg.value;\n        emit Sold(buyAmount);\n        return true;\n    }\n\n    function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {\n        \n        if ( creationtTime + month * 18 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            eftt.approve( address(this), convertedAmnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        } else if ( creationtTime + month * 12 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        } else if ( creationtTime + month * 6 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        }\n        \n    }\n\n    function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{\n        uint256 burnAmnt = (maxICO.sub(SoldEFTT));\n        eftt.burn(burnAmnt);\n        emit Burned(burnAmnt);\n    }\n\n\n    function addLiquidity() private onlyRole(BURNER_ROLE){\n        //IERC20(WETH).approve(address(this),wethBalance);\n        //eftt.approve(address(this), amountADesired);\n        uint256 metisLiquidity = SoldInMetis - SoldInMetis.div(liquidityRatio);\n        uint256 efttLiquidity = metisLiquidity.div(ratioMetis);\n        IERC20(METISADDRESS).approve(address(this),metisLiquidity);\n        eftt.approve(address(this), efttLiquidity);\n        //below must also burn the liquidity tokens\n        //  (,,uint initialLiquidityTokens) = IUniswapV2Router02(IUniswapV2Router02_address).addLiquidity(\n        //     address(this),\n        //     WETH,\n        //     amountADesired,\n        //     10,\n        //     0, // slippage is unavoidable\n        //     0, // slippage is unavoidable\n        //     address(this),\n        //     block.timestamp + 360\n        // );\n\n    }\n\n    function createPool(address factory) internal view onlyRole(BURNER_ROLE) returns(address){\n        \n        address paris = pairFor(factory,address(eftt) ,METISADDRESS);\n        // if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {\n        //     IUniswapV2Factory(factory).createPair(tokenA, tokenB);\n        // }\n        return paris;\n    }\n\n\n//may not need to include the functions below\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\n        require(tokenA != tokenB, 'UniswapV2Library: IDENTICAL_ADDRESSES');\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'UniswapV2Library: ZERO_ADDRESS');\n    }\n\n    function pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair) {\n        (address token0, address token1) = sortTokens(tokenA, tokenB);\n        pair = address(uint160(uint256(keccak256(abi.encodePacked(\n                hex'ff',\n                factory,\n                keccak256(abi.encodePacked(token0, token1)),\n                hex'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f' // init code hash\n            )))));\n    }\n\n    function conversion(uint256 _amnt) private view returns(uint256){\n        return(_amnt.mul(ratioMetis));\n    }\n\n    function percentFromICO(uint256 _amnt) private view returns(uint256){\n        return _amnt.mul(soldPercent());\n    }\n\n    function soldPercent() private view returns(uint256){\n        return SoldEFTT.div(maxICO);\n    }\n    function burned() public view returns(bool){\n        return BURNED;\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/IEFTT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IEFTT {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    function burn(uint256 amount) external;\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5ba913971094657f08bc31e8c2244a193c5117b40a13f76f4da0f1be7fae8ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3992c068dfc7286dddffb6865e004b834b92fc4ff604c70459684479c1394ec\",\"dweb:/ipfs/QmV673kQefsXYk1BLmcWSf4WWBtSiYymzpYsBubrB5xY6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 102,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)97_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)97_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)97_storage"
							},
							"t_struct(RoleData)97_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 94,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 96,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ICO.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eftt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dev",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "func",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Sold",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EXTEND_ICO_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INVESTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burned",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amnt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ICO.sol\":264:6395  contract ICO is AccessControl{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ICO.sol\":945:956  18000000000 */\n  0x0430e23400\n    /* \"contracts/ICO.sol\":928:956  uint256 timeLock=18000000000 */\n  0x04\n  sstore\n    /* \"contracts/ICO.sol\":995:1009  100000 *10**18 */\n  0x152d02c7e14af6800000\n    /* \"contracts/ICO.sol\":978:1009  uint256 maxICO = 100000 *10**18 */\n  0x06\n  sstore\n    /* \"contracts/ICO.sol\":1082:1083  1 */\n  0x01\n    /* \"contracts/ICO.sol\":1062:1083  uint256 ratioMetis =1 */\n  0x09\n  sstore\n    /* \"contracts/ICO.sol\":1148:1153  false */\n  0x00\n    /* \"contracts/ICO.sol\":1126:1153  bool private BURNED = false */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1238:1245  2592000 */\n  0x278d00\n    /* \"contracts/ICO.sol\":1223:1245  uint256 month =2592000 */\n  0x0c\n  sstore\n    /* \"contracts/ICO.sol\":1266:1272  604800 */\n  0x093a80\n    /* \"contracts/ICO.sol\":1251:1272  uint256 week = 604800 */\n  0x0d\n  sstore\n    /* \"contracts/ICO.sol\":1342:1782  constructor(address _eftt, address _dev) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/ICO.sol\":1455:1486  _grantRole(INVESTOR_ROLE, _dev) */\n  tag_5\n    /* \"contracts/ICO.sol\":371:397  keccak256(\"INVESTOR_ROLE\") */\n  0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n    /* \"contracts/ICO.sol\":1481:1485  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1455:1465  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1455:1486  _grantRole(INVESTOR_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/ICO.sol\":1496:1525  _grantRole(BURNER_ROLE, _dev) */\n  tag_7\n    /* \"contracts/ICO.sol\":441:465  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"contracts/ICO.sol\":1520:1524  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1496:1506  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1496:1525  _grantRole(BURNER_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/ICO.sol\":1535:1568  _grantRole(EXTEND_ICO_ROLE, _dev) */\n  tag_8\n    /* \"contracts/ICO.sol\":513:541  keccak256(\"EXTEND_ICO_ROLE\") */\n  0x305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289\n    /* \"contracts/ICO.sol\":1563:1567  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1535:1545  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1535:1568  _grantRole(EXTEND_ICO_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/ICO.sol\":1594:1604  msg.sender */\n  caller\n    /* \"contracts/ICO.sol\":1578:1583  owner */\n  0x01\n  0x00\n    /* \"contracts/ICO.sol\":1578:1605  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1628:1633  _eftt */\n  dup2\n    /* \"contracts/ICO.sol\":1615:1619  eftt */\n  0x05\n  0x00\n    /* \"contracts/ICO.sol\":1615:1634  eftt = IEFTT(_eftt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1668:1683  block.timestamp */\n  timestamp\n    /* \"contracts/ICO.sol\":1652:1683  creationtTime = block.timestamp */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ICO.sol\":1708:1711  111 */\n  0x6f\n    /* \"contracts/ICO.sol\":1693:1702  timeLocks */\n  0x0a\n    /* \"contracts/ICO.sol\":1693:1705  timeLocks[0] */\n  0x00\n    /* \"contracts/ICO.sol\":1703:1704  0 */\n  dup1\n    /* \"contracts/ICO.sol\":1693:1705  timeLocks[0] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1693:1711  timeLocks[0] = 111 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1736:1739  222 */\n  0xde\n    /* \"contracts/ICO.sol\":1721:1730  timeLocks */\n  0x0a\n    /* \"contracts/ICO.sol\":1721:1733  timeLocks[1] */\n  0x00\n    /* \"contracts/ICO.sol\":1731:1732  1 */\n  0x01\n    /* \"contracts/ICO.sol\":1721:1733  timeLocks[1] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1721:1739  timeLocks[1] = 222 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1764:1767  333 */\n  0x014d\n    /* \"contracts/ICO.sol\":1749:1758  timeLocks */\n  0x0a\n    /* \"contracts/ICO.sol\":1749:1761  timeLocks[2] */\n  0x00\n    /* \"contracts/ICO.sol\":1759:1760  2 */\n  0x02\n    /* \"contracts/ICO.sol\":1749:1761  timeLocks[2] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1749:1767  timeLocks[2] = 333 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1342:1782  constructor(address _eftt, address _dev) payable {... */\n  pop\n  pop\n    /* \"contracts/ICO.sol\":264:6395  contract ICO is AccessControl{... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_2:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ICO.sol\":264:6395  contract ICO is AccessControl{... */\ntag_9:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9dbe85ac7b254680bdffe11fd8ce3b07ca073a131ee68edcdd4d9f627ae11f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ICO.sol\":264:6395  contract ICO is AccessControl{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73f42561\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb1ac51f8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x73f42561\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x76082a5e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f248409\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/ICO.sol\":2438:2457  Log(\"fallback hit\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":2467:2472  buy() */\n      tag_24\n        /* \"contracts/ICO.sol\":2467:2470  buy */\n      tag_25\n        /* \"contracts/ICO.sol\":2467:2472  buy() */\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/ICO.sol\":264:6395  contract ICO is AccessControl{... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":403:465  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":2957:3651  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ICO.sol\":3657:3843  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/ICO.sol\":6320:6393  function burned() public view returns(bool){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":331:397  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":2486:2951  function buy() public payable _timeCheck returns(bool){... */\n    tag_14:\n      tag_78\n      tag_25\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":471:541  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/ICO.sol\":2486:2951  function buy() public payable _timeCheck returns(bool){... */\n    tag_25:\n        /* \"contracts/ICO.sol\":2535:2539  bool */\n      0x00\n        /* \"contracts/ICO.sol\":1922:1930  timeLock */\n      sload(0x04)\n        /* \"contracts/ICO.sol\":1904:1919  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1904:1930  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1896:1949  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/ICO.sol\":2570:2571  0 */\n      0x00\n        /* \"contracts/ICO.sol\":2558:2567  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":2558:2571  msg.value > 0 */\n      gt\n        /* \"contracts/ICO.sol\":2550:2593  require(msg.value > 0,\" please send metis\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/ICO.sol\":2603:2620  uint256 buyAmount */\n      0x00\n        /* \"contracts/ICO.sol\":2623:2644  conversion(msg.value) */\n      tag_96\n        /* \"contracts/ICO.sol\":2634:2643  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":2623:2633  conversion */\n      tag_97\n        /* \"contracts/ICO.sol\":2623:2644  conversion(msg.value) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ICO.sol\":2603:2644  uint256 buyAmount = conversion(msg.value) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":2686:2692  maxICO */\n      sload(0x06)\n        /* \"contracts/ICO.sol\":2675:2683  SoldEFTT */\n      sload(0x08)\n        /* \"contracts/ICO.sol\":2663:2672  buyAmount */\n      dup3\n        /* \"contracts/ICO.sol\":2663:2683  buyAmount + SoldEFTT */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/ICO.sol\":2663:2692  buyAmount + SoldEFTT < maxICO */\n      lt\n        /* \"contracts/ICO.sol\":2655:2723  require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/ICO.sol\":2733:2737  eftt */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2733:2745  eftt.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/ICO.sol\":2755:2759  this */\n      address\n        /* \"contracts/ICO.sol\":2762:2771  buyAmount */\n      dup4\n        /* \"contracts/ICO.sol\":2733:2772  eftt.approve( address(this), buyAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts/ICO.sol\":2782:2786  eftt */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2782:2795  eftt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ICO.sol\":2796:2806  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2808:2817  buyAmount */\n      dup4\n        /* \"contracts/ICO.sol\":2782:2818  eftt.transfer(msg.sender, buyAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/ICO.sol\":2851:2859  SoldEFTT */\n      sload(0x08)\n        /* \"contracts/ICO.sol\":2839:2848  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2839:2859  buyAmount + SoldEFTT */\n      tag_113\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_113:\n        /* \"contracts/ICO.sol\":2828:2836  SoldEFTT */\n      0x08\n        /* \"contracts/ICO.sol\":2828:2859  SoldEFTT = buyAmount + SoldEFTT */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":2884:2893  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":2869:2880  SoldInMetis */\n      0x07\n      0x00\n        /* \"contracts/ICO.sol\":2869:2893  SoldInMetis += msg.value */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":2908:2923  Sold(buyAmount) */\n      0x92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727\n        /* \"contracts/ICO.sol\":2913:2922  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2908:2923  Sold(buyAmount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":2940:2944  true */\n      0x01\n        /* \"contracts/ICO.sol\":2933:2944  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ICO.sol\":2486:2951  function buy() public payable _timeCheck returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":403:465  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_42:\n        /* \"contracts/ICO.sol\":441:465  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/ICO.sol\":403:465  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ICO.sol\":2957:3651  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_48:\n        /* \"contracts/ICO.sol\":371:397  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ICO.sol\":3074:3089  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":3069:3071  18 */\n      0x12\n        /* \"contracts/ICO.sol\":3061:3066  month */\n      sload(0x0c)\n        /* \"contracts/ICO.sol\":3061:3071  month * 18 */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/ICO.sol\":3045:3058  creationtTime */\n      immutable(\"0x9dbe85ac7b254680bdffe11fd8ce3b07ca073a131ee68edcdd4d9f627ae11f\")\n        /* \"contracts/ICO.sol\":3045:3071  creationtTime + month * 18 */\n      tag_128\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_128:\n        /* \"contracts/ICO.sol\":3045:3089  creationtTime + month * 18 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":3040:3636  if ( creationtTime + month * 18 > block.timestamp){... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/ICO.sol\":3104:3125  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3127:3148  percentFromICO(_amnt) */\n      tag_130\n        /* \"contracts/ICO.sol\":3142:3147  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3127:3141  percentFromICO */\n      tag_131\n        /* \"contracts/ICO.sol\":3127:3148  percentFromICO(_amnt) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/ICO.sol\":3104:3148  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3162:3166  eftt */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3162:3174  eftt.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/ICO.sol\":3184:3188  this */\n      address\n        /* \"contracts/ICO.sol\":3191:3204  convertedAmnt */\n      dup4\n        /* \"contracts/ICO.sol\":3162:3205  eftt.approve( address(this), convertedAmnt) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_135:\n      pop\n        /* \"contracts/ICO.sol\":3227:3237  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":3219:3247  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3219:3262  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3248:3261  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3219:3262  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n        /* \"contracts/ICO.sol\":3090:3273  {... */\n      pop\n        /* \"contracts/ICO.sol\":3040:3636  if ( creationtTime + month * 18 > block.timestamp){... */\n      jump(tag_138)\n    tag_129:\n        /* \"contracts/ICO.sol\":3313:3328  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":3308:3310  12 */\n      0x0c\n        /* \"contracts/ICO.sol\":3300:3305  month */\n      dup1\n      sload\n        /* \"contracts/ICO.sol\":3300:3310  month * 12 */\n      tag_139\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_139:\n        /* \"contracts/ICO.sol\":3284:3297  creationtTime */\n      immutable(\"0x9dbe85ac7b254680bdffe11fd8ce3b07ca073a131ee68edcdd4d9f627ae11f\")\n        /* \"contracts/ICO.sol\":3284:3310  creationtTime + month * 12 */\n      tag_140\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"contracts/ICO.sol\":3284:3328  creationtTime + month * 12 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":3279:3636  if ( creationtTime + month * 12 > block.timestamp){... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/ICO.sol\":3343:3364  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3366:3387  percentFromICO(_amnt) */\n      tag_142\n        /* \"contracts/ICO.sol\":3381:3386  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3366:3380  percentFromICO */\n      tag_131\n        /* \"contracts/ICO.sol\":3366:3387  percentFromICO(_amnt) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ICO.sol\":3343:3387  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3409:3419  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":3401:3429  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3401:3444  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3430:3443  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3401:3444  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n        /* \"contracts/ICO.sol\":3329:3455  {... */\n      pop\n        /* \"contracts/ICO.sol\":3279:3636  if ( creationtTime + month * 12 > block.timestamp){... */\n      jump(tag_145)\n    tag_141:\n        /* \"contracts/ICO.sol\":3494:3509  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":3490:3491  6 */\n      0x06\n        /* \"contracts/ICO.sol\":3482:3487  month */\n      sload(0x0c)\n        /* \"contracts/ICO.sol\":3482:3491  month * 6 */\n      tag_146\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_146:\n        /* \"contracts/ICO.sol\":3466:3479  creationtTime */\n      immutable(\"0x9dbe85ac7b254680bdffe11fd8ce3b07ca073a131ee68edcdd4d9f627ae11f\")\n        /* \"contracts/ICO.sol\":3466:3491  creationtTime + month * 6 */\n      tag_147\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_147:\n        /* \"contracts/ICO.sol\":3466:3509  creationtTime + month * 6 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":3461:3636  if ( creationtTime + month * 6 > block.timestamp){... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/ICO.sol\":3524:3545  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3547:3568  percentFromICO(_amnt) */\n      tag_149\n        /* \"contracts/ICO.sol\":3562:3567  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3547:3561  percentFromICO */\n      tag_131\n        /* \"contracts/ICO.sol\":3547:3568  percentFromICO(_amnt) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/ICO.sol\":3524:3568  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3590:3600  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":3582:3610  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3582:3625  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3611:3624  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3582:3625  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n        /* \"contracts/ICO.sol\":3510:3636  {... */\n      pop\n        /* \"contracts/ICO.sol\":3461:3636  if ( creationtTime + month * 6 > block.timestamp){... */\n    tag_148:\n        /* \"contracts/ICO.sol\":3279:3636  if ( creationtTime + month * 12 > block.timestamp){... */\n    tag_145:\n        /* \"contracts/ICO.sol\":3040:3636  if ( creationtTime + month * 18 > block.timestamp){... */\n    tag_138:\n        /* \"contracts/ICO.sol\":2957:3651  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":3657:3843  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n    tag_60:\n        /* \"contracts/ICO.sol\":1922:1930  timeLock */\n      sload(0x04)\n        /* \"contracts/ICO.sol\":1904:1919  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1904:1930  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1896:1949  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_91\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/ICO.sol\":441:465  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ICO.sol\":2013:2019  BURNED */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ICO.sol\":2012:2019  !BURNED */\n      iszero\n        /* \"contracts/ICO.sol\":2004:2051  require(!BURNED,\"the supply is already burned\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/ICO.sol\":3735:3751  uint256 burnAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3755:3775  maxICO.sub(SoldEFTT) */\n      tag_176\n        /* \"contracts/ICO.sol\":3766:3774  SoldEFTT */\n      sload(0x08)\n        /* \"contracts/ICO.sol\":3755:3761  maxICO */\n      sload(0x06)\n        /* \"contracts/ICO.sol\":3755:3765  maxICO.sub */\n      tag_177\n      swap1\n        /* \"contracts/ICO.sol\":3755:3775  maxICO.sub(SoldEFTT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/ICO.sol\":3735:3776  uint256 burnAmnt = (maxICO.sub(SoldEFTT)) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3786:3790  eftt */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3786:3795  eftt.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/ICO.sol\":3796:3804  burnAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3786:3805  eftt.burn(burnAmnt) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_178:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ICO.sol\":3820:3836  Burned(burnAmnt) */\n      0xd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e\n        /* \"contracts/ICO.sol\":3827:3835  burnAmnt */\n      dup2\n        /* \"contracts/ICO.sol\":3820:3836  Burned(burnAmnt) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":3725:3843  {... */\n      pop\n        /* \"contracts/ICO.sol\":2081:2085  true */\n      0x01\n        /* \"contracts/ICO.sol\":2072:2078  BURNED */\n      0x0b\n      0x00\n        /* \"contracts/ICO.sol\":2072:2085  BURNED = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":1959:1960  _ */\n      pop\n        /* \"contracts/ICO.sol\":3657:3843  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n      jump\t// out\n        /* \"contracts/ICO.sol\":6320:6393  function burned() public view returns(bool){... */\n    tag_63:\n        /* \"contracts/ICO.sol\":6358:6362  bool */\n      0x00\n        /* \"contracts/ICO.sol\":6380:6386  BURNED */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ICO.sol\":6373:6386  return BURNED */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":6320:6393  function burned() public view returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ICO.sol\":331:397  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_67:\n        /* \"contracts/ICO.sol\":371:397  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"contracts/ICO.sol\":331:397  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/ICO.sol\":471:541  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n    tag_82:\n        /* \"contracts/ICO.sol\":513:541  keccak256(\"EXTEND_ICO_ROLE\") */\n      0x305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289\n        /* \"contracts/ICO.sol\":471:541  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":5981:6091  function conversion(uint256 _amnt) private view returns(uint256){... */\n    tag_97:\n        /* \"contracts/ICO.sol\":6037:6044  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":6062:6083  _amnt.mul(ratioMetis) */\n      tag_191\n        /* \"contracts/ICO.sol\":6072:6082  ratioMetis */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":6062:6067  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":6062:6071  _amnt.mul */\n      tag_192\n      swap1\n        /* \"contracts/ICO.sol\":6062:6083  _amnt.mul(ratioMetis) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/ICO.sol\":6055:6084  return(_amnt.mul(ratioMetis)) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":5981:6091  function conversion(uint256 _amnt) private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":6097:6213  function percentFromICO(uint256 _amnt) private view returns(uint256){... */\n    tag_131:\n        /* \"contracts/ICO.sol\":6157:6164  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":6182:6206  _amnt.mul(soldPercent()) */\n      tag_199\n        /* \"contracts/ICO.sol\":6192:6205  soldPercent() */\n      tag_200\n        /* \"contracts/ICO.sol\":6192:6203  soldPercent */\n      tag_201\n        /* \"contracts/ICO.sol\":6192:6205  soldPercent() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ICO.sol\":6182:6187  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":6182:6191  _amnt.mul */\n      tag_192\n      swap1\n        /* \"contracts/ICO.sol\":6182:6206  _amnt.mul(soldPercent()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/ICO.sol\":6175:6206  return _amnt.mul(soldPercent()) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":6097:6213  function percentFromICO(uint256 _amnt) private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_215\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_223\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":6219:6315  function soldPercent() private view returns(uint256){... */\n    tag_201:\n        /* \"contracts/ICO.sol\":6263:6270  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":6288:6308  SoldEFTT.div(maxICO) */\n      tag_228\n        /* \"contracts/ICO.sol\":6301:6307  maxICO */\n      sload(0x06)\n        /* \"contracts/ICO.sol\":6288:6296  SoldEFTT */\n      sload(0x08)\n        /* \"contracts/ICO.sol\":6288:6300  SoldEFTT.div */\n      tag_229\n      swap1\n        /* \"contracts/ICO.sol\":6288:6308  SoldEFTT.div(maxICO) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/ICO.sol\":6281:6308  return SoldEFTT.div(maxICO) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":6219:6315  function soldPercent() private view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_231\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_233\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_234\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n    tag_235:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_238\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_238:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n    tag_239:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_243\n      tag_241\n      jump\t// in\n    tag_243:\n    tag_242:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_247\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_248\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_241\n      jump\t// in\n    tag_250:\n    tag_249:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_241\n      jump\t// in\n    tag_252:\n    tag_251:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_261:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:344   */\n    tag_262:\n        /* \"#utility.yul\":322:336   */\n      0x66616c6c6261636b206869740000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:337   */\n      mstore\n        /* \"#utility.yul\":182:344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":350:716   */\n    tag_263:\n        /* \"#utility.yul\":492:495   */\n      0x00\n        /* \"#utility.yul\":513:580   */\n      tag_315\n        /* \"#utility.yul\":577:579   */\n      0x0c\n        /* \"#utility.yul\":572:575   */\n      dup4\n        /* \"#utility.yul\":513:580   */\n      tag_261\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":506:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":589:682   */\n      tag_316\n        /* \"#utility.yul\":678:681   */\n      dup3\n        /* \"#utility.yul\":589:682   */\n      tag_262\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":702:705   */\n      dup3\n        /* \"#utility.yul\":698:710   */\n      add\n        /* \"#utility.yul\":691:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":350:716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:1141   */\n    tag_23:\n        /* \"#utility.yul\":888:892   */\n      0x00\n        /* \"#utility.yul\":926:928   */\n      0x20\n        /* \"#utility.yul\":915:924   */\n      dup3\n        /* \"#utility.yul\":911:929   */\n      add\n        /* \"#utility.yul\":903:929   */\n      swap1\n      pop\n        /* \"#utility.yul\":975:984   */\n      dup2\n        /* \"#utility.yul\":969:973   */\n      dup2\n        /* \"#utility.yul\":965:985   */\n      sub\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":950:959   */\n      dup4\n        /* \"#utility.yul\":946:963   */\n      add\n        /* \"#utility.yul\":939:986   */\n      mstore\n        /* \"#utility.yul\":1003:1134   */\n      tag_318\n        /* \"#utility.yul\":1129:1133   */\n      dup2\n        /* \"#utility.yul\":1003:1134   */\n      tag_263\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":995:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":722:1141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1345   */\n    tag_265:\n        /* \"#utility.yul\":1337:1338   */\n      0x00\n        /* \"#utility.yul\":1334:1335   */\n      dup1\n        /* \"#utility.yul\":1327:1339   */\n      revert\n        /* \"#utility.yul\":1474:1623   */\n    tag_267:\n        /* \"#utility.yul\":1510:1517   */\n      0x00\n        /* \"#utility.yul\":1550:1616   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1543:1548   */\n      dup3\n        /* \"#utility.yul\":1539:1617   */\n      and\n        /* \"#utility.yul\":1528:1617   */\n      swap1\n      pop\n        /* \"#utility.yul\":1474:1623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1749   */\n    tag_268:\n        /* \"#utility.yul\":1701:1724   */\n      tag_324\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1701:1724   */\n      tag_267\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1725   */\n      eq\n        /* \"#utility.yul\":1681:1743   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1739:1740   */\n      0x00\n        /* \"#utility.yul\":1736:1737   */\n      dup1\n        /* \"#utility.yul\":1729:1741   */\n      revert\n        /* \"#utility.yul\":1681:1743   */\n    tag_325:\n        /* \"#utility.yul\":1629:1749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:1892   */\n    tag_269:\n        /* \"#utility.yul\":1800:1805   */\n      0x00\n        /* \"#utility.yul\":1838:1844   */\n      dup2\n        /* \"#utility.yul\":1825:1845   */\n      calldataload\n        /* \"#utility.yul\":1816:1845   */\n      swap1\n      pop\n        /* \"#utility.yul\":1854:1886   */\n      tag_327\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1854:1886   */\n      tag_268\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1755:1892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1898:2225   */\n    tag_29:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":1993:2002   */\n      dup3\n        /* \"#utility.yul\":1984:1991   */\n      dup5\n        /* \"#utility.yul\":1980:2003   */\n      sub\n        /* \"#utility.yul\":1976:2008   */\n      slt\n        /* \"#utility.yul\":1973:2092   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2011:2090   */\n      tag_330\n      tag_265\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1973:2092   */\n    tag_329:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2156:2208   */\n      tag_331\n        /* \"#utility.yul\":2200:2207   */\n      dup5\n        /* \"#utility.yul\":2191:2197   */\n      dup3\n        /* \"#utility.yul\":2180:2189   */\n      dup6\n        /* \"#utility.yul\":2176:2198   */\n      add\n        /* \"#utility.yul\":2156:2208   */\n      tag_269\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2146:2208   */\n      swap2\n      pop\n        /* \"#utility.yul\":2102:2218   */\n      pop\n        /* \"#utility.yul\":1898:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2321   */\n    tag_270:\n        /* \"#utility.yul\":2265:2272   */\n      0x00\n        /* \"#utility.yul\":2308:2313   */\n      dup2\n        /* \"#utility.yul\":2301:2314   */\n      iszero\n        /* \"#utility.yul\":2294:2315   */\n      iszero\n        /* \"#utility.yul\":2283:2315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2436   */\n    tag_271:\n        /* \"#utility.yul\":2408:2429   */\n      tag_334\n        /* \"#utility.yul\":2423:2428   */\n      dup2\n        /* \"#utility.yul\":2408:2429   */\n      tag_270\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2403:2406   */\n      dup3\n        /* \"#utility.yul\":2396:2430   */\n      mstore\n        /* \"#utility.yul\":2327:2436   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2652   */\n    tag_32:\n        /* \"#utility.yul\":2529:2533   */\n      0x00\n        /* \"#utility.yul\":2567:2569   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup3\n        /* \"#utility.yul\":2552:2570   */\n      add\n        /* \"#utility.yul\":2544:2570   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2645   */\n      tag_336\n        /* \"#utility.yul\":2642:2643   */\n      0x00\n        /* \"#utility.yul\":2631:2640   */\n      dup4\n        /* \"#utility.yul\":2627:2644   */\n      add\n        /* \"#utility.yul\":2618:2624   */\n      dup5\n        /* \"#utility.yul\":2580:2645   */\n      tag_271\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2442:2652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:2735   */\n    tag_272:\n        /* \"#utility.yul\":2695:2702   */\n      0x00\n        /* \"#utility.yul\":2724:2729   */\n      dup2\n        /* \"#utility.yul\":2713:2729   */\n      swap1\n      pop\n        /* \"#utility.yul\":2658:2735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2863   */\n    tag_273:\n        /* \"#utility.yul\":2814:2838   */\n      tag_339\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2814:2838   */\n      tag_272\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2804:2839   */\n      eq\n        /* \"#utility.yul\":2794:2857   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      dup1\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2794:2857   */\n    tag_340:\n        /* \"#utility.yul\":2741:2863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3008   */\n    tag_274:\n        /* \"#utility.yul\":2915:2920   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      dup2\n        /* \"#utility.yul\":2940:2960   */\n      calldataload\n        /* \"#utility.yul\":2931:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3002   */\n      tag_342\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2969:3002   */\n      tag_273\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2869:3008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3014:3343   */\n    tag_36:\n        /* \"#utility.yul\":3073:3079   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3110:3119   */\n      dup3\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3097:3120   */\n      sub\n        /* \"#utility.yul\":3093:3125   */\n      slt\n        /* \"#utility.yul\":3090:3209   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":3128:3207   */\n      tag_345\n      tag_265\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3090:3209   */\n    tag_344:\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3273:3326   */\n      tag_346\n        /* \"#utility.yul\":3318:3325   */\n      dup5\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3298:3307   */\n      dup6\n        /* \"#utility.yul\":3294:3316   */\n      add\n        /* \"#utility.yul\":3273:3326   */\n      tag_274\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3263:3326   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3336   */\n      pop\n        /* \"#utility.yul\":3014:3343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3467   */\n    tag_275:\n        /* \"#utility.yul\":3436:3460   */\n      tag_348\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3436:3460   */\n      tag_272\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3461   */\n      mstore\n        /* \"#utility.yul\":3349:3467   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3695   */\n    tag_39:\n        /* \"#utility.yul\":3566:3570   */\n      0x00\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3593:3602   */\n      dup3\n        /* \"#utility.yul\":3589:3607   */\n      add\n        /* \"#utility.yul\":3581:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3617:3688   */\n      tag_350\n        /* \"#utility.yul\":3685:3686   */\n      0x00\n        /* \"#utility.yul\":3674:3683   */\n      dup4\n        /* \"#utility.yul\":3670:3687   */\n      add\n        /* \"#utility.yul\":3661:3667   */\n      dup5\n        /* \"#utility.yul\":3617:3688   */\n      tag_275\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3473:3695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3701:3778   */\n    tag_276:\n        /* \"#utility.yul\":3738:3745   */\n      0x00\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3756:3772   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3784:3906   */\n    tag_277:\n        /* \"#utility.yul\":3857:3881   */\n      tag_353\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3857:3881   */\n      tag_276\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3850:3855   */\n      dup2\n        /* \"#utility.yul\":3847:3882   */\n      eq\n        /* \"#utility.yul\":3837:3900   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3893:3894   */\n      dup1\n        /* \"#utility.yul\":3886:3898   */\n      revert\n        /* \"#utility.yul\":3837:3900   */\n    tag_354:\n        /* \"#utility.yul\":3784:3906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4051   */\n    tag_278:\n        /* \"#utility.yul\":3958:3963   */\n      0x00\n        /* \"#utility.yul\":3996:4002   */\n      dup2\n        /* \"#utility.yul\":3983:4003   */\n      calldataload\n        /* \"#utility.yul\":3974:4003   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4045   */\n      tag_356\n        /* \"#utility.yul\":4039:4044   */\n      dup2\n        /* \"#utility.yul\":4012:4045   */\n      tag_277\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3912:4051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4057:4386   */\n    tag_47:\n        /* \"#utility.yul\":4116:4122   */\n      0x00\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4153:4162   */\n      dup3\n        /* \"#utility.yul\":4144:4151   */\n      dup5\n        /* \"#utility.yul\":4140:4163   */\n      sub\n        /* \"#utility.yul\":4136:4168   */\n      slt\n        /* \"#utility.yul\":4133:4252   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4171:4250   */\n      tag_359\n      tag_265\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4133:4252   */\n    tag_358:\n        /* \"#utility.yul\":4291:4292   */\n      0x00\n        /* \"#utility.yul\":4316:4369   */\n      tag_360\n        /* \"#utility.yul\":4361:4368   */\n      dup5\n        /* \"#utility.yul\":4352:4358   */\n      dup3\n        /* \"#utility.yul\":4341:4350   */\n      dup6\n        /* \"#utility.yul\":4337:4359   */\n      add\n        /* \"#utility.yul\":4316:4369   */\n      tag_278\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4306:4369   */\n      swap2\n      pop\n        /* \"#utility.yul\":4262:4379   */\n      pop\n        /* \"#utility.yul\":4057:4386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4392:4518   */\n    tag_279:\n        /* \"#utility.yul\":4429:4436   */\n      0x00\n        /* \"#utility.yul\":4469:4511   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4462:4467   */\n      dup3\n        /* \"#utility.yul\":4458:4512   */\n      and\n        /* \"#utility.yul\":4447:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4392:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4620   */\n    tag_280:\n        /* \"#utility.yul\":4561:4568   */\n      0x00\n        /* \"#utility.yul\":4590:4614   */\n      tag_363\n        /* \"#utility.yul\":4608:4613   */\n      dup3\n        /* \"#utility.yul\":4590:4614   */\n      tag_279\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4579:4614   */\n      swap1\n      pop\n        /* \"#utility.yul\":4524:4620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:4748   */\n    tag_281:\n        /* \"#utility.yul\":4699:4723   */\n      tag_365\n        /* \"#utility.yul\":4717:4722   */\n      dup2\n        /* \"#utility.yul\":4699:4723   */\n      tag_280\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4692:4697   */\n      dup2\n        /* \"#utility.yul\":4689:4724   */\n      eq\n        /* \"#utility.yul\":4679:4742   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4738:4739   */\n      0x00\n        /* \"#utility.yul\":4735:4736   */\n      dup1\n        /* \"#utility.yul\":4728:4740   */\n      revert\n        /* \"#utility.yul\":4679:4742   */\n    tag_366:\n        /* \"#utility.yul\":4626:4748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4754:4893   */\n    tag_282:\n        /* \"#utility.yul\":4800:4805   */\n      0x00\n        /* \"#utility.yul\":4838:4844   */\n      dup2\n        /* \"#utility.yul\":4825:4845   */\n      calldataload\n        /* \"#utility.yul\":4816:4845   */\n      swap1\n      pop\n        /* \"#utility.yul\":4854:4887   */\n      tag_368\n        /* \"#utility.yul\":4881:4886   */\n      dup2\n        /* \"#utility.yul\":4854:4887   */\n      tag_281\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4754:4893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4899:5373   */\n    tag_52:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":5024:5026   */\n      0x40\n        /* \"#utility.yul\":5012:5021   */\n      dup4\n        /* \"#utility.yul\":5003:5010   */\n      dup6\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5027   */\n      slt\n        /* \"#utility.yul\":4992:5111   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5030:5109   */\n      tag_371\n      tag_265\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4992:5111   */\n    tag_370:\n        /* \"#utility.yul\":5150:5151   */\n      0x00\n        /* \"#utility.yul\":5175:5228   */\n      tag_372\n        /* \"#utility.yul\":5220:5227   */\n      dup6\n        /* \"#utility.yul\":5211:5217   */\n      dup3\n        /* \"#utility.yul\":5200:5209   */\n      dup7\n        /* \"#utility.yul\":5196:5218   */\n      add\n        /* \"#utility.yul\":5175:5228   */\n      tag_274\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5165:5228   */\n      swap3\n      pop\n        /* \"#utility.yul\":5121:5238   */\n      pop\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5303:5356   */\n      tag_373\n        /* \"#utility.yul\":5348:5355   */\n      dup6\n        /* \"#utility.yul\":5339:5345   */\n      dup3\n        /* \"#utility.yul\":5328:5337   */\n      dup7\n        /* \"#utility.yul\":5324:5346   */\n      add\n        /* \"#utility.yul\":5303:5356   */\n      tag_282\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5293:5356   */\n      swap2\n      pop\n        /* \"#utility.yul\":5248:5366   */\n      pop\n        /* \"#utility.yul\":4899:5373   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5379:5548   */\n    tag_283:\n        /* \"#utility.yul\":5519:5536   */\n      0x49434f206973206f766572203a28200000000000000000000000000000000000\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5507:5513   */\n      dup3\n        /* \"#utility.yul\":5503:5517   */\n      add\n        /* \"#utility.yul\":5496:5537   */\n      mstore\n        /* \"#utility.yul\":5379:5548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5940   */\n    tag_284:\n        /* \"#utility.yul\":5700:5703   */\n      0x00\n        /* \"#utility.yul\":5725:5792   */\n      tag_376\n        /* \"#utility.yul\":5789:5791   */\n      0x0f\n        /* \"#utility.yul\":5784:5787   */\n      dup4\n        /* \"#utility.yul\":5725:5792   */\n      tag_261\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5718:5792   */\n      swap2\n      pop\n        /* \"#utility.yul\":5805:5898   */\n      tag_377\n        /* \"#utility.yul\":5894:5897   */\n      dup3\n        /* \"#utility.yul\":5805:5898   */\n      tag_283\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5927:5929   */\n      0x20\n        /* \"#utility.yul\":5922:5925   */\n      dup3\n        /* \"#utility.yul\":5918:5930   */\n      add\n        /* \"#utility.yul\":5911:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5558:5940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5950:6385   */\n    tag_91:\n        /* \"#utility.yul\":6116:6120   */\n      0x00\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6147:6156   */\n      dup3\n        /* \"#utility.yul\":6143:6161   */\n      add\n        /* \"#utility.yul\":6135:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6211:6220   */\n      dup2\n        /* \"#utility.yul\":6205:6209   */\n      dup2\n        /* \"#utility.yul\":6201:6221   */\n      sub\n        /* \"#utility.yul\":6197:6198   */\n      0x00\n        /* \"#utility.yul\":6186:6195   */\n      dup4\n        /* \"#utility.yul\":6182:6199   */\n      add\n        /* \"#utility.yul\":6175:6222   */\n      mstore\n        /* \"#utility.yul\":6243:6374   */\n      tag_379\n        /* \"#utility.yul\":6369:6373   */\n      dup2\n        /* \"#utility.yul\":6243:6374   */\n      tag_284\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6235:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":5950:6385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6571   */\n    tag_285:\n        /* \"#utility.yul\":6539:6559   */\n      0x20706c656173652073656e64206d657469730000000000000000000000000000\n        /* \"#utility.yul\":6535:6536   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6523:6537   */\n      add\n        /* \"#utility.yul\":6516:6560   */\n      mstore\n        /* \"#utility.yul\":6395:6571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6581:6963   */\n    tag_286:\n        /* \"#utility.yul\":6723:6726   */\n      0x00\n        /* \"#utility.yul\":6748:6815   */\n      tag_382\n        /* \"#utility.yul\":6812:6814   */\n      0x12\n        /* \"#utility.yul\":6807:6810   */\n      dup4\n        /* \"#utility.yul\":6748:6815   */\n      tag_261\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6741:6815   */\n      swap2\n      pop\n        /* \"#utility.yul\":6828:6921   */\n      tag_383\n        /* \"#utility.yul\":6917:6920   */\n      dup3\n        /* \"#utility.yul\":6828:6921   */\n      tag_285\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6950:6952   */\n      0x20\n        /* \"#utility.yul\":6945:6948   */\n      dup3\n        /* \"#utility.yul\":6941:6953   */\n      add\n        /* \"#utility.yul\":6934:6953   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6973:7408   */\n    tag_95:\n        /* \"#utility.yul\":7139:7143   */\n      0x00\n        /* \"#utility.yul\":7181:7183   */\n      0x20\n        /* \"#utility.yul\":7170:7179   */\n      dup3\n        /* \"#utility.yul\":7166:7184   */\n      add\n        /* \"#utility.yul\":7158:7184   */\n      swap1\n      pop\n        /* \"#utility.yul\":7234:7243   */\n      dup2\n        /* \"#utility.yul\":7228:7232   */\n      dup2\n        /* \"#utility.yul\":7224:7244   */\n      sub\n        /* \"#utility.yul\":7220:7221   */\n      0x00\n        /* \"#utility.yul\":7209:7218   */\n      dup4\n        /* \"#utility.yul\":7205:7222   */\n      add\n        /* \"#utility.yul\":7198:7245   */\n      mstore\n        /* \"#utility.yul\":7266:7397   */\n      tag_385\n        /* \"#utility.yul\":7392:7396   */\n      dup2\n        /* \"#utility.yul\":7266:7397   */\n      tag_286\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7258:7397   */\n      swap1\n      pop\n        /* \"#utility.yul\":6973:7408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7614   */\n    tag_287:\n        /* \"#utility.yul\":7470:7547   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7467:7468   */\n      0x00\n        /* \"#utility.yul\":7460:7548   */\n      mstore\n        /* \"#utility.yul\":7571:7575   */\n      0x11\n        /* \"#utility.yul\":7568:7569   */\n      0x04\n        /* \"#utility.yul\":7561:7576   */\n      mstore\n        /* \"#utility.yul\":7599:7603   */\n      0x24\n        /* \"#utility.yul\":7596:7597   */\n      0x00\n        /* \"#utility.yul\":7589:7604   */\n      revert\n        /* \"#utility.yul\":7624:7835   */\n    tag_99:\n        /* \"#utility.yul\":7664:7667   */\n      0x00\n        /* \"#utility.yul\":7687:7707   */\n      tag_388\n        /* \"#utility.yul\":7705:7706   */\n      dup3\n        /* \"#utility.yul\":7687:7707   */\n      tag_276\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7682:7707   */\n      swap2\n      pop\n        /* \"#utility.yul\":7725:7745   */\n      tag_389\n        /* \"#utility.yul\":7743:7744   */\n      dup4\n        /* \"#utility.yul\":7725:7745   */\n      tag_276\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7720:7745   */\n      swap3\n      pop\n        /* \"#utility.yul\":7772:7773   */\n      dup3\n        /* \"#utility.yul\":7769:7770   */\n      dup3\n        /* \"#utility.yul\":7765:7774   */\n      add\n        /* \"#utility.yul\":7758:7774   */\n      swap1\n      pop\n        /* \"#utility.yul\":7797:7800   */\n      dup1\n        /* \"#utility.yul\":7794:7795   */\n      dup3\n        /* \"#utility.yul\":7791:7801   */\n      gt\n        /* \"#utility.yul\":7788:7824   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":7804:7822   */\n      tag_391\n      tag_287\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7788:7824   */\n    tag_390:\n        /* \"#utility.yul\":7624:7835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7845:8029   */\n    tag_288:\n        /* \"#utility.yul\":7989:8017   */\n      0x657863656564732074686520746f74616c20666f722073616c65000000000000\n        /* \"#utility.yul\":7985:7986   */\n      0x00\n        /* \"#utility.yul\":7977:7983   */\n      dup3\n        /* \"#utility.yul\":7973:7987   */\n      add\n        /* \"#utility.yul\":7966:8018   */\n      mstore\n        /* \"#utility.yul\":7845:8029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8039:8421   */\n    tag_289:\n        /* \"#utility.yul\":8181:8184   */\n      0x00\n        /* \"#utility.yul\":8206:8273   */\n      tag_394\n        /* \"#utility.yul\":8270:8272   */\n      0x1a\n        /* \"#utility.yul\":8265:8268   */\n      dup4\n        /* \"#utility.yul\":8206:8273   */\n      tag_261\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8199:8273   */\n      swap2\n      pop\n        /* \"#utility.yul\":8286:8379   */\n      tag_395\n        /* \"#utility.yul\":8375:8378   */\n      dup3\n        /* \"#utility.yul\":8286:8379   */\n      tag_288\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8408:8410   */\n      0x20\n        /* \"#utility.yul\":8403:8406   */\n      dup3\n        /* \"#utility.yul\":8399:8411   */\n      add\n        /* \"#utility.yul\":8392:8411   */\n      swap1\n      pop\n        /* \"#utility.yul\":8039:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8431:8866   */\n    tag_102:\n        /* \"#utility.yul\":8597:8601   */\n      0x00\n        /* \"#utility.yul\":8639:8641   */\n      0x20\n        /* \"#utility.yul\":8628:8637   */\n      dup3\n        /* \"#utility.yul\":8624:8642   */\n      add\n        /* \"#utility.yul\":8616:8642   */\n      swap1\n      pop\n        /* \"#utility.yul\":8692:8701   */\n      dup2\n        /* \"#utility.yul\":8686:8690   */\n      dup2\n        /* \"#utility.yul\":8682:8702   */\n      sub\n        /* \"#utility.yul\":8678:8679   */\n      0x00\n        /* \"#utility.yul\":8667:8676   */\n      dup4\n        /* \"#utility.yul\":8663:8680   */\n      add\n        /* \"#utility.yul\":8656:8703   */\n      mstore\n        /* \"#utility.yul\":8724:8855   */\n      tag_397\n        /* \"#utility.yul\":8850:8854   */\n      dup2\n        /* \"#utility.yul\":8724:8855   */\n      tag_289\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8716:8855   */\n      swap1\n      pop\n        /* \"#utility.yul\":8431:8866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8876:9002   */\n    tag_290:\n        /* \"#utility.yul\":8967:8991   */\n      tag_399\n        /* \"#utility.yul\":8985:8990   */\n      dup2\n        /* \"#utility.yul\":8967:8991   */\n      tag_280\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8962:8965   */\n      dup3\n        /* \"#utility.yul\":8955:8992   */\n      mstore\n        /* \"#utility.yul\":8876:9002   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9012:9138   */\n    tag_291:\n        /* \"#utility.yul\":9103:9127   */\n      tag_401\n        /* \"#utility.yul\":9121:9126   */\n      dup2\n        /* \"#utility.yul\":9103:9127   */\n      tag_276\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9098:9101   */\n      dup3\n        /* \"#utility.yul\":9091:9128   */\n      mstore\n        /* \"#utility.yul\":9012:9138   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9148:9496   */\n    tag_104:\n        /* \"#utility.yul\":9269:9273   */\n      0x00\n        /* \"#utility.yul\":9311:9313   */\n      0x40\n        /* \"#utility.yul\":9300:9309   */\n      dup3\n        /* \"#utility.yul\":9296:9314   */\n      add\n        /* \"#utility.yul\":9288:9314   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9399   */\n      tag_403\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9385:9394   */\n      dup4\n        /* \"#utility.yul\":9381:9398   */\n      add\n        /* \"#utility.yul\":9372:9378   */\n      dup6\n        /* \"#utility.yul\":9328:9399   */\n      tag_290\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9413:9485   */\n      tag_404\n        /* \"#utility.yul\":9481:9483   */\n      0x20\n        /* \"#utility.yul\":9470:9479   */\n      dup4\n        /* \"#utility.yul\":9466:9484   */\n      add\n        /* \"#utility.yul\":9457:9463   */\n      dup5\n        /* \"#utility.yul\":9413:9485   */\n      tag_291\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9148:9496   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9630   */\n    tag_292:\n        /* \"#utility.yul\":9580:9601   */\n      tag_406\n        /* \"#utility.yul\":9595:9600   */\n      dup2\n        /* \"#utility.yul\":9580:9601   */\n      tag_270\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9573:9578   */\n      dup2\n        /* \"#utility.yul\":9570:9602   */\n      eq\n        /* \"#utility.yul\":9560:9620   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9613:9614   */\n      dup1\n        /* \"#utility.yul\":9606:9618   */\n      revert\n        /* \"#utility.yul\":9560:9620   */\n    tag_407:\n        /* \"#utility.yul\":9506:9630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9789   */\n    tag_293:\n        /* \"#utility.yul\":9694:9699   */\n      0x00\n        /* \"#utility.yul\":9729:9735   */\n      dup2\n        /* \"#utility.yul\":9723:9736   */\n      mload\n        /* \"#utility.yul\":9714:9736   */\n      swap1\n      pop\n        /* \"#utility.yul\":9749:9779   */\n      tag_409\n        /* \"#utility.yul\":9773:9778   */\n      dup2\n        /* \"#utility.yul\":9749:9779   */\n      tag_292\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9640:9789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9799:10168   */\n    tag_108:\n        /* \"#utility.yul\":9866:9872   */\n      0x00\n        /* \"#utility.yul\":9919:9921   */\n      0x20\n        /* \"#utility.yul\":9907:9916   */\n      dup3\n        /* \"#utility.yul\":9898:9905   */\n      dup5\n        /* \"#utility.yul\":9894:9917   */\n      sub\n        /* \"#utility.yul\":9890:9922   */\n      slt\n        /* \"#utility.yul\":9887:10006   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":9925:10004   */\n      tag_412\n      tag_265\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9887:10006   */\n    tag_411:\n        /* \"#utility.yul\":10053:10054   */\n      0x00\n        /* \"#utility.yul\":10082:10143   */\n      tag_413\n        /* \"#utility.yul\":10135:10142   */\n      dup5\n        /* \"#utility.yul\":10126:10132   */\n      dup3\n        /* \"#utility.yul\":10115:10124   */\n      dup6\n        /* \"#utility.yul\":10111:10133   */\n      add\n        /* \"#utility.yul\":10082:10143   */\n      tag_293\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10072:10143   */\n      swap2\n      pop\n        /* \"#utility.yul\":10020:10157   */\n      pop\n        /* \"#utility.yul\":9799:10168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10412   */\n    tag_116:\n        /* \"#utility.yul\":10271:10275   */\n      0x00\n        /* \"#utility.yul\":10313:10315   */\n      0x20\n        /* \"#utility.yul\":10302:10311   */\n      dup3\n        /* \"#utility.yul\":10298:10316   */\n      add\n        /* \"#utility.yul\":10290:10316   */\n      swap1\n      pop\n        /* \"#utility.yul\":10330:10401   */\n      tag_415\n        /* \"#utility.yul\":10398:10399   */\n      0x00\n        /* \"#utility.yul\":10387:10396   */\n      dup4\n        /* \"#utility.yul\":10383:10400   */\n      add\n        /* \"#utility.yul\":10374:10380   */\n      dup5\n        /* \"#utility.yul\":10330:10401   */\n      tag_291\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10178:10412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10422:10880   */\n    tag_127:\n        /* \"#utility.yul\":10462:10469   */\n      0x00\n        /* \"#utility.yul\":10489:10509   */\n      tag_417\n        /* \"#utility.yul\":10507:10508   */\n      dup3\n        /* \"#utility.yul\":10489:10509   */\n      tag_276\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10484:10509   */\n      swap2\n      pop\n        /* \"#utility.yul\":10527:10547   */\n      tag_418\n        /* \"#utility.yul\":10545:10546   */\n      dup4\n        /* \"#utility.yul\":10527:10547   */\n      tag_276\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10522:10547   */\n      swap3\n      pop\n        /* \"#utility.yul\":10586:10587   */\n      dup3\n        /* \"#utility.yul\":10583:10584   */\n      dup3\n        /* \"#utility.yul\":10579:10588   */\n      mul\n        /* \"#utility.yul\":10612:10642   */\n      tag_419\n        /* \"#utility.yul\":10630:10641   */\n      dup2\n        /* \"#utility.yul\":10612:10642   */\n      tag_276\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10601:10642   */\n      swap2\n      pop\n        /* \"#utility.yul\":10811:10812   */\n      dup3\n        /* \"#utility.yul\":10802:10809   */\n      dup3\n        /* \"#utility.yul\":10798:10813   */\n      div\n        /* \"#utility.yul\":10795:10796   */\n      dup5\n        /* \"#utility.yul\":10792:10814   */\n      eq\n        /* \"#utility.yul\":10768:10769   */\n      dup4\n        /* \"#utility.yul\":10761:10770   */\n      iszero\n        /* \"#utility.yul\":10737:10832   */\n      or\n        /* \"#utility.yul\":10710:10869   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":10849:10867   */\n      tag_421\n      tag_287\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10710:10869   */\n    tag_420:\n        /* \"#utility.yul\":10470:10880   */\n      pop\n        /* \"#utility.yul\":10422:10880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10890:11136   */\n    tag_294:\n        /* \"#utility.yul\":11034:11068   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11030:11031   */\n      0x00\n        /* \"#utility.yul\":11022:11028   */\n      dup3\n        /* \"#utility.yul\":11018:11032   */\n      add\n        /* \"#utility.yul\":11011:11069   */\n      mstore\n        /* \"#utility.yul\":11107:11124   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11102:11104   */\n      0x20\n        /* \"#utility.yul\":11094:11100   */\n      dup3\n        /* \"#utility.yul\":11090:11105   */\n      add\n        /* \"#utility.yul\":11083:11125   */\n      mstore\n        /* \"#utility.yul\":10890:11136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11146:11528   */\n    tag_295:\n        /* \"#utility.yul\":11288:11291   */\n      0x00\n        /* \"#utility.yul\":11313:11380   */\n      tag_424\n        /* \"#utility.yul\":11377:11379   */\n      0x2f\n        /* \"#utility.yul\":11372:11375   */\n      dup4\n        /* \"#utility.yul\":11313:11380   */\n      tag_261\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11306:11380   */\n      swap2\n      pop\n        /* \"#utility.yul\":11393:11486   */\n      tag_425\n        /* \"#utility.yul\":11482:11485   */\n      dup3\n        /* \"#utility.yul\":11393:11486   */\n      tag_294\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11515:11517   */\n      0x40\n        /* \"#utility.yul\":11510:11513   */\n      dup3\n        /* \"#utility.yul\":11506:11518   */\n      add\n        /* \"#utility.yul\":11499:11518   */\n      swap1\n      pop\n        /* \"#utility.yul\":11146:11528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11538:11973   */\n    tag_163:\n        /* \"#utility.yul\":11704:11708   */\n      0x00\n        /* \"#utility.yul\":11746:11748   */\n      0x20\n        /* \"#utility.yul\":11735:11744   */\n      dup3\n        /* \"#utility.yul\":11731:11749   */\n      add\n        /* \"#utility.yul\":11723:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11799:11808   */\n      dup2\n        /* \"#utility.yul\":11793:11797   */\n      dup2\n        /* \"#utility.yul\":11789:11809   */\n      sub\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11774:11783   */\n      dup4\n        /* \"#utility.yul\":11770:11787   */\n      add\n        /* \"#utility.yul\":11763:11810   */\n      mstore\n        /* \"#utility.yul\":11831:11962   */\n      tag_427\n        /* \"#utility.yul\":11957:11961   */\n      dup2\n        /* \"#utility.yul\":11831:11962   */\n      tag_295\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11823:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11538:11973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11983:12169   */\n    tag_296:\n        /* \"#utility.yul\":12127:12157   */\n      0x74686520737570706c7920697320616c7265616479206275726e656400000000\n        /* \"#utility.yul\":12123:12124   */\n      0x00\n        /* \"#utility.yul\":12115:12121   */\n      dup3\n        /* \"#utility.yul\":12111:12125   */\n      add\n        /* \"#utility.yul\":12104:12158   */\n      mstore\n        /* \"#utility.yul\":11983:12169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12179:12561   */\n    tag_297:\n        /* \"#utility.yul\":12321:12324   */\n      0x00\n        /* \"#utility.yul\":12346:12413   */\n      tag_430\n        /* \"#utility.yul\":12410:12412   */\n      0x1c\n        /* \"#utility.yul\":12405:12408   */\n      dup4\n        /* \"#utility.yul\":12346:12413   */\n      tag_261\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12339:12413   */\n      swap2\n      pop\n        /* \"#utility.yul\":12426:12519   */\n      tag_431\n        /* \"#utility.yul\":12515:12518   */\n      dup3\n        /* \"#utility.yul\":12426:12519   */\n      tag_296\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12548:12550   */\n      0x20\n        /* \"#utility.yul\":12543:12546   */\n      dup3\n        /* \"#utility.yul\":12539:12551   */\n      add\n        /* \"#utility.yul\":12532:12551   */\n      swap1\n      pop\n        /* \"#utility.yul\":12179:12561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12571:13006   */\n    tag_174:\n        /* \"#utility.yul\":12737:12741   */\n      0x00\n        /* \"#utility.yul\":12779:12781   */\n      0x20\n        /* \"#utility.yul\":12768:12777   */\n      dup3\n        /* \"#utility.yul\":12764:12782   */\n      add\n        /* \"#utility.yul\":12756:12782   */\n      swap1\n      pop\n        /* \"#utility.yul\":12832:12841   */\n      dup2\n        /* \"#utility.yul\":12826:12830   */\n      dup2\n        /* \"#utility.yul\":12822:12842   */\n      sub\n        /* \"#utility.yul\":12818:12819   */\n      0x00\n        /* \"#utility.yul\":12807:12816   */\n      dup4\n        /* \"#utility.yul\":12803:12820   */\n      add\n        /* \"#utility.yul\":12796:12843   */\n      mstore\n        /* \"#utility.yul\":12864:12995   */\n      tag_433\n        /* \"#utility.yul\":12990:12994   */\n      dup2\n        /* \"#utility.yul\":12864:12995   */\n      tag_297\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12856:12995   */\n      swap1\n      pop\n        /* \"#utility.yul\":12571:13006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13016:13230   */\n    tag_213:\n        /* \"#utility.yul\":13056:13060   */\n      0x00\n        /* \"#utility.yul\":13080:13100   */\n      tag_435\n        /* \"#utility.yul\":13098:13099   */\n      dup3\n        /* \"#utility.yul\":13080:13100   */\n      tag_276\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13075:13100   */\n      swap2\n      pop\n        /* \"#utility.yul\":13118:13138   */\n      tag_436\n        /* \"#utility.yul\":13136:13137   */\n      dup4\n        /* \"#utility.yul\":13118:13138   */\n      tag_276\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13113:13138   */\n      swap3\n      pop\n        /* \"#utility.yul\":13166:13167   */\n      dup3\n        /* \"#utility.yul\":13163:13164   */\n      dup3\n        /* \"#utility.yul\":13159:13168   */\n      sub\n        /* \"#utility.yul\":13151:13168   */\n      swap1\n      pop\n        /* \"#utility.yul\":13194:13195   */\n      dup2\n        /* \"#utility.yul\":13188:13192   */\n      dup2\n        /* \"#utility.yul\":13185:13196   */\n      gt\n        /* \"#utility.yul\":13182:13219   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":13199:13217   */\n      tag_438\n      tag_287\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13182:13219   */\n    tag_437:\n        /* \"#utility.yul\":13016:13230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13240:13396   */\n    tag_298:\n        /* \"#utility.yul\":13342:13353   */\n      0x00\n        /* \"#utility.yul\":13383:13386   */\n      dup2\n        /* \"#utility.yul\":13368:13386   */\n      swap1\n      pop\n        /* \"#utility.yul\":13240:13396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13406:13587   */\n    tag_299:\n        /* \"#utility.yul\":13550:13575   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13538:13544   */\n      dup3\n        /* \"#utility.yul\":13534:13548   */\n      add\n        /* \"#utility.yul\":13527:13576   */\n      mstore\n        /* \"#utility.yul\":13406:13587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13597:14015   */\n    tag_300:\n        /* \"#utility.yul\":13757:13760   */\n      0x00\n        /* \"#utility.yul\":13782:13867   */\n      tag_442\n        /* \"#utility.yul\":13864:13866   */\n      0x17\n        /* \"#utility.yul\":13859:13862   */\n      dup4\n        /* \"#utility.yul\":13782:13867   */\n      tag_298\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13775:13867   */\n      swap2\n      pop\n        /* \"#utility.yul\":13880:13973   */\n      tag_443\n        /* \"#utility.yul\":13969:13972   */\n      dup3\n        /* \"#utility.yul\":13880:13973   */\n      tag_299\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14002:14004   */\n      0x17\n        /* \"#utility.yul\":13997:14000   */\n      dup3\n        /* \"#utility.yul\":13993:14005   */\n      add\n        /* \"#utility.yul\":13986:14005   */\n      swap1\n      pop\n        /* \"#utility.yul\":13597:14015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14025:14132   */\n    tag_301:\n        /* \"#utility.yul\":14077:14083   */\n      0x00\n        /* \"#utility.yul\":14115:14120   */\n      dup2\n        /* \"#utility.yul\":14109:14121   */\n      mload\n        /* \"#utility.yul\":14099:14121   */\n      swap1\n      pop\n        /* \"#utility.yul\":14025:14132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14142:14416   */\n    tag_302:\n        /* \"#utility.yul\":14227:14228   */\n      0x00\n        /* \"#utility.yul\":14241:14366   */\n    tag_446:\n        /* \"#utility.yul\":14255:14261   */\n      dup4\n        /* \"#utility.yul\":14252:14253   */\n      dup2\n        /* \"#utility.yul\":14249:14262   */\n      lt\n        /* \"#utility.yul\":14241:14366   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":14348:14349   */\n      dup1\n        /* \"#utility.yul\":14343:14346   */\n      dup3\n        /* \"#utility.yul\":14339:14350   */\n      add\n        /* \"#utility.yul\":14333:14351   */\n      mload\n        /* \"#utility.yul\":14329:14330   */\n      dup2\n        /* \"#utility.yul\":14324:14327   */\n      dup5\n        /* \"#utility.yul\":14320:14331   */\n      add\n        /* \"#utility.yul\":14313:14352   */\n      mstore\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14274:14275   */\n      dup2\n        /* \"#utility.yul\":14270:14280   */\n      add\n        /* \"#utility.yul\":14265:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14241:14366   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":14404:14405   */\n      0x00\n        /* \"#utility.yul\":14395:14401   */\n      dup5\n        /* \"#utility.yul\":14390:14393   */\n      dup5\n        /* \"#utility.yul\":14386:14402   */\n      add\n        /* \"#utility.yul\":14379:14406   */\n      mstore\n        /* \"#utility.yul\":14204:14416   */\n      pop\n        /* \"#utility.yul\":14142:14416   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14426:14836   */\n    tag_303:\n        /* \"#utility.yul\":14532:14535   */\n      0x00\n        /* \"#utility.yul\":14564:14603   */\n      tag_450\n        /* \"#utility.yul\":14597:14602   */\n      dup3\n        /* \"#utility.yul\":14564:14603   */\n      tag_301\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14623:14712   */\n      tag_451\n        /* \"#utility.yul\":14705:14711   */\n      dup2\n        /* \"#utility.yul\":14700:14703   */\n      dup6\n        /* \"#utility.yul\":14623:14712   */\n      tag_298\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14616:14712   */\n      swap4\n      pop\n        /* \"#utility.yul\":14725:14790   */\n      tag_452\n        /* \"#utility.yul\":14783:14789   */\n      dup2\n        /* \"#utility.yul\":14778:14781   */\n      dup6\n        /* \"#utility.yul\":14771:14775   */\n      0x20\n        /* \"#utility.yul\":14764:14769   */\n      dup7\n        /* \"#utility.yul\":14760:14776   */\n      add\n        /* \"#utility.yul\":14725:14790   */\n      tag_302\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14819:14825   */\n      dup1\n        /* \"#utility.yul\":14814:14817   */\n      dup5\n        /* \"#utility.yul\":14810:14826   */\n      add\n        /* \"#utility.yul\":14803:14826   */\n      swap2\n      pop\n        /* \"#utility.yul\":14536:14836   */\n      pop\n        /* \"#utility.yul\":14426:14836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14846:15021   */\n    tag_304:\n        /* \"#utility.yul\":14990:15009   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":14986:14987   */\n      0x00\n        /* \"#utility.yul\":14978:14984   */\n      dup3\n        /* \"#utility.yul\":14974:14988   */\n      add\n        /* \"#utility.yul\":14967:15010   */\n      mstore\n        /* \"#utility.yul\":14846:15021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15031:15449   */\n    tag_305:\n        /* \"#utility.yul\":15191:15194   */\n      0x00\n        /* \"#utility.yul\":15216:15301   */\n      tag_455\n        /* \"#utility.yul\":15298:15300   */\n      0x11\n        /* \"#utility.yul\":15293:15296   */\n      dup4\n        /* \"#utility.yul\":15216:15301   */\n      tag_298\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15209:15301   */\n      swap2\n      pop\n        /* \"#utility.yul\":15314:15407   */\n      tag_456\n        /* \"#utility.yul\":15403:15406   */\n      dup3\n        /* \"#utility.yul\":15314:15407   */\n      tag_304\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15436:15438   */\n      0x11\n        /* \"#utility.yul\":15431:15434   */\n      dup3\n        /* \"#utility.yul\":15427:15439   */\n      add\n        /* \"#utility.yul\":15420:15439   */\n      swap1\n      pop\n        /* \"#utility.yul\":15031:15449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15459:16450   */\n    tag_224:\n        /* \"#utility.yul\":15841:15844   */\n      0x00\n        /* \"#utility.yul\":15867:16015   */\n      tag_458\n        /* \"#utility.yul\":16011:16014   */\n      dup3\n        /* \"#utility.yul\":15867:16015   */\n      tag_300\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15860:16015   */\n      swap2\n      pop\n        /* \"#utility.yul\":16036:16131   */\n      tag_459\n        /* \"#utility.yul\":16127:16130   */\n      dup3\n        /* \"#utility.yul\":16118:16124   */\n      dup6\n        /* \"#utility.yul\":16036:16131   */\n      tag_303\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16029:16131   */\n      swap2\n      pop\n        /* \"#utility.yul\":16152:16300   */\n      tag_460\n        /* \"#utility.yul\":16296:16299   */\n      dup3\n        /* \"#utility.yul\":16152:16300   */\n      tag_305\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16145:16300   */\n      swap2\n      pop\n        /* \"#utility.yul\":16321:16416   */\n      tag_461\n        /* \"#utility.yul\":16412:16415   */\n      dup3\n        /* \"#utility.yul\":16403:16409   */\n      dup5\n        /* \"#utility.yul\":16321:16416   */\n      tag_303\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":16314:16416   */\n      swap2\n      pop\n        /* \"#utility.yul\":16437:16440   */\n      dup2\n        /* \"#utility.yul\":16430:16440   */\n      swap1\n      pop\n        /* \"#utility.yul\":15459:16450   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16460:16570   */\n    tag_306:\n        /* \"#utility.yul\":16501:16507   */\n      0x00\n        /* \"#utility.yul\":16556:16558   */\n      0x1f\n        /* \"#utility.yul\":16552:16559   */\n      not\n        /* \"#utility.yul\":16547:16549   */\n      0x1f\n        /* \"#utility.yul\":16540:16545   */\n      dup4\n        /* \"#utility.yul\":16536:16550   */\n      add\n        /* \"#utility.yul\":16532:16560   */\n      and\n        /* \"#utility.yul\":16522:16560   */\n      swap1\n      pop\n        /* \"#utility.yul\":16460:16570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16580:16977   */\n    tag_307:\n        /* \"#utility.yul\":16668:16671   */\n      0x00\n        /* \"#utility.yul\":16700:16739   */\n      tag_464\n        /* \"#utility.yul\":16733:16738   */\n      dup3\n        /* \"#utility.yul\":16700:16739   */\n      tag_301\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16759:16830   */\n      tag_465\n        /* \"#utility.yul\":16823:16829   */\n      dup2\n        /* \"#utility.yul\":16818:16821   */\n      dup6\n        /* \"#utility.yul\":16759:16830   */\n      tag_261\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16752:16830   */\n      swap4\n      pop\n        /* \"#utility.yul\":16843:16908   */\n      tag_466\n        /* \"#utility.yul\":16901:16907   */\n      dup2\n        /* \"#utility.yul\":16896:16899   */\n      dup6\n        /* \"#utility.yul\":16889:16893   */\n      0x20\n        /* \"#utility.yul\":16882:16887   */\n      dup7\n        /* \"#utility.yul\":16878:16894   */\n      add\n        /* \"#utility.yul\":16843:16908   */\n      tag_302\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":16937:16966   */\n      tag_467\n        /* \"#utility.yul\":16959:16965   */\n      dup2\n        /* \"#utility.yul\":16937:16966   */\n      tag_306\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16932:16935   */\n      dup5\n        /* \"#utility.yul\":16928:16967   */\n      add\n        /* \"#utility.yul\":16921:16967   */\n      swap2\n      pop\n        /* \"#utility.yul\":16672:16977   */\n      pop\n        /* \"#utility.yul\":16580:16977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16987:17316   */\n    tag_226:\n        /* \"#utility.yul\":17100:17104   */\n      0x00\n        /* \"#utility.yul\":17142:17144   */\n      0x20\n        /* \"#utility.yul\":17131:17140   */\n      dup3\n        /* \"#utility.yul\":17127:17145   */\n      add\n        /* \"#utility.yul\":17119:17145   */\n      swap1\n      pop\n        /* \"#utility.yul\":17195:17204   */\n      dup2\n        /* \"#utility.yul\":17189:17193   */\n      dup2\n        /* \"#utility.yul\":17185:17205   */\n      sub\n        /* \"#utility.yul\":17181:17182   */\n      0x00\n        /* \"#utility.yul\":17170:17179   */\n      dup4\n        /* \"#utility.yul\":17166:17183   */\n      add\n        /* \"#utility.yul\":17159:17206   */\n      mstore\n        /* \"#utility.yul\":17227:17305   */\n      tag_469\n        /* \"#utility.yul\":17300:17304   */\n      dup2\n        /* \"#utility.yul\":17291:17297   */\n      dup5\n        /* \"#utility.yul\":17227:17305   */\n      tag_307\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":17219:17305   */\n      swap1\n      pop\n        /* \"#utility.yul\":16987:17316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17326:17522   */\n    tag_237:\n        /* \"#utility.yul\":17378:17455   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17375:17376   */\n      0x00\n        /* \"#utility.yul\":17368:17456   */\n      mstore\n        /* \"#utility.yul\":17479:17483   */\n      0x41\n        /* \"#utility.yul\":17476:17477   */\n      0x04\n        /* \"#utility.yul\":17469:17484   */\n      mstore\n        /* \"#utility.yul\":17507:17511   */\n      0x24\n        /* \"#utility.yul\":17504:17505   */\n      0x00\n        /* \"#utility.yul\":17497:17512   */\n      revert\n        /* \"#utility.yul\":17532:17728   */\n    tag_241:\n        /* \"#utility.yul\":17584:17661   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17581:17582   */\n      0x00\n        /* \"#utility.yul\":17574:17662   */\n      mstore\n        /* \"#utility.yul\":17685:17689   */\n      0x32\n        /* \"#utility.yul\":17682:17683   */\n      0x04\n        /* \"#utility.yul\":17675:17690   */\n      mstore\n        /* \"#utility.yul\":17713:17717   */\n      0x24\n        /* \"#utility.yul\":17710:17711   */\n      0x00\n        /* \"#utility.yul\":17703:17718   */\n      revert\n        /* \"#utility.yul\":17738:17925   */\n    tag_254:\n        /* \"#utility.yul\":17777:17780   */\n      0x00\n        /* \"#utility.yul\":17804:17828   */\n      tag_473\n        /* \"#utility.yul\":17822:17827   */\n      dup3\n        /* \"#utility.yul\":17804:17828   */\n      tag_276\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17795:17828   */\n      swap2\n      pop\n        /* \"#utility.yul\":17854:17858   */\n      0x00\n        /* \"#utility.yul\":17847:17852   */\n      dup3\n        /* \"#utility.yul\":17844:17859   */\n      sub\n        /* \"#utility.yul\":17841:17882   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":17862:17880   */\n      tag_475\n      tag_287\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":17841:17882   */\n    tag_474:\n        /* \"#utility.yul\":17913:17914   */\n      0x01\n        /* \"#utility.yul\":17906:17911   */\n      dup3\n        /* \"#utility.yul\":17902:17915   */\n      sub\n        /* \"#utility.yul\":17895:17915   */\n      swap1\n      pop\n        /* \"#utility.yul\":17738:17925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17935:18125   */\n    tag_308:\n        /* \"#utility.yul\":18079:18113   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":18075:18076   */\n      0x00\n        /* \"#utility.yul\":18067:18073   */\n      dup3\n        /* \"#utility.yul\":18063:18077   */\n      add\n        /* \"#utility.yul\":18056:18114   */\n      mstore\n        /* \"#utility.yul\":17935:18125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18135:18517   */\n    tag_309:\n        /* \"#utility.yul\":18277:18280   */\n      0x00\n        /* \"#utility.yul\":18302:18369   */\n      tag_478\n        /* \"#utility.yul\":18366:18368   */\n      0x20\n        /* \"#utility.yul\":18361:18364   */\n      dup4\n        /* \"#utility.yul\":18302:18369   */\n      tag_261\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":18295:18369   */\n      swap2\n      pop\n        /* \"#utility.yul\":18382:18475   */\n      tag_479\n        /* \"#utility.yul\":18471:18474   */\n      dup3\n        /* \"#utility.yul\":18382:18475   */\n      tag_308\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18504:18506   */\n      0x20\n        /* \"#utility.yul\":18499:18502   */\n      dup3\n        /* \"#utility.yul\":18495:18507   */\n      add\n        /* \"#utility.yul\":18488:18507   */\n      swap1\n      pop\n        /* \"#utility.yul\":18135:18517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18527:18962   */\n    tag_257:\n        /* \"#utility.yul\":18693:18697   */\n      0x00\n        /* \"#utility.yul\":18735:18737   */\n      0x20\n        /* \"#utility.yul\":18724:18733   */\n      dup3\n        /* \"#utility.yul\":18720:18738   */\n      add\n        /* \"#utility.yul\":18712:18738   */\n      swap1\n      pop\n        /* \"#utility.yul\":18788:18797   */\n      dup2\n        /* \"#utility.yul\":18782:18786   */\n      dup2\n        /* \"#utility.yul\":18778:18798   */\n      sub\n        /* \"#utility.yul\":18774:18775   */\n      0x00\n        /* \"#utility.yul\":18763:18772   */\n      dup4\n        /* \"#utility.yul\":18759:18776   */\n      add\n        /* \"#utility.yul\":18752:18799   */\n      mstore\n        /* \"#utility.yul\":18820:18951   */\n      tag_481\n        /* \"#utility.yul\":18946:18950   */\n      dup2\n        /* \"#utility.yul\":18820:18951   */\n      tag_309\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":18812:18951   */\n      swap1\n      pop\n        /* \"#utility.yul\":18527:18962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18972:19168   */\n    tag_310:\n        /* \"#utility.yul\":19024:19101   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19021:19022   */\n      0x00\n        /* \"#utility.yul\":19014:19102   */\n      mstore\n        /* \"#utility.yul\":19125:19129   */\n      0x12\n        /* \"#utility.yul\":19122:19123   */\n      0x04\n        /* \"#utility.yul\":19115:19130   */\n      mstore\n        /* \"#utility.yul\":19153:19157   */\n      0x24\n        /* \"#utility.yul\":19150:19151   */\n      0x00\n        /* \"#utility.yul\":19143:19158   */\n      revert\n        /* \"#utility.yul\":19178:19383   */\n    tag_260:\n        /* \"#utility.yul\":19218:19219   */\n      0x00\n        /* \"#utility.yul\":19239:19259   */\n      tag_484\n        /* \"#utility.yul\":19257:19258   */\n      dup3\n        /* \"#utility.yul\":19239:19259   */\n      tag_276\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":19234:19259   */\n      swap2\n      pop\n        /* \"#utility.yul\":19277:19297   */\n      tag_485\n        /* \"#utility.yul\":19295:19296   */\n      dup4\n        /* \"#utility.yul\":19277:19297   */\n      tag_276\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":19272:19297   */\n      swap3\n      pop\n        /* \"#utility.yul\":19320:19321   */\n      dup3\n        /* \"#utility.yul\":19310:19345   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":19325:19343   */\n      tag_487\n      tag_310\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":19310:19345   */\n    tag_486:\n        /* \"#utility.yul\":19371:19372   */\n      dup3\n        /* \"#utility.yul\":19368:19369   */\n      dup3\n        /* \"#utility.yul\":19364:19373   */\n      div\n        /* \"#utility.yul\":19359:19373   */\n      swap1\n      pop\n        /* \"#utility.yul\":19178:19383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220814a8a98eefd24b4b88da9a1e13d0f300f7b6d1d6c4390631a481f9d87b6808a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2014": {
									"entryPoint": null,
									"id": 2014,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_361": {
									"entryPoint": 484,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_478": {
									"entryPoint": 831,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_157": {
									"entryPoint": 725,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:11"
															},
															"nodeType": "YulIf",
															"src": "949:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:11",
														"type": ""
													}
												],
												"src": "845:507:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052640430e2340060045569152d02c7e14af680000060065560016009556000600b60006101000a81548160ff02191690831515021790555062278d00600c5562093a80600d55604051620020a2380380620020a283398181016040528101906200006e9190620003b1565b620000a07fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773882620001e460201b60201c565b620000d27f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84882620001e460201b60201c565b620001047f305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb328982620001e460201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260808181525050606f600a60008081526020019081526020016000208190555060de600a6000600181526020019081526020016000208190555061014d600a600060028152602001908152602001600020819055505050620003f8565b620001f68282620002d560201b60201c565b620002d157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002766200033f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000379826200034c565b9050919050565b6200038b816200036c565b81146200039757600080fd5b50565b600081519050620003ab8162000380565b92915050565b60008060408385031215620003cb57620003ca62000347565b5b6000620003db858286016200039a565b9250506020620003ee858286016200039a565b9150509250929050565b608051611c80620004226000396000818161071f0152818161085a01526108f50152611c806000f3fe6080604052600436106100e15760003560e01c806373f425611161007f578063a217fddf11610059578063a217fddf146102f4578063a6f2ae3a1461031f578063b1ac51f81461033d578063d547741f1461036857610125565b806373f425611461026157806376082a5e1461028c57806391d14854146102b757610125565b80632e1a7d4d116100bb5780632e1a7d4d146101cf5780632f2ff15d146101f857806336568abe146102215780634f2484091461024a57610125565b806301ffc9a71461012a578063248a9ca314610167578063282c51f3146101a457610125565b36610125577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161011390611304565b60405180910390a1610123610391565b005b600080fd5b34801561013657600080fd5b50610151600480360381019061014c9190611381565b610626565b60405161015e91906113c9565b60405180910390f35b34801561017357600080fd5b5061018e6004803603810190610189919061141a565b6106a0565b60405161019b9190611456565b60405180910390f35b3480156101b057600080fd5b506101b96106bf565b6040516101c69190611456565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f191906114a7565b6106e3565b005b34801561020457600080fd5b5061021f600480360381019061021a9190611532565b610980565b005b34801561022d57600080fd5b5061024860048036038101906102439190611532565b6109a1565b005b34801561025657600080fd5b5061025f610a24565b005b34801561026d57600080fd5b50610276610be0565b60405161028391906113c9565b60405180910390f35b34801561029857600080fd5b506102a1610bf7565b6040516102ae9190611456565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d99190611532565b610c1b565b6040516102eb91906113c9565b60405180910390f35b34801561030057600080fd5b50610309610c85565b6040516103169190611456565b60405180910390f35b610327610391565b60405161033491906113c9565b60405180910390f35b34801561034957600080fd5b50610352610c8c565b60405161035f9190611456565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a9190611532565b610cb0565b005b600060045442106103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906115be565b60405180910390fd5b6000341161041a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104119061162a565b60405180910390fd5b600061042534610cd1565b9050600654600854826104389190611679565b10610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906116f9565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016104d5929190611737565b6020604051808303816000875af11580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610518919061178c565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610576929190611737565b6020604051808303816000875af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b9919061178c565b50600854816105c89190611679565b60088190555034600760008282546105e09190611679565b925050819055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb35205439957278160405161061691906117b9565b60405180910390a1600191505090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610699575061069882610cef565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773861070d81610d59565b426012600c5461071d91906117d4565b7f00000000000000000000000000000000000000000000000000000000000000006107489190611679565b111561084957600061075983610d6d565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016107b8929190611737565b6020604051808303816000875af11580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb919061178c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610842573d6000803e3d6000fd5b505061097c565b42600c805461085891906117d4565b7f00000000000000000000000000000000000000000000000000000000000000006108839190611679565b11156108e357600061089483610d6d565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108dc573d6000803e3d6000fd5b505061097b565b426006600c546108f391906117d4565b7f000000000000000000000000000000000000000000000000000000000000000061091e9190611679565b111561097a57600061092f83610d6d565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610977573d6000803e3d6000fd5b50505b5b5b5050565b610989826106a0565b61099281610d59565b61099c8383610d90565b505050565b6109a9610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611888565b60405180910390fd5b610a208282610e78565b5050565b6004544210610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f906115be565b60405180910390fd5b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610a9281610d59565b600b60009054906101000a900460ff1615610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad9906118f4565b60405180910390fd5b6000610afb600854600654610f5990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610b5891906117b9565b600060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e81604051610bb991906117b9565b60405180910390a1506001600b60006101000a81548160ff02191690831515021790555050565b6000600b60009054906101000a900460ff16905090565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773881565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b7f305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb328981565b610cb9826106a0565b610cc281610d59565b610ccc8383610e78565b505050565b6000610ce860095483610f6f90919063ffffffff16565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d6a81610d65610e70565b610f85565b50565b6000610d89610d7a61100a565b83610f6f90919063ffffffff16565b9050919050565b610d9a8282610c1b565b610e6c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e11610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610e828282610c1b565b15610f5557600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610efa610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610f679190611914565b905092915050565b60008183610f7d91906117d4565b905092915050565b610f8f8282610c1b565b61100657610f9c81611028565b610faa8360001c6020611055565b604051602001610fbb929190611a51565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd9190611ad5565b60405180910390fd5b5050565b600061102360065460085461129190919063ffffffff16565b905090565b606061104e8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611055565b9050919050565b60606000600283600261106891906117d4565b6110729190611679565b67ffffffffffffffff81111561108b5761108a611af7565b5b6040519080825280601f01601f1916602001820160405280156110bd5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110f5576110f4611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061115957611158611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261119991906117d4565b6111a39190611679565b90505b6001811115611243577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106111e5576111e4611b26565b5b1a60f81b8282815181106111fc576111fb611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061123c90611b55565b90506111a6565b5060008414611287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127e90611bca565b60405180910390fd5b8091505092915050565b6000818361129f9190611c19565b905092915050565b600082825260208201905092915050565b7f66616c6c6261636b206869740000000000000000000000000000000000000000600082015250565b60006112ee600c836112a7565b91506112f9826112b8565b602082019050919050565b6000602082019050818103600083015261131d816112e1565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61135e81611329565b811461136957600080fd5b50565b60008135905061137b81611355565b92915050565b60006020828403121561139757611396611324565b5b60006113a58482850161136c565b91505092915050565b60008115159050919050565b6113c3816113ae565b82525050565b60006020820190506113de60008301846113ba565b92915050565b6000819050919050565b6113f7816113e4565b811461140257600080fd5b50565b600081359050611414816113ee565b92915050565b6000602082840312156114305761142f611324565b5b600061143e84828501611405565b91505092915050565b611450816113e4565b82525050565b600060208201905061146b6000830184611447565b92915050565b6000819050919050565b61148481611471565b811461148f57600080fd5b50565b6000813590506114a18161147b565b92915050565b6000602082840312156114bd576114bc611324565b5b60006114cb84828501611492565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114ff826114d4565b9050919050565b61150f816114f4565b811461151a57600080fd5b50565b60008135905061152c81611506565b92915050565b6000806040838503121561154957611548611324565b5b600061155785828601611405565b92505060206115688582860161151d565b9150509250929050565b7f49434f206973206f766572203a28200000000000000000000000000000000000600082015250565b60006115a8600f836112a7565b91506115b382611572565b602082019050919050565b600060208201905081810360008301526115d78161159b565b9050919050565b7f20706c656173652073656e64206d657469730000000000000000000000000000600082015250565b60006116146012836112a7565b915061161f826115de565b602082019050919050565b6000602082019050818103600083015261164381611607565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061168482611471565b915061168f83611471565b92508282019050808211156116a7576116a661164a565b5b92915050565b7f657863656564732074686520746f74616c20666f722073616c65000000000000600082015250565b60006116e3601a836112a7565b91506116ee826116ad565b602082019050919050565b60006020820190508181036000830152611712816116d6565b9050919050565b611722816114f4565b82525050565b61173181611471565b82525050565b600060408201905061174c6000830185611719565b6117596020830184611728565b9392505050565b611769816113ae565b811461177457600080fd5b50565b60008151905061178681611760565b92915050565b6000602082840312156117a2576117a1611324565b5b60006117b084828501611777565b91505092915050565b60006020820190506117ce6000830184611728565b92915050565b60006117df82611471565b91506117ea83611471565b92508282026117f881611471565b9150828204841483151761180f5761180e61164a565b5b5092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611872602f836112a7565b915061187d82611816565b604082019050919050565b600060208201905081810360008301526118a181611865565b9050919050565b7f74686520737570706c7920697320616c7265616479206275726e656400000000600082015250565b60006118de601c836112a7565b91506118e9826118a8565b602082019050919050565b6000602082019050818103600083015261190d816118d1565b9050919050565b600061191f82611471565b915061192a83611471565b92508282039050818111156119425761194161164a565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611989601783611948565b915061199482611953565b601782019050919050565b600081519050919050565b60005b838110156119c85780820151818401526020810190506119ad565b60008484015250505050565b60006119df8261199f565b6119e98185611948565b93506119f98185602086016119aa565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611a3b601183611948565b9150611a4682611a05565b601182019050919050565b6000611a5c8261197c565b9150611a6882856119d4565b9150611a7382611a2e565b9150611a7f82846119d4565b91508190509392505050565b6000601f19601f8301169050919050565b6000611aa78261199f565b611ab181856112a7565b9350611ac18185602086016119aa565b611aca81611a8b565b840191505092915050565b60006020820190508181036000830152611aef8184611a9c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b6082611471565b915060008203611b7357611b7261164a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611bb46020836112a7565b9150611bbf82611b7e565b602082019050919050565b60006020820190508181036000830152611be381611ba7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c2482611471565b9150611c2f83611471565b925082611c3f57611c3e611bea565b5b82820490509291505056fea2646970667358221220814a8a98eefd24b4b88da9a1e13d0f300f7b6d1d6c4390631a481f9d87b6808a64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH5 0x430E23400 PUSH1 0x4 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x9 SSTORE PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x278D00 PUSH1 0xC SSTORE PUSH3 0x93A80 PUSH1 0xD SSTORE PUSH1 0x40 MLOAD PUSH3 0x20A2 CODESIZE SUB DUP1 PUSH3 0x20A2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6E SWAP2 SWAP1 PUSH3 0x3B1 JUMP JUMPDEST PUSH3 0xA0 PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP3 PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD2 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP3 PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0x6F PUSH1 0xA PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xDE PUSH1 0xA PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0xA PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3F8 JUMP JUMPDEST PUSH3 0x1F6 DUP3 DUP3 PUSH3 0x2D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2D1 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x276 PUSH3 0x33F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x379 DUP3 PUSH3 0x34C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x38B DUP2 PUSH3 0x36C JUMP JUMPDEST DUP2 EQ PUSH3 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3AB DUP2 PUSH3 0x380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3CB JUMPI PUSH3 0x3CA PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3DB DUP6 DUP3 DUP7 ADD PUSH3 0x39A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3EE DUP6 DUP3 DUP7 ADD PUSH3 0x39A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C80 PUSH3 0x422 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x71F ADD MSTORE DUP2 DUP2 PUSH2 0x85A ADD MSTORE PUSH2 0x8F5 ADD MSTORE PUSH2 0x1C80 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F42561 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB1AC51F8 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x368 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x73F42561 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B7 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x24A JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1A4 JUMPI PUSH2 0x125 JUMP JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x113 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x123 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x425 CALLVALUE PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST LT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x8 SLOAD DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x699 JUMPI POP PUSH2 0x698 DUP3 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x70D DUP2 PUSH2 0xD59 JUMP JUMPDEST TIMESTAMP PUSH1 0x12 PUSH1 0xC SLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x0 PUSH2 0x759 DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x97C JUMP JUMPDEST TIMESTAMP PUSH1 0xC DUP1 SLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 PUSH2 0x894 DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x97B JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH1 0xC SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 PUSH2 0x92F DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x977 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x989 DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x992 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x99C DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0D SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA20 DUP3 DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xA92 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFB PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH2 0xF59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xD83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E DUP2 PUSH1 0x40 MLOAD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP2 JUMP JUMPDEST PUSH2 0xCB9 DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0xCCC DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 PUSH1 0x9 SLOAD DUP4 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6A DUP2 PUSH2 0xD65 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 PUSH2 0xD7A PUSH2 0x100A JUMP JUMPDEST DUP4 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9A DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE11 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE82 DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEFA PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF67 SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8F DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x1006 JUMPI PUSH2 0xF9C DUP2 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xFAA DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBB SWAP3 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1023 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x104E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x1AF7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1159 JUMPI PUSH2 0x1158 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1243 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11FC JUMPI PUSH2 0x11FB PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x123C SWAP1 PUSH2 0x1B55 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x129F SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EE PUSH1 0xC DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x1329 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137B DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1397 JUMPI PUSH2 0x1396 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP5 DUP3 DUP6 ADD PUSH2 0x136C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C3 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F7 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1414 DUP2 PUSH2 0x13EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1430 JUMPI PUSH2 0x142F PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP5 DUP3 DUP6 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP2 EQ PUSH2 0x148F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A1 DUP2 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BD JUMPI PUSH2 0x14BC PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CB DUP5 DUP3 DUP6 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FF DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150F DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x151A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152C DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1568 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A8 PUSH1 0xF DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B3 DUP3 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D7 DUP2 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20706C656173652073656E64206D657469730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1614 PUSH1 0x12 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x161F DUP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1643 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1684 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x168F DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x16A6 PUSH2 0x164A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 PUSH1 0x1A DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP3 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1712 DUP2 PUSH2 0x16D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1722 DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1731 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x1759 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP2 EQ PUSH2 0x1774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1786 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1728 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EA DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17F8 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x164A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x2F DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520737570706C7920697320616C7265616479206275726E656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x1C DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191F DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x164A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1989 PUSH1 0x17 DUP4 PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DF DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x19E9 DUP2 DUP6 PUSH2 0x1948 JUMP JUMPDEST SWAP4 POP PUSH2 0x19F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B PUSH1 0x11 DUP4 PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP3 PUSH2 0x197C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A68 DUP3 DUP6 PUSH2 0x19D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP3 PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7F DUP3 DUP5 PUSH2 0x19D4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x1AB1 DUP2 DUP6 PUSH2 0x12A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEF DUP2 DUP5 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x164A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x20 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE3 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C24 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2F DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1BEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A DUP11 SWAP9 0xEE REVERT 0x24 0xB4 0xB8 DUP14 0xA9 LOG1 0xE1 RETURNDATASIZE 0xF ADDRESS 0xF PUSH28 0x6D1D6C4390631A481F9D87B6808A64736F6C63430008110033000000 ",
							"sourceMap": "264:6131:9:-:0;;;945:11;928:28;;995:14;978:31;;1082:1;1062:21;;1148:5;1126:27;;;;;;;;;;;;;;;;;;;;1238:7;1223:22;;1266:6;1251:21;;1342:440;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1455:31;371:26;1481:4;1455:10;;;:31;;:::i;:::-;1496:29;441:24;1520:4;1496:10;;;:29;;:::i;:::-;1535:33;513:28;1563:4;1535:10;;;:33;;:::i;:::-;1594:10;1578:5;;:27;;;;;;;;;;;;;;;;;;1628:5;1615:4;;:19;;;;;;;;;;;;;;;;;;1668:15;1652:31;;;;;;1708:3;1693:9;:12;1703:1;1693:12;;;;;;;;;;;:18;;;;1736:3;1721:9;:12;1731:1;1721:12;;;;;;;;;;;:18;;;;1764:3;1749:9;:12;1759:1;1749:12;;;;;;;;;;;:18;;;;1342:440;;264:6131;;7461:233:1;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;264:6131:9:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1897": {
									"entryPoint": 1727,
									"id": 1897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_105": {
									"entryPoint": 3205,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EXTEND_ICO_ROLE_1902": {
									"entryPoint": 3212,
									"id": 1902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INVESTOR_ROLE_1892": {
									"entryPoint": 3063,
									"id": 1892,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2093": {
									"entryPoint": null,
									"id": 2093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_170": {
									"entryPoint": 3417,
									"id": 170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_209": {
									"entryPoint": 3973,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_361": {
									"entryPoint": 3472,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_478": {
									"entryPoint": 3696,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_392": {
									"entryPoint": 3704,
									"id": 392,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burned_2490": {
									"entryPoint": 3040,
									"id": 2490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@buy_2160": {
									"entryPoint": 913,
									"id": 2160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@conversion_2457": {
									"entryPoint": 3281,
									"id": 2457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1785": {
									"entryPoint": 4753,
									"id": 1785,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endICO_2283": {
									"entryPoint": 2596,
									"id": 2283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_224": {
									"entryPoint": 1696,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_244": {
									"entryPoint": 2432,
									"id": 244,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_157": {
									"entryPoint": 3099,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1770": {
									"entryPoint": 3951,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@percentFromICO_2471": {
									"entryPoint": 3437,
									"id": 2471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_287": {
									"entryPoint": 2465,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_264": {
									"entryPoint": 3248,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@soldPercent_2482": {
									"entryPoint": 4106,
									"id": 2482,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_1755": {
									"entryPoint": 3929,
									"id": 1755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_138": {
									"entryPoint": 1574,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_686": {
									"entryPoint": 3311,
									"id": 686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_642": {
									"entryPoint": 4181,
									"id": 642,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_662": {
									"entryPoint": 4136,
									"id": 662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdraw_2254": {
									"entryPoint": 1763,
									"id": 2254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a": {
									"entryPoint": 4792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb": {
									"entryPoint": 5598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19390:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:11",
														"type": ""
													}
												],
												"src": "7:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:56:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:11"
																	},
																	{
																		"hexValue": "66616c6c6261636b20686974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:14:11",
																		"type": "",
																		"value": "fallback hit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:11",
														"type": ""
													}
												],
												"src": "182:162:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "572:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "577:2:11",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "513:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "678:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																	"nodeType": "YulIdentifier",
																	"src": "589:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "702:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "484:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "492:3:11",
														"type": ""
													}
												],
												"src": "350:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "915:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "903:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "969:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1129:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1003:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "995:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "888:4:11",
														"type": ""
													}
												],
												"src": "722:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1187:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1197:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1207:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1180:6:11",
														"type": ""
													}
												],
												"src": "1147:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1327:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1228:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1351:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1528:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1543:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1528:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1510:7:11",
														"type": ""
													}
												],
												"src": "1474:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1736:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1739:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1729:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1718:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "1701:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1701:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1691:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:42:11"
															},
															"nodeType": "YulIf",
															"src": "1681:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:11",
														"type": ""
													}
												],
												"src": "1629:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1806:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1816:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1838:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1825:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1816:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1880:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1854:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1854:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1784:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1792:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1800:5:11",
														"type": ""
													}
												],
												"src": "1755:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1963:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2009:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2011:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1984:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1993:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1976:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:32:11"
															},
															"nodeType": "YulIf",
															"src": "1973:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2102:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2117:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2121:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2146:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2180:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2191:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2200:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2156:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2146:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1933:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1944:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1956:6:11",
														"type": ""
													}
												],
												"src": "1898:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2283:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2308:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2301:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2283:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2255:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2265:7:11",
														"type": ""
													}
												],
												"src": "2231:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2423:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2408:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2374:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2381:3:11",
														"type": ""
													}
												],
												"src": "2327:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2534:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2544:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2556:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2567:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2552:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2544:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2618:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2631:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2642:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2580:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2506:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2518:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2529:4:11",
														"type": ""
													}
												],
												"src": "2442:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2713:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2724:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2713:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2685:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2695:7:11",
														"type": ""
													}
												],
												"src": "2658:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2841:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2814:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2814:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2804:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2804:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:43:11"
															},
															"nodeType": "YulIf",
															"src": "2794:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2777:5:11",
														"type": ""
													}
												],
												"src": "2741:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2940:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2931:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2996:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2969:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2899:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2907:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2915:5:11",
														"type": ""
													}
												],
												"src": "2869:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3126:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3128:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3128:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3097:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:32:11"
															},
															"nodeType": "YulIf",
															"src": "3090:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3219:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3234:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3238:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3263:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3309:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3318:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3273:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3263:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3050:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3061:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:11",
														"type": ""
													}
												],
												"src": "3014:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3454:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3436:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3409:3:11",
														"type": ""
													}
												],
												"src": "3349:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3571:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3581:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3589:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3581:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3661:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3670:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3617:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3543:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3555:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3566:4:11",
														"type": ""
													}
												],
												"src": "3473:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3756:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3767:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3738:7:11",
														"type": ""
													}
												],
												"src": "3701:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3827:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3884:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3850:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3875:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3857:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3857:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3847:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:43:11"
															},
															"nodeType": "YulIf",
															"src": "3837:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3820:5:11",
														"type": ""
													}
												],
												"src": "3784:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3983:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3974:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4039:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4012:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3942:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3958:5:11",
														"type": ""
													}
												],
												"src": "3912:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4169:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4171:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4171:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4171:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4144:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4136:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:32:11"
															},
															"nodeType": "YulIf",
															"src": "4133:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4262:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4277:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4281:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4306:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4341:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4352:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4361:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4316:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4306:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4093:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4104:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4116:6:11",
														"type": ""
													}
												],
												"src": "4057:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4437:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4447:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4462:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4447:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4419:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4429:7:11",
														"type": ""
													}
												],
												"src": "4392:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4569:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4579:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4608:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4590:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4579:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4551:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4561:7:11",
														"type": ""
													}
												],
												"src": "4524:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4726:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4735:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4728:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4728:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4692:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4717:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4699:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4699:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:43:11"
															},
															"nodeType": "YulIf",
															"src": "4679:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4662:5:11",
														"type": ""
													}
												],
												"src": "4626:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4806:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4816:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4838:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4825:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4816:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4854:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4784:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4792:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4800:5:11",
														"type": ""
													}
												],
												"src": "4754:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5028:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5030:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5030:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5030:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:32:11"
															},
															"nodeType": "YulIf",
															"src": "4992:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5121:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5136:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5140:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5165:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5200:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5211:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5196:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5196:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5220:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5175:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5165:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5248:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5263:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5267:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5293:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5328:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5339:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5324:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5324:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5303:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5303:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5293:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:11",
														"type": ""
													}
												],
												"src": "4899:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5485:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:14:11"
																	},
																	{
																		"hexValue": "49434f206973206f766572203a2820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5519:17:11",
																		"type": "",
																		"value": "ICO is over :( "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:41:11"
														}
													]
												},
												"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5477:6:11",
														"type": ""
													}
												],
												"src": "5379:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5704:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5718:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:11",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5725:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5894:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																	"nodeType": "YulIdentifier",
																	"src": "5805:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5922:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5692:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5700:3:11",
														"type": ""
													}
												],
												"src": "5558:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6121:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6135:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6197:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6205:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6211:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6201:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6235:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6369:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6243:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6235:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6101:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:11",
														"type": ""
													}
												],
												"src": "5950:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6501:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6527:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6535:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:14:11"
																	},
																	{
																		"hexValue": "20706c656173652073656e64206d65746973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6539:20:11",
																		"type": "",
																		"value": " please send metis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6493:6:11",
														"type": ""
													}
												],
												"src": "6395:176:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6727:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6741:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6807:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6812:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6748:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6741:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb",
																	"nodeType": "YulIdentifier",
																	"src": "6828:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6945:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6941:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6934:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6715:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6723:3:11",
														"type": ""
													}
												],
												"src": "6581:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7144:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7158:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7170:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7181:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7166:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7166:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7158:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7209:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7228:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7198:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7198:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7258:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7392:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7266:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7258:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7124:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7139:4:11",
														"type": ""
													}
												],
												"src": "6973:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7446:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7467:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7470:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7460:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7460:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7568:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7561:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7561:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7596:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7599:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7418:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7668:167:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7682:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7705:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7687:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7687:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7682:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7743:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7725:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7720:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7758:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7769:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7772:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7765:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7758:3:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7802:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7804:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7804:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7804:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7794:1:11"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7797:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7791:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7791:10:11"
															},
															"nodeType": "YulIf",
															"src": "7788:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7655:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7658:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7664:3:11",
														"type": ""
													}
												],
												"src": "7624:211:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7951:78:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7977:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7985:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:14:11"
																	},
																	{
																		"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7989:28:11",
																		"type": "",
																		"value": "exceeds the total for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7943:6:11",
														"type": ""
													}
												],
												"src": "7845:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8185:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8199:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8265:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8270:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8206:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8199:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8375:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																	"nodeType": "YulIdentifier",
																	"src": "8286:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8286:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8286:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8392:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8403:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8408:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8392:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8173:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8181:3:11",
														"type": ""
													}
												],
												"src": "8039:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8602:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8616:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8628:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8639:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8624:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8616:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8667:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8678:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8663:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8663:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8686:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8692:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8682:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8682:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8656:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8716:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8850:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8724:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8716:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8582:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:11",
														"type": ""
													}
												],
												"src": "8431:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8941:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8962:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8985:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8967:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8967:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8955:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8955:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8955:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8929:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8936:3:11",
														"type": ""
													}
												],
												"src": "8876:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9077:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9098:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9121:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9103:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9103:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9091:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9091:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9065:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9072:3:11",
														"type": ""
													}
												],
												"src": "9012:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9274:222:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9288:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9300:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9311:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9296:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9296:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9288:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9372:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9385:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9396:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9381:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9328:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9328:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9328:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9457:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9470:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9481:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9466:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9413:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9238:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9250:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9258:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9269:4:11",
														"type": ""
													}
												],
												"src": "9148:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:84:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9604:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9613:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9616:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9606:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9606:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9606:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9573:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9595:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9580:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9580:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9570:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9570:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9563:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9563:40:11"
															},
															"nodeType": "YulIf",
															"src": "9560:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9539:5:11",
														"type": ""
													}
												],
												"src": "9506:124:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9700:89:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9714:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9729:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9723:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9714:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9773:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9749:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9678:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9686:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9694:5:11",
														"type": ""
													}
												],
												"src": "9640:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9873:295:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9923:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9925:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9925:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9925:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9898:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9907:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9894:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9894:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9919:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9890:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:32:11"
															},
															"nodeType": "YulIf",
															"src": "9887:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "10020:137:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10039:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10053:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10043:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10072:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10115:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10126:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10111:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10111:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10135:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10082:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10082:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10072:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9843:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9854:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9866:6:11",
														"type": ""
													}
												],
												"src": "9799:369:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10276:136:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10290:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10302:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10313:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10298:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10290:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10374:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10398:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10330:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10330:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10248:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10260:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10271:4:11",
														"type": ""
													}
												],
												"src": "10178:234:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10470:410:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10484:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10507:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10489:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10489:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10484:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10522:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10545:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10527:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10527:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10522:1:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10560:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10583:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10586:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10579:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10564:11:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10601:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10630:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10612:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10612:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10601:7:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10847:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10849:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10849:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10849:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10768:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10761:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10761:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10795:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10802:7:11"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10811:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10798:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10798:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10792:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10792:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10737:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10737:95:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:133:11"
															},
															"nodeType": "YulIf",
															"src": "10710:159:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10453:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10456:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10462:7:11",
														"type": ""
													}
												],
												"src": "10422:458:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10996:140:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11022:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11030:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11018:14:11"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11034:34:11",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11011:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11011:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11094:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11102:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11090:15:11"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11107:17:11",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:42:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11083:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10988:6:11",
														"type": ""
													}
												],
												"src": "10890:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11292:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11306:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11372:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11377:2:11",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11313:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11306:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11482:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "11393:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11393:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11393:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11499:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11510:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11515:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11506:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11499:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11280:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11288:3:11",
														"type": ""
													}
												],
												"src": "11146:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11709:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11723:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11735:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11746:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11731:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11723:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11793:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11799:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11823:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11957:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11831:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11831:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11823:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11689:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11704:4:11",
														"type": ""
													}
												],
												"src": "11538:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12089:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12115:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12123:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12111:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12111:14:11"
																	},
																	{
																		"hexValue": "74686520737570706c7920697320616c7265616479206275726e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12127:30:11",
																		"type": "",
																		"value": "the supply is already burned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12104:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12104:54:11"
														}
													]
												},
												"name": "store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12081:6:11",
														"type": ""
													}
												],
												"src": "11983:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12325:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12339:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12405:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12410:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12346:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12346:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12339:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12515:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																	"nodeType": "YulIdentifier",
																	"src": "12426:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12426:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12426:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12532:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12548:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12539:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12532:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12313:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12321:3:11",
														"type": ""
													}
												],
												"src": "12179:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12742:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12756:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12768:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12779:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12764:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12764:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12756:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12807:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12818:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12803:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12826:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12832:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12822:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12796:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12796:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12856:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12990:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12864:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12864:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12856:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12722:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12737:4:11",
														"type": ""
													}
												],
												"src": "12571:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13061:169:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13075:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13098:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13080:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13080:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13075:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13113:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13136:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13118:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13113:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13151:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13163:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13166:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13159:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13159:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13151:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13197:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13199:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13199:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13199:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13188:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13194:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13185:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:11:11"
															},
															"nodeType": "YulIf",
															"src": "13182:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13047:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13050:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13056:4:11",
														"type": ""
													}
												],
												"src": "13016:214:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13354:42:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13368:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13383:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13368:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13326:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13331:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13342:11:11",
														"type": ""
													}
												],
												"src": "13240:156:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13512:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13538:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13546:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13534:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13534:14:11"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13550:25:11",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13527:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13527:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13504:6:11",
														"type": ""
													}
												],
												"src": "13406:181:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13761:254:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13775:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13859:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13864:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13782:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13782:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13775:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13969:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "13880:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13880:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13880:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13986:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13997:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14002:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13993:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13993:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13986:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13749:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13757:3:11",
														"type": ""
													}
												],
												"src": "13597:418:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14084:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14099:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14115:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14109:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14109:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14099:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14067:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14077:6:11",
														"type": ""
													}
												],
												"src": "14025:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14204:212:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14218:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14227:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14222:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14295:71:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14324:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14329:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14320:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14320:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14343:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14348:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14339:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14339:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14333:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14333:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14313:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14313:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14313:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14252:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14255:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14249:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14249:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14263:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14265:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14274:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14277:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14270:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14270:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14265:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14245:3:11",
																"statements": []
															},
															"src": "14241:125:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14390:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14395:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14386:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14386:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14404:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14379:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14379:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14379:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14186:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14191:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14196:6:11",
														"type": ""
													}
												],
												"src": "14142:274:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14536:300:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14550:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14597:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14564:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14564:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14554:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14616:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14700:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14705:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14623:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14616:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14764:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14771:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14760:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14760:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14778:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14783:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14725:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14725:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14725:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14803:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14814:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14819:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14810:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14810:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14803:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14517:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14524:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14532:3:11",
														"type": ""
													}
												],
												"src": "14426:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14952:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14978:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14986:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14974:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14974:14:11"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14990:19:11",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14967:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14967:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14944:6:11",
														"type": ""
													}
												],
												"src": "14846:175:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15195:254:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15209:92:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15293:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15298:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15216:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15216:85:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15209:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15403:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "15314:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15314:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15314:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15420:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15431:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15427:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15420:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15183:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15191:3:11",
														"type": ""
													}
												],
												"src": "15031:418:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15845:605:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15860:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16011:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15867:142:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15860:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16029:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16118:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16127:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16036:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16036:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16029:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16145:155:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16296:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16152:142:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16152:148:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16145:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16314:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16403:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16412:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16321:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16321:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16314:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16430:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16437:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16430:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15816:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15822:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15830:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15841:3:11",
														"type": ""
													}
												],
												"src": "15459:991:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16508:62:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16522:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16540:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16547:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16536:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16536:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16556:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16552:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16552:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16532:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16532:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16522:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16491:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16501:6:11",
														"type": ""
													}
												],
												"src": "16460:110:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16672:305:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16686:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16733:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16700:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16700:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16690:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16752:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16818:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16823:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16759:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16759:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16882:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16889:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16878:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16878:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16896:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16901:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16843:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16843:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16843:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16921:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16932:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16959:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16937:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16937:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16928:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16928:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16921:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16653:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16660:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16668:3:11",
														"type": ""
													}
												],
												"src": "16580:397:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17105:211:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17119:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17131:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17142:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17127:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17127:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17119:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17170:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17181:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17166:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17166:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17189:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17195:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17185:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17159:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17159:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17219:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17291:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17300:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17227:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17227:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17219:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17077:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17089:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17100:4:11",
														"type": ""
													}
												],
												"src": "16987:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17354:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17375:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17378:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17368:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17368:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17368:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17476:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17479:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17469:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17469:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17469:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17504:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17507:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17497:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17497:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17497:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17326:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17560:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17581:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17584:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17574:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17574:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17574:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17682:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17685:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17675:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17675:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17675:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17710:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17713:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17703:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17703:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17703:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17532:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17781:144:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17795:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17822:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17804:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17804:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17795:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17860:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17862:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17862:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17862:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17847:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17854:4:11",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17844:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17844:15:11"
															},
															"nodeType": "YulIf",
															"src": "17841:41:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17895:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17906:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17913:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17902:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17902:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17895:3:11"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17767:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17777:3:11",
														"type": ""
													}
												],
												"src": "17738:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18041:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18067:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18075:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18063:14:11"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18079:34:11",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18056:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18056:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18056:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18033:6:11",
														"type": ""
													}
												],
												"src": "17935:190:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18281:236:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18295:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18361:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18366:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18302:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18302:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18295:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18471:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "18382:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18382:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18382:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18488:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18499:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18504:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18495:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18495:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18488:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18269:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18277:3:11",
														"type": ""
													}
												],
												"src": "18135:382:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18698:264:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18712:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18724:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18735:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18720:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18720:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18712:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18763:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18774:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18759:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18759:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18782:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18788:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18778:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18778:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18752:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18752:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18752:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18812:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18946:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18820:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18820:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18812:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18678:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18693:4:11",
														"type": ""
													}
												],
												"src": "18527:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19000:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19021:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19024:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19014:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19014:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19014:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19122:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19125:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19115:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19115:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19115:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19150:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19153:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19143:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19143:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19143:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18972:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19220:163:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19234:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19257:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19239:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19239:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19234:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19272:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19295:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19277:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19277:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19272:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19323:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19325:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19325:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19325:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19320:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19313:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19313:9:11"
															},
															"nodeType": "YulIf",
															"src": "19310:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19359:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19368:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19371:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19364:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19364:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19359:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19209:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19212:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19218:1:11",
														"type": ""
													}
												],
												"src": "19178:205:11"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(memPtr) {\n\n        mstore(add(memPtr, 0), \"fallback hit\")\n\n    }\n\n    function abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO is over :( \")\n\n        }\n\n        function abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n            store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function store_literal_in_memory_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb(memPtr) {\n\n            mstore(add(memPtr, 0), \" please send metis\")\n\n        }\n\n        function abi_encode_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n            store_literal_in_memory_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function panic_error_0x11() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n\n        function checked_add_t_uint256(x, y) -> sum {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            sum := add(x, y)\n\n            if gt(x, sum) { panic_error_0x11() }\n\n        }\n\n        function store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(memPtr) {\n\n            mstore(add(memPtr, 0), \"exceeds the total for sale\")\n\n        }\n\n        function abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n            store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n            mstore(pos, cleanup_t_address(value))\n        }\n\n        function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n            mstore(pos, cleanup_t_uint256(value))\n        }\n\n        function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        }\n\n        function validator_revert_t_bool(value) {\n            if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n        }\n\n        function abi_decode_t_bool_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_bool(value)\n        }\n\n        function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        }\n\n        function checked_mul_t_uint256(x, y) -> product {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            let product_raw := mul(x, y)\n            product := cleanup_t_uint256(product_raw)\n\n            // overflow, if x != 0 and y != product/x\n            if iszero(\n                or(\n                    iszero(x),\n                    eq(y, div(product, x))\n                )\n            ) { panic_error_0x11() }\n\n        }\n\n        function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n            mstore(add(memPtr, 32), \" roles for self\")\n\n        }\n\n        function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n            store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n            end := add(pos, 64)\n        }\n\n        function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709(memPtr) {\n\n            mstore(add(memPtr, 0), \"the supply is already burned\")\n\n        }\n\n        function abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n            store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function checked_sub_t_uint256(x, y) -> diff {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            diff := sub(x, y)\n\n            if gt(diff, x) { panic_error_0x11() }\n\n        }\n\n        function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n            updated_pos := pos\n        }\n\n        function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: account \")\n\n        }\n\n        function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n            store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n            end := add(pos, 23)\n        }\n\n        function array_length_t_string_memory_ptr(value) -> length {\n\n            length := mload(value)\n\n        }\n\n        function copy_memory_to_memory_with_cleanup(src, dst, length) {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, length)\n        }\n\n        function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n            mstore(add(memPtr, 0), \" is missing role \")\n\n        }\n\n        function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n            store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n            end := add(pos, 17)\n        }\n\n        function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n            pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n            pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n            end := pos\n        }\n\n        function round_up_to_mul_of_32(value) -> result {\n            result := and(add(value, 31), not(31))\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, round_up_to_mul_of_32(length))\n        }\n\n        function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        }\n\n        function panic_error_0x41() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n\n        function panic_error_0x32() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x32)\n            revert(0, 0x24)\n        }\n\n        function decrement_t_uint256(value) -> ret {\n            value := cleanup_t_uint256(value)\n            if eq(value, 0x00) { panic_error_0x11() }\n            ret := sub(value, 1)\n        }\n\n        function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n            mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n        }\n\n        function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n            store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function panic_error_0x12() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n\n        function checked_div_t_uint256(x, y) -> r {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            if iszero(y) { panic_error_0x12() }\n\n            r := div(x, y)\n        }\n\n    }\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1952": [
									{
										"length": 32,
										"start": 1823
									},
									{
										"length": 32,
										"start": 2138
									},
									{
										"length": 32,
										"start": 2293
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100e15760003560e01c806373f425611161007f578063a217fddf11610059578063a217fddf146102f4578063a6f2ae3a1461031f578063b1ac51f81461033d578063d547741f1461036857610125565b806373f425611461026157806376082a5e1461028c57806391d14854146102b757610125565b80632e1a7d4d116100bb5780632e1a7d4d146101cf5780632f2ff15d146101f857806336568abe146102215780634f2484091461024a57610125565b806301ffc9a71461012a578063248a9ca314610167578063282c51f3146101a457610125565b36610125577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161011390611304565b60405180910390a1610123610391565b005b600080fd5b34801561013657600080fd5b50610151600480360381019061014c9190611381565b610626565b60405161015e91906113c9565b60405180910390f35b34801561017357600080fd5b5061018e6004803603810190610189919061141a565b6106a0565b60405161019b9190611456565b60405180910390f35b3480156101b057600080fd5b506101b96106bf565b6040516101c69190611456565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f191906114a7565b6106e3565b005b34801561020457600080fd5b5061021f600480360381019061021a9190611532565b610980565b005b34801561022d57600080fd5b5061024860048036038101906102439190611532565b6109a1565b005b34801561025657600080fd5b5061025f610a24565b005b34801561026d57600080fd5b50610276610be0565b60405161028391906113c9565b60405180910390f35b34801561029857600080fd5b506102a1610bf7565b6040516102ae9190611456565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d99190611532565b610c1b565b6040516102eb91906113c9565b60405180910390f35b34801561030057600080fd5b50610309610c85565b6040516103169190611456565b60405180910390f35b610327610391565b60405161033491906113c9565b60405180910390f35b34801561034957600080fd5b50610352610c8c565b60405161035f9190611456565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a9190611532565b610cb0565b005b600060045442106103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906115be565b60405180910390fd5b6000341161041a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104119061162a565b60405180910390fd5b600061042534610cd1565b9050600654600854826104389190611679565b10610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906116f9565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016104d5929190611737565b6020604051808303816000875af11580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610518919061178c565b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610576929190611737565b6020604051808303816000875af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b9919061178c565b50600854816105c89190611679565b60088190555034600760008282546105e09190611679565b925050819055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb35205439957278160405161061691906117b9565b60405180910390a1600191505090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610699575061069882610cef565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773861070d81610d59565b426012600c5461071d91906117d4565b7f00000000000000000000000000000000000000000000000000000000000000006107489190611679565b111561084957600061075983610d6d565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016107b8929190611737565b6020604051808303816000875af11580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb919061178c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610842573d6000803e3d6000fd5b505061097c565b42600c805461085891906117d4565b7f00000000000000000000000000000000000000000000000000000000000000006108839190611679565b11156108e357600061089483610d6d565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108dc573d6000803e3d6000fd5b505061097b565b426006600c546108f391906117d4565b7f000000000000000000000000000000000000000000000000000000000000000061091e9190611679565b111561097a57600061092f83610d6d565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610977573d6000803e3d6000fd5b50505b5b5b5050565b610989826106a0565b61099281610d59565b61099c8383610d90565b505050565b6109a9610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611888565b60405180910390fd5b610a208282610e78565b5050565b6004544210610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f906115be565b60405180910390fd5b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610a9281610d59565b600b60009054906101000a900460ff1615610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad9906118f4565b60405180910390fd5b6000610afb600854600654610f5990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610b5891906117b9565b600060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e81604051610bb991906117b9565b60405180910390a1506001600b60006101000a81548160ff02191690831515021790555050565b6000600b60009054906101000a900460ff16905090565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773881565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b7f305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb328981565b610cb9826106a0565b610cc281610d59565b610ccc8383610e78565b505050565b6000610ce860095483610f6f90919063ffffffff16565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d6a81610d65610e70565b610f85565b50565b6000610d89610d7a61100a565b83610f6f90919063ffffffff16565b9050919050565b610d9a8282610c1b565b610e6c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e11610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610e828282610c1b565b15610f5557600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610efa610e70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610f679190611914565b905092915050565b60008183610f7d91906117d4565b905092915050565b610f8f8282610c1b565b61100657610f9c81611028565b610faa8360001c6020611055565b604051602001610fbb929190611a51565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd9190611ad5565b60405180910390fd5b5050565b600061102360065460085461129190919063ffffffff16565b905090565b606061104e8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611055565b9050919050565b60606000600283600261106891906117d4565b6110729190611679565b67ffffffffffffffff81111561108b5761108a611af7565b5b6040519080825280601f01601f1916602001820160405280156110bd5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110f5576110f4611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061115957611158611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261119991906117d4565b6111a39190611679565b90505b6001811115611243577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106111e5576111e4611b26565b5b1a60f81b8282815181106111fc576111fb611b26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061123c90611b55565b90506111a6565b5060008414611287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127e90611bca565b60405180910390fd5b8091505092915050565b6000818361129f9190611c19565b905092915050565b600082825260208201905092915050565b7f66616c6c6261636b206869740000000000000000000000000000000000000000600082015250565b60006112ee600c836112a7565b91506112f9826112b8565b602082019050919050565b6000602082019050818103600083015261131d816112e1565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61135e81611329565b811461136957600080fd5b50565b60008135905061137b81611355565b92915050565b60006020828403121561139757611396611324565b5b60006113a58482850161136c565b91505092915050565b60008115159050919050565b6113c3816113ae565b82525050565b60006020820190506113de60008301846113ba565b92915050565b6000819050919050565b6113f7816113e4565b811461140257600080fd5b50565b600081359050611414816113ee565b92915050565b6000602082840312156114305761142f611324565b5b600061143e84828501611405565b91505092915050565b611450816113e4565b82525050565b600060208201905061146b6000830184611447565b92915050565b6000819050919050565b61148481611471565b811461148f57600080fd5b50565b6000813590506114a18161147b565b92915050565b6000602082840312156114bd576114bc611324565b5b60006114cb84828501611492565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114ff826114d4565b9050919050565b61150f816114f4565b811461151a57600080fd5b50565b60008135905061152c81611506565b92915050565b6000806040838503121561154957611548611324565b5b600061155785828601611405565b92505060206115688582860161151d565b9150509250929050565b7f49434f206973206f766572203a28200000000000000000000000000000000000600082015250565b60006115a8600f836112a7565b91506115b382611572565b602082019050919050565b600060208201905081810360008301526115d78161159b565b9050919050565b7f20706c656173652073656e64206d657469730000000000000000000000000000600082015250565b60006116146012836112a7565b915061161f826115de565b602082019050919050565b6000602082019050818103600083015261164381611607565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061168482611471565b915061168f83611471565b92508282019050808211156116a7576116a661164a565b5b92915050565b7f657863656564732074686520746f74616c20666f722073616c65000000000000600082015250565b60006116e3601a836112a7565b91506116ee826116ad565b602082019050919050565b60006020820190508181036000830152611712816116d6565b9050919050565b611722816114f4565b82525050565b61173181611471565b82525050565b600060408201905061174c6000830185611719565b6117596020830184611728565b9392505050565b611769816113ae565b811461177457600080fd5b50565b60008151905061178681611760565b92915050565b6000602082840312156117a2576117a1611324565b5b60006117b084828501611777565b91505092915050565b60006020820190506117ce6000830184611728565b92915050565b60006117df82611471565b91506117ea83611471565b92508282026117f881611471565b9150828204841483151761180f5761180e61164a565b5b5092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611872602f836112a7565b915061187d82611816565b604082019050919050565b600060208201905081810360008301526118a181611865565b9050919050565b7f74686520737570706c7920697320616c7265616479206275726e656400000000600082015250565b60006118de601c836112a7565b91506118e9826118a8565b602082019050919050565b6000602082019050818103600083015261190d816118d1565b9050919050565b600061191f82611471565b915061192a83611471565b92508282039050818111156119425761194161164a565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611989601783611948565b915061199482611953565b601782019050919050565b600081519050919050565b60005b838110156119c85780820151818401526020810190506119ad565b60008484015250505050565b60006119df8261199f565b6119e98185611948565b93506119f98185602086016119aa565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611a3b601183611948565b9150611a4682611a05565b601182019050919050565b6000611a5c8261197c565b9150611a6882856119d4565b9150611a7382611a2e565b9150611a7f82846119d4565b91508190509392505050565b6000601f19601f8301169050919050565b6000611aa78261199f565b611ab181856112a7565b9350611ac18185602086016119aa565b611aca81611a8b565b840191505092915050565b60006020820190508181036000830152611aef8184611a9c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b6082611471565b915060008203611b7357611b7261164a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611bb46020836112a7565b9150611bbf82611b7e565b602082019050919050565b60006020820190508181036000830152611be381611ba7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c2482611471565b9150611c2f83611471565b925082611c3f57611c3e611bea565b5b82820490509291505056fea2646970667358221220814a8a98eefd24b4b88da9a1e13d0f300f7b6d1d6c4390631a481f9d87b6808a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F42561 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB1AC51F8 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x368 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x73F42561 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B7 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x24A JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1A4 JUMPI PUSH2 0x125 JUMP JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x113 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x123 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x425 CALLVALUE PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST LT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x8 SLOAD DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x699 JUMPI POP PUSH2 0x698 DUP3 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x70D DUP2 PUSH2 0xD59 JUMP JUMPDEST TIMESTAMP PUSH1 0x12 PUSH1 0xC SLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x0 PUSH2 0x759 DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x97C JUMP JUMPDEST TIMESTAMP PUSH1 0xC DUP1 SLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 PUSH2 0x894 DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x97B JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH1 0xC SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST GT ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 PUSH2 0x92F DUP4 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x977 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x989 DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x992 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x99C DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0D SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA20 DUP3 DUP3 PUSH2 0xE78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xA92 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFB PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH2 0xF59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xD83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E DUP2 PUSH1 0x40 MLOAD PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP2 JUMP JUMPDEST PUSH2 0xCB9 DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0xCCC DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 PUSH1 0x9 SLOAD DUP4 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6A DUP2 PUSH2 0xD65 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 PUSH2 0xD7A PUSH2 0x100A JUMP JUMPDEST DUP4 PUSH2 0xF6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9A DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE11 PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE82 DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEFA PUSH2 0xE70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF67 SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8F DUP3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x1006 JUMPI PUSH2 0xF9C DUP2 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xFAA DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFBB SWAP3 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1023 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x104E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108B JUMPI PUSH2 0x108A PUSH2 0x1AF7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1159 JUMPI PUSH2 0x1158 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1243 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11FC JUMPI PUSH2 0x11FB PUSH2 0x1B26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x123C SWAP1 PUSH2 0x1B55 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A6 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x129F SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EE PUSH1 0xC DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x1329 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137B DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1397 JUMPI PUSH2 0x1396 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP5 DUP3 DUP6 ADD PUSH2 0x136C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C3 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F7 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1414 DUP2 PUSH2 0x13EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1430 JUMPI PUSH2 0x142F PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP5 DUP3 DUP6 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP2 EQ PUSH2 0x148F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A1 DUP2 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BD JUMPI PUSH2 0x14BC PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CB DUP5 DUP3 DUP6 ADD PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FF DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150F DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x151A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152C DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP6 DUP3 DUP7 ADD PUSH2 0x1405 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1568 DUP6 DUP3 DUP7 ADD PUSH2 0x151D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A8 PUSH1 0xF DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B3 DUP3 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D7 DUP2 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x20706C656173652073656E64206D657469730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1614 PUSH1 0x12 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x161F DUP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1643 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1684 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x168F DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16A7 JUMPI PUSH2 0x16A6 PUSH2 0x164A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 PUSH1 0x1A DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP3 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1712 DUP2 PUSH2 0x16D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1722 DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1731 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x174C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x1759 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x13AE JUMP JUMPDEST DUP2 EQ PUSH2 0x1774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1786 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH2 0x17A1 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1728 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EA DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17F8 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x164A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x2F DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520737570706C7920697320616C7265616479206275726E656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x1C DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x190D DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191F DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x164A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1989 PUSH1 0x17 DUP4 PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DF DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x19E9 DUP2 DUP6 PUSH2 0x1948 JUMP JUMPDEST SWAP4 POP PUSH2 0x19F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B PUSH1 0x11 DUP4 PUSH2 0x1948 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP3 PUSH2 0x197C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A68 DUP3 DUP6 PUSH2 0x19D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP3 PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7F DUP3 DUP5 PUSH2 0x19D4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 DUP3 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x1AB1 DUP2 DUP6 PUSH2 0x12A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x1ACA DUP2 PUSH2 0x1A8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEF DUP2 DUP5 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x164A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x20 DUP4 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE3 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C24 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2F DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1BEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A DUP11 SWAP9 0xEE REVERT 0x24 0xB4 0xB8 DUP14 0xA9 LOG1 0xE1 RETURNDATASIZE 0xF ADDRESS 0xF PUSH28 0x6D1D6C4390631A481F9D87B6808A64736F6C63430008110033000000 ",
							"sourceMap": "264:6131:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:19;;;;;;:::i;:::-;;;;;;;;2467:5;:3;:5::i;:::-;;264:6131;;;;2606:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;403:62:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2957:694;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4803:145:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3657:186:9;;;;;;;;;;;;;:::i;:::-;;6320:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2486:465:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;471:70;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:147:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2486:465:9;2535:4;1922:8;;1904:15;:26;1896:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2570:1:::1;2558:9;:13;2550:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2603:17;2623:21;2634:9;2623:10;:21::i;:::-;2603:41;;2686:6;;2675:8;;2663:9;:20;;;;:::i;:::-;:29;2655:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2733:4;;;;;;;;;;;:12;;;2755:4;2762:9;2733:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2782:4;;;;;;;;;;;:13;;;2796:10;2808:9;2782:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2851:8;;2839:9;:20;;;;:::i;:::-;2828:8;:31;;;;2884:9;2869:11;;:24;;;;;;;:::i;:::-;;;;;;;;2908:15;2913:9;2908:15;;;;;;:::i;:::-;;;;;;;;2940:4;2933:11;;;2486:465:::0;:::o;2606:202:1:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;403:62:9:-;441:24;403:62;:::o;2957:694::-;371:26;2505:16:1;2516:4;2505:10;:16::i;:::-;3074:15:9::1;3069:2;3061:5;;:10;;;;:::i;:::-;3045:13;:26;;;;:::i;:::-;:44;3040:596;;;3104:21;3127;3142:5;3127:14;:21::i;:::-;3104:44;;3162:4;;;;;;;;;;;:12;;;3184:4;3191:13;3162:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3227:10;3219:28;;:43;3248:13;3219:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3090:183;3040:596;;;3313:15;3308:2;3300:5:::0;::::1;:10;;;;:::i;:::-;3284:13;:26;;;;:::i;:::-;:44;3279:357;;;3343:21;3366;3381:5;3366:14;:21::i;:::-;3343:44;;3409:10;3401:28;;:43;3430:13;3401:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3329:126;3279:357;;;3494:15;3490:1;3482:5;;:9;;;;:::i;:::-;3466:13;:25;;;;:::i;:::-;:43;3461:175;;;3524:21;3547;3562:5;3547:14;:21::i;:::-;3524:44;;3590:10;3582:28;;:43;3611:13;3582:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3510:126;3461:175;3279:357;3040:596;2957:694:::0;;:::o;4803:145:1:-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;3657:186:9:-;1922:8;;1904:15;:26;1896:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;441:24:::1;2505:16:1;2516:4;2505:10;:16::i;:::-;2013:6:9::2;;;;;;;;;;;2012:7;2004:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3735:16:::3;3755:20;3766:8;;3755:6;;:10;;:20;;;;:::i;:::-;3735:41;;3786:4;;;;;;;;;;;:9;;;3796:8;3786:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;3820:16;3827:8;3820:16;;;;;;:::i;:::-;;;;;;;;3725:118;2081:4:::2;2072:6;;:13;;;;;;;;;;;;;;;;;;1959:1:::1;3657:186::o:0;6320:73::-;6358:4;6380:6;;;;;;;;;;;6373:13;;6320:73;:::o;331:66::-;371:26;331:66;:::o;2895:145:1:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;471:70:9:-;513:28;471:70;:::o;5228:147:1:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;5981:110:9:-;6037:7;6062:21;6072:10;;6062:5;:9;;:21;;;;:::i;:::-;6055:29;;5981:110;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:1:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;6097:116:9:-;6157:7;6182:24;6192:13;:11;:13::i;:::-;6182:5;:9;;:24;;;;:::i;:::-;6175:31;;6097:116;;;:::o;7461:233:1:-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7865:234:1:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3718:479:1:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;6219:96:9:-;6263:7;6288:20;6301:6;;6288:8;;:12;;:20;;;;:::i;:::-;6281:27;;6219:96;:::o;2102:149:4:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;3850:96:8:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:169:11:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:162::-;322:14;318:1;310:6;306:14;299:38;182:162;:::o;350:366::-;492:3;513:67;577:2;572:3;513:67;:::i;:::-;506:74;;589:93;678:3;589:93;:::i;:::-;707:2;702:3;698:12;691:19;;350:366;;;:::o;722:419::-;888:4;926:2;915:9;911:18;903:26;;975:9;969:4;965:20;961:1;950:9;946:17;939:47;1003:131;1129:4;1003:131;:::i;:::-;995:139;;722:419;;;:::o;1228:117::-;1337:1;1334;1327:12;1474:149;1510:7;1550:66;1543:5;1539:78;1528:89;;1474:149;;;:::o;1629:120::-;1701:23;1718:5;1701:23;:::i;:::-;1694:5;1691:34;1681:62;;1739:1;1736;1729:12;1681:62;1629:120;:::o;1755:137::-;1800:5;1838:6;1825:20;1816:29;;1854:32;1880:5;1854:32;:::i;:::-;1755:137;;;;:::o;1898:327::-;1956:6;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2131:1;2156:52;2200:7;2191:6;2180:9;2176:22;2156:52;:::i;:::-;2146:62;;2102:116;1898:327;;;;:::o;2231:90::-;2265:7;2308:5;2301:13;2294:21;2283:32;;2231:90;;;:::o;2327:109::-;2408:21;2423:5;2408:21;:::i;:::-;2403:3;2396:34;2327:109;;:::o;2442:210::-;2529:4;2567:2;2556:9;2552:18;2544:26;;2580:65;2642:1;2631:9;2627:17;2618:6;2580:65;:::i;:::-;2442:210;;;;:::o;2658:77::-;2695:7;2724:5;2713:16;;2658:77;;;:::o;2741:122::-;2814:24;2832:5;2814:24;:::i;:::-;2807:5;2804:35;2794:63;;2853:1;2850;2843:12;2794:63;2741:122;:::o;2869:139::-;2915:5;2953:6;2940:20;2931:29;;2969:33;2996:5;2969:33;:::i;:::-;2869:139;;;;:::o;3014:329::-;3073:6;3122:2;3110:9;3101:7;3097:23;3093:32;3090:119;;;3128:79;;:::i;:::-;3090:119;3248:1;3273:53;3318:7;3309:6;3298:9;3294:22;3273:53;:::i;:::-;3263:63;;3219:117;3014:329;;;;:::o;3349:118::-;3436:24;3454:5;3436:24;:::i;:::-;3431:3;3424:37;3349:118;;:::o;3473:222::-;3566:4;3604:2;3593:9;3589:18;3581:26;;3617:71;3685:1;3674:9;3670:17;3661:6;3617:71;:::i;:::-;3473:222;;;;:::o;3701:77::-;3738:7;3767:5;3756:16;;3701:77;;;:::o;3784:122::-;3857:24;3875:5;3857:24;:::i;:::-;3850:5;3847:35;3837:63;;3896:1;3893;3886:12;3837:63;3784:122;:::o;3912:139::-;3958:5;3996:6;3983:20;3974:29;;4012:33;4039:5;4012:33;:::i;:::-;3912:139;;;;:::o;4057:329::-;4116:6;4165:2;4153:9;4144:7;4140:23;4136:32;4133:119;;;4171:79;;:::i;:::-;4133:119;4291:1;4316:53;4361:7;4352:6;4341:9;4337:22;4316:53;:::i;:::-;4306:63;;4262:117;4057:329;;;;:::o;4392:126::-;4429:7;4469:42;4462:5;4458:54;4447:65;;4392:126;;;:::o;4524:96::-;4561:7;4590:24;4608:5;4590:24;:::i;:::-;4579:35;;4524:96;;;:::o;4626:122::-;4699:24;4717:5;4699:24;:::i;:::-;4692:5;4689:35;4679:63;;4738:1;4735;4728:12;4679:63;4626:122;:::o;4754:139::-;4800:5;4838:6;4825:20;4816:29;;4854:33;4881:5;4854:33;:::i;:::-;4754:139;;;;:::o;4899:474::-;4967:6;4975;5024:2;5012:9;5003:7;4999:23;4995:32;4992:119;;;5030:79;;:::i;:::-;4992:119;5150:1;5175:53;5220:7;5211:6;5200:9;5196:22;5175:53;:::i;:::-;5165:63;;5121:117;5277:2;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;:::i;:::-;5293:63;;5248:118;4899:474;;;;;:::o;5379:169::-;5519:17;5515:1;5507:6;5503:14;5496:41;5379:169;:::o;5558:382::-;5700:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5805:93;5894:3;5805:93;:::i;:::-;5927:2;5922:3;5918:12;5911:19;;5558:382;;;:::o;5950:435::-;6116:4;6158:2;6147:9;6143:18;6135:26;;6211:9;6205:4;6201:20;6197:1;6186:9;6182:17;6175:47;6243:131;6369:4;6243:131;:::i;:::-;6235:139;;5950:435;;;:::o;6395:176::-;6539:20;6535:1;6527:6;6523:14;6516:44;6395:176;:::o;6581:382::-;6723:3;6748:67;6812:2;6807:3;6748:67;:::i;:::-;6741:74;;6828:93;6917:3;6828:93;:::i;:::-;6950:2;6945:3;6941:12;6934:19;;6581:382;;;:::o;6973:435::-;7139:4;7181:2;7170:9;7166:18;7158:26;;7234:9;7228:4;7224:20;7220:1;7209:9;7205:17;7198:47;7266:131;7392:4;7266:131;:::i;:::-;7258:139;;6973:435;;;:::o;7418:196::-;7470:77;7467:1;7460:88;7571:4;7568:1;7561:15;7599:4;7596:1;7589:15;7624:211;7664:3;7687:20;7705:1;7687:20;:::i;:::-;7682:25;;7725:20;7743:1;7725:20;:::i;:::-;7720:25;;7772:1;7769;7765:9;7758:16;;7797:3;7794:1;7791:10;7788:36;;;7804:18;;:::i;:::-;7788:36;7624:211;;;;:::o;7845:184::-;7989:28;7985:1;7977:6;7973:14;7966:52;7845:184;:::o;8039:382::-;8181:3;8206:67;8270:2;8265:3;8206:67;:::i;:::-;8199:74;;8286:93;8375:3;8286:93;:::i;:::-;8408:2;8403:3;8399:12;8392:19;;8039:382;;;:::o;8431:435::-;8597:4;8639:2;8628:9;8624:18;8616:26;;8692:9;8686:4;8682:20;8678:1;8667:9;8663:17;8656:47;8724:131;8850:4;8724:131;:::i;:::-;8716:139;;8431:435;;;:::o;8876:126::-;8967:24;8985:5;8967:24;:::i;:::-;8962:3;8955:37;8876:126;;:::o;9012:::-;9103:24;9121:5;9103:24;:::i;:::-;9098:3;9091:37;9012:126;;:::o;9148:348::-;9269:4;9311:2;9300:9;9296:18;9288:26;;9328:71;9396:1;9385:9;9381:17;9372:6;9328:71;:::i;:::-;9413:72;9481:2;9470:9;9466:18;9457:6;9413:72;:::i;:::-;9148:348;;;;;:::o;9506:124::-;9580:21;9595:5;9580:21;:::i;:::-;9573:5;9570:32;9560:60;;9616:1;9613;9606:12;9560:60;9506:124;:::o;9640:149::-;9694:5;9729:6;9723:13;9714:22;;9749:30;9773:5;9749:30;:::i;:::-;9640:149;;;;:::o;9799:369::-;9866:6;9919:2;9907:9;9898:7;9894:23;9890:32;9887:119;;;9925:79;;:::i;:::-;9887:119;10053:1;10082:61;10135:7;10126:6;10115:9;10111:22;10082:61;:::i;:::-;10072:71;;10020:137;9799:369;;;;:::o;10178:234::-;10271:4;10313:2;10302:9;10298:18;10290:26;;10330:71;10398:1;10387:9;10383:17;10374:6;10330:71;:::i;:::-;10178:234;;;;:::o;10422:458::-;10462:7;10489:20;10507:1;10489:20;:::i;:::-;10484:25;;10527:20;10545:1;10527:20;:::i;:::-;10522:25;;10586:1;10583;10579:9;10612:30;10630:11;10612:30;:::i;:::-;10601:41;;10811:1;10802:7;10798:15;10795:1;10792:22;10768:1;10761:9;10737:95;10710:159;;10849:18;;:::i;:::-;10710:159;10470:410;10422:458;;;;:::o;10890:246::-;11034:34;11030:1;11022:6;11018:14;11011:58;11107:17;11102:2;11094:6;11090:15;11083:42;10890:246;:::o;11146:382::-;11288:3;11313:67;11377:2;11372:3;11313:67;:::i;:::-;11306:74;;11393:93;11482:3;11393:93;:::i;:::-;11515:2;11510:3;11506:12;11499:19;;11146:382;;;:::o;11538:435::-;11704:4;11746:2;11735:9;11731:18;11723:26;;11799:9;11793:4;11789:20;11785:1;11774:9;11770:17;11763:47;11831:131;11957:4;11831:131;:::i;:::-;11823:139;;11538:435;;;:::o;11983:186::-;12127:30;12123:1;12115:6;12111:14;12104:54;11983:186;:::o;12179:382::-;12321:3;12346:67;12410:2;12405:3;12346:67;:::i;:::-;12339:74;;12426:93;12515:3;12426:93;:::i;:::-;12548:2;12543:3;12539:12;12532:19;;12179:382;;;:::o;12571:435::-;12737:4;12779:2;12768:9;12764:18;12756:26;;12832:9;12826:4;12822:20;12818:1;12807:9;12803:17;12796:47;12864:131;12990:4;12864:131;:::i;:::-;12856:139;;12571:435;;;:::o;13016:214::-;13056:4;13080:20;13098:1;13080:20;:::i;:::-;13075:25;;13118:20;13136:1;13118:20;:::i;:::-;13113:25;;13166:1;13163;13159:9;13151:17;;13194:1;13188:4;13185:11;13182:37;;;13199:18;;:::i;:::-;13182:37;13016:214;;;;:::o;13240:156::-;13342:11;13383:3;13368:18;;13240:156;;;;:::o;13406:181::-;13550:25;13546:1;13538:6;13534:14;13527:49;13406:181;:::o;13597:418::-;13757:3;13782:85;13864:2;13859:3;13782:85;:::i;:::-;13775:92;;13880:93;13969:3;13880:93;:::i;:::-;14002:2;13997:3;13993:12;13986:19;;13597:418;;;:::o;14025:107::-;14077:6;14115:5;14109:12;14099:22;;14025:107;;;:::o;14142:274::-;14227:1;14241:125;14255:6;14252:1;14249:13;14241:125;;;14348:1;14343:3;14339:11;14333:18;14329:1;14324:3;14320:11;14313:39;14277:2;14274:1;14270:10;14265:15;;14241:125;;;14404:1;14395:6;14390:3;14386:16;14379:27;14204:212;14142:274;;;:::o;14426:410::-;14532:3;14564:39;14597:5;14564:39;:::i;:::-;14623:89;14705:6;14700:3;14623:89;:::i;:::-;14616:96;;14725:65;14783:6;14778:3;14771:4;14764:5;14760:16;14725:65;:::i;:::-;14819:6;14814:3;14810:16;14803:23;;14536:300;14426:410;;;;:::o;14846:175::-;14990:19;14986:1;14978:6;14974:14;14967:43;14846:175;:::o;15031:418::-;15191:3;15216:85;15298:2;15293:3;15216:85;:::i;:::-;15209:92;;15314:93;15403:3;15314:93;:::i;:::-;15436:2;15431:3;15427:12;15420:19;;15031:418;;;:::o;15459:991::-;15841:3;15867:148;16011:3;15867:148;:::i;:::-;15860:155;;16036:95;16127:3;16118:6;16036:95;:::i;:::-;16029:102;;16152:148;16296:3;16152:148;:::i;:::-;16145:155;;16321:95;16412:3;16403:6;16321:95;:::i;:::-;16314:102;;16437:3;16430:10;;15459:991;;;;;:::o;16460:110::-;16501:6;16556:2;16552:7;16547:2;16540:5;16536:14;16532:28;16522:38;;16460:110;;;:::o;16580:397::-;16668:3;16700:39;16733:5;16700:39;:::i;:::-;16759:71;16823:6;16818:3;16759:71;:::i;:::-;16752:78;;16843:65;16901:6;16896:3;16889:4;16882:5;16878:16;16843:65;:::i;:::-;16937:29;16959:6;16937:29;:::i;:::-;16932:3;16928:39;16921:46;;16672:305;16580:397;;;;:::o;16987:329::-;17100:4;17142:2;17131:9;17127:18;17119:26;;17195:9;17189:4;17185:20;17181:1;17170:9;17166:17;17159:47;17227:78;17300:4;17291:6;17227:78;:::i;:::-;17219:86;;16987:329;;;;:::o;17326:196::-;17378:77;17375:1;17368:88;17479:4;17476:1;17469:15;17507:4;17504:1;17497:15;17532:196;17584:77;17581:1;17574:88;17685:4;17682:1;17675:15;17713:4;17710:1;17703:15;17738:187;17777:3;17804:24;17822:5;17804:24;:::i;:::-;17795:33;;17854:4;17847:5;17844:15;17841:41;;17862:18;;:::i;:::-;17841:41;17913:1;17906:5;17902:13;17895:20;;17738:187;;;:::o;17935:190::-;18079:34;18075:1;18067:6;18063:14;18056:58;17935:190;:::o;18135:382::-;18277:3;18302:67;18366:2;18361:3;18302:67;:::i;:::-;18295:74;;18382:93;18471:3;18382:93;:::i;:::-;18504:2;18499:3;18495:12;18488:19;;18135:382;;;:::o;18527:435::-;18693:4;18735:2;18724:9;18720:18;18712:26;;18788:9;18782:4;18778:20;18774:1;18763:9;18759:17;18752:47;18820:131;18946:4;18820:131;:::i;:::-;18812:139;;18527:435;;;:::o;18972:196::-;19024:77;19021:1;19014:88;19125:4;19122:1;19115:15;19153:4;19150:1;19143:15;19178:205;19218:1;19239:20;19257:1;19239:20;:::i;:::-;19234:25;;19277:20;19295:1;19277:20;:::i;:::-;19272:25;;19320:1;19310:35;;19325:18;;:::i;:::-;19310:35;19371:1;19368;19364:9;19359:14;;19178:205;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1459200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "397",
								"DEFAULT_ADMIN_ROLE()": "357",
								"EXTEND_ICO_ROLE()": "395",
								"INVESTOR_ROLE()": "374",
								"burned()": "2502",
								"buy()": "infinite",
								"endICO()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3207",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"addLiquidity()": "infinite",
								"conversion(uint256)": "infinite",
								"createPool(address)": "infinite",
								"pairFor(address,address,address)": "infinite",
								"percentFromICO(uint256)": "infinite",
								"soldPercent()": "infinite",
								"sortTokens(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 945,
									"end": 956,
									"name": "PUSH",
									"source": 9,
									"value": "430E23400"
								},
								{
									"begin": 928,
									"end": 956,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 928,
									"end": 956,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1009,
									"name": "PUSH",
									"source": 9,
									"value": "152D02C7E14AF6800000"
								},
								{
									"begin": 978,
									"end": 1009,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 978,
									"end": 1009,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1082,
									"end": 1083,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1062,
									"end": 1083,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1062,
									"end": 1083,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "PUSH",
									"source": 9,
									"value": "278D00"
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "PUSH",
									"source": 9,
									"value": "93A80"
								},
								{
									"begin": 1251,
									"end": 1272,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1251,
									"end": 1272,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1342,
									"end": 1782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 371,
									"end": 397,
									"name": "PUSH",
									"source": 9,
									"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1455,
									"end": 1465,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1455,
									"end": 1465,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1486,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1455,
									"end": 1486,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1486,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1455,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1525,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 1520,
									"end": 1524,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1525,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1525,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1496,
									"end": 1525,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1496,
									"end": 1525,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 513,
									"end": 541,
									"name": "PUSH",
									"source": 9,
									"value": "305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289"
								},
								{
									"begin": 1563,
									"end": 1567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1535,
									"end": 1545,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1535,
									"end": 1545,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1568,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1535,
									"end": 1568,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1568,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1535,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1594,
									"end": 1604,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1583,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1583,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1628,
									"end": 1633,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1619,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1615,
									"end": 1619,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1634,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1668,
									"end": 1683,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1711,
									"name": "PUSH",
									"source": 9,
									"value": "6F"
								},
								{
									"begin": 1693,
									"end": 1702,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1703,
									"end": 1704,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1736,
									"end": 1739,
									"name": "PUSH",
									"source": 9,
									"value": "DE"
								},
								{
									"begin": 1721,
									"end": 1730,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1732,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1739,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1739,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1739,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1739,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1764,
									"end": 1767,
									"name": "PUSH",
									"source": 9,
									"value": "14D"
								},
								{
									"begin": 1749,
									"end": 1758,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1759,
									"end": 1760,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1749,
									"end": 1761,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1767,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1767,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1767,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1767,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1782,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1952"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220814a8a98eefd24b4b88da9a1e13d0f300f7b6d1d6c4390631a481f9d87b6808a64736f6c63430008110033",
									".code": [
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "73F42561"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "A6F2AE3A"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "B1AC51F8"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "73F42561"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "76082A5E"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "4F248409"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "282C51F3"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "PUSH",
											"source": 9,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2438,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2457,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2467,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2467,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 264,
											"end": 6395,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 403,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 403,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 403,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2957,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2957,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3657,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6320,
											"end": 6393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6320,
											"end": 6393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 331,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 331,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2486,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2486,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 471,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 471,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1930,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1930,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1919,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1896,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2570,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2567,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2571,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2550,
											"end": 2593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2550,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2634,
											"end": 2643,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2623,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2623,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2686,
											"end": 2692,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2675,
											"end": 2683,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2663,
											"end": 2683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2663,
											"end": 2683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2692,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2655,
											"end": 2723,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 2755,
											"end": 2759,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2762,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2733,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2733,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 2796,
											"end": 2806,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2782,
											"end": 2818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2782,
											"end": 2818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2851,
											"end": 2859,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2839,
											"end": 2859,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2828,
											"end": 2859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2859,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2893,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2869,
											"end": 2893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727"
										},
										{
											"begin": 2913,
											"end": 2922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2908,
											"end": 2923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2923,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2933,
											"end": 2944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 2944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 403,
											"end": 465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3089,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3061,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3061,
											"end": 3066,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3061,
											"end": 3071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3061,
											"end": 3071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3058,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1952"
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3045,
											"end": 3071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3045,
											"end": 3071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3089,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3142,
											"end": 3147,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3127,
											"end": 3148,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3148,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3127,
											"end": 3148,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3148,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3148,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 3184,
											"end": 3188,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3204,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3162,
											"end": 3205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3205,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3162,
											"end": 3205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3227,
											"end": 3237,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3219,
											"end": 3247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3248,
											"end": 3261,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3273,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3328,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3305,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3300,
											"end": 3310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3300,
											"end": 3310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3297,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1952"
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3284,
											"end": 3310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3284,
											"end": 3310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3328,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3381,
											"end": 3386,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3366,
											"end": 3387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3366,
											"end": 3387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3387,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3419,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3401,
											"end": 3429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3430,
											"end": 3443,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3444,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3329,
											"end": 3455,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3509,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3482,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3482,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3482,
											"end": 3491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1952"
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3466,
											"end": 3491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3466,
											"end": 3491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3509,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3636,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3461,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3562,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3547,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3547,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3600,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3611,
											"end": 3624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3636,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3461,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3279,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3040,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3657,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1930,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1930,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1919,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1896,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2516,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2013,
											"end": 2019,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2019,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2004,
											"end": 2051,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2004,
											"end": 2051,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3751,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3766,
											"end": 3774,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3766,
											"end": 3774,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3761,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3755,
											"end": 3761,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3765,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3755,
											"end": 3765,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3775,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3755,
											"end": 3775,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3776,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3776,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3786,
											"end": 3790,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3795,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3786,
											"end": 3795,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3795,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 3796,
											"end": 3804,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3786,
											"end": 3805,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3805,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "D83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E"
										},
										{
											"begin": 3827,
											"end": 3835,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3820,
											"end": 3836,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3836,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3843,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2072,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2072,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 331,
											"end": 397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 471,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 513,
											"end": 541,
											"name": "PUSH",
											"source": 9,
											"value": "305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289"
										},
										{
											"begin": 471,
											"end": 541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 471,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6091,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5981,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6072,
											"end": 6082,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6072,
											"end": 6082,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6062,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6091,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6213,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6097,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 6192,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6192,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6192,
											"end": 6205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6205,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6192,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6187,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 6182,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6315,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6219,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6296,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6288,
											"end": 6296,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6288,
											"end": 6300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6288,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6219,
											"end": 6315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6219,
											"end": 6315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 4,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 182,
											"end": 344,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 182,
											"end": 344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 322,
											"end": 336,
											"name": "PUSH",
											"source": 11,
											"value": "66616C6C6261636B206869740000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 299,
											"end": 337,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 182,
											"end": 344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 182,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 350,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 577,
											"end": 579,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 513,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 580,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 506,
											"end": 580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 678,
											"end": 681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 589,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 589,
											"end": 682,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 589,
											"end": 682,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 698,
											"end": 710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 691,
											"end": 710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 691,
											"end": 710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 350,
											"end": 716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 350,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 903,
											"end": 929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 903,
											"end": 929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 969,
											"end": 973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 965,
											"end": 985,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 946,
											"end": 963,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 939,
											"end": 986,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1003,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1616,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1539,
											"end": 1617,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1474,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1701,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1691,
											"end": 1725,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1825,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1854,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1976,
											"end": 2008,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 2011,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 2156,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 2225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2265,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2423,
											"end": 2428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2408,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2430,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2327,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2580,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2814,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2804,
											"end": 2839,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2969,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3128,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 3273,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3336,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3436,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3349,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3617,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3857,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3847,
											"end": 3882,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 3963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4012,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4144,
											"end": 4151,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4136,
											"end": 4168,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 4171,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4350,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4337,
											"end": 4359,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4316,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4379,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4429,
											"end": 4436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4511,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4512,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4590,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4699,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4626,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4845,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4854,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5027,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 5030,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5209,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 5175,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5346,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5303,
											"end": 5356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5536,
											"name": "PUSH",
											"source": 11,
											"value": "49434F206973206F766572203A28200000000000000000000000000000000000"
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 5725,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5805,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6221,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6222,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6369,
											"end": 6373,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 6243,
											"end": 6374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5950,
											"end": 6385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 6571,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6395,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6539,
											"end": 6559,
											"name": "PUSH",
											"source": 11,
											"value": "20706C656173652073656E64206D657469730000000000000000000000000000"
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6516,
											"end": 6560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 6571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 6571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6963,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 6581,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6723,
											"end": 6726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6812,
											"end": 6814,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 6748,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6815,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6748,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6815,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 6917,
											"end": 6920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6828,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 6828,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6950,
											"end": 6952,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 6953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6963,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6581,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7408,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6973,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7218,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7198,
											"end": 7245,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7266,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7392,
											"end": 7396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7266,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7266,
											"end": 7397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7266,
											"end": 7397,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7266,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7408,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 7408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7614,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7418,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7470,
											"end": 7547,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7571,
											"end": 7575,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7561,
											"end": 7576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7596,
											"end": 7597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7604,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7664,
											"end": 7667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7687,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7743,
											"end": 7744,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7725,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7745,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7725,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7720,
											"end": 7745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7720,
											"end": 7745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7772,
											"end": 7773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7758,
											"end": 7774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7758,
											"end": 7774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7794,
											"end": 7795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7801,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7824,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7788,
											"end": 7824,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7804,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7824,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7788,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 8029,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7845,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7989,
											"end": 8017,
											"name": "PUSH",
											"source": 11,
											"value": "657863656564732074686520746F74616C20666F722073616C65000000000000"
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 7983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7973,
											"end": 7987,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7966,
											"end": 8018,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 8029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 8029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8039,
											"end": 8421,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 8039,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8181,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 8270,
											"end": 8272,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 8265,
											"end": 8268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 8206,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8273,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 8206,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8199,
											"end": 8273,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8199,
											"end": 8273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8286,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8375,
											"end": 8378,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8286,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 8286,
											"end": 8379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8286,
											"end": 8379,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 8286,
											"end": 8379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8410,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8399,
											"end": 8411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8392,
											"end": 8411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8392,
											"end": 8411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8039,
											"end": 8421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8039,
											"end": 8421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8039,
											"end": 8421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8039,
											"end": 8421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8866,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 8431,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8597,
											"end": 8601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8628,
											"end": 8637,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8692,
											"end": 8701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8686,
											"end": 8690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8682,
											"end": 8702,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8678,
											"end": 8679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8667,
											"end": 8676,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8663,
											"end": 8680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8703,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8724,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8850,
											"end": 8854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8724,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 8724,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8724,
											"end": 8855,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8724,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8716,
											"end": 8855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8716,
											"end": 8855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 9002,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 8876,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 8985,
											"end": 8990,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 8967,
											"end": 8991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8991,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 8967,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8962,
											"end": 8965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8955,
											"end": 8992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 9002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 9002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 9002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9138,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 9012,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9103,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9121,
											"end": 9126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9103,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 9103,
											"end": 9127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9103,
											"end": 9127,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 9103,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9098,
											"end": 9101,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9091,
											"end": 9128,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9288,
											"end": 9314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9288,
											"end": 9314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9381,
											"end": 9398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9378,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 9328,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 9481,
											"end": 9483,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9470,
											"end": 9479,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9457,
											"end": 9463,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 9413,
											"end": 9485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9485,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 9413,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9630,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9506,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9595,
											"end": 9600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 9580,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9573,
											"end": 9578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9570,
											"end": 9602,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 9560,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9560,
											"end": 9620,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9606,
											"end": 9618,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9560,
											"end": 9620,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9560,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9694,
											"end": 9699,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9723,
											"end": 9736,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9736,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9773,
											"end": 9778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9749,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9898,
											"end": 9905,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9894,
											"end": 9917,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9890,
											"end": 9922,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9887,
											"end": 10006,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9887,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 9887,
											"end": 10006,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 9925,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9887,
											"end": 10006,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 9887,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10053,
											"end": 10054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 10135,
											"end": 10142,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10126,
											"end": 10132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10124,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10111,
											"end": 10133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 10082,
											"end": 10143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 10168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10271,
											"end": 10275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10313,
											"end": 10315,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10302,
											"end": 10311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10398,
											"end": 10399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 10330,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 10330,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10507,
											"end": 10508,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 10489,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10484,
											"end": 10509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 10545,
											"end": 10546,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 10527,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10547,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 10527,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10586,
											"end": 10587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10630,
											"end": 10641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 10612,
											"end": 10642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10642,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10612,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10601,
											"end": 10642,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10601,
											"end": 10642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10811,
											"end": 10812,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10798,
											"end": 10813,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10796,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10792,
											"end": 10814,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10768,
											"end": 10769,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10737,
											"end": 10832,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10710,
											"end": 10869,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 10849,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10869,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10710,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10422,
											"end": 10880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 11136,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10890,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11068,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11030,
											"end": 11031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11028,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11069,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11124,
											"name": "PUSH",
											"source": 11,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11102,
											"end": 11104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11090,
											"end": 11105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11083,
											"end": 11125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 11136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11528,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 11146,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11288,
											"end": 11291,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11313,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11377,
											"end": 11379,
											"name": "PUSH",
											"source": 11,
											"value": "2F"
										},
										{
											"begin": 11372,
											"end": 11375,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11313,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 11313,
											"end": 11380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11313,
											"end": 11380,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11313,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11306,
											"end": 11380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11306,
											"end": 11380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11393,
											"end": 11486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11482,
											"end": 11485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11393,
											"end": 11486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 11393,
											"end": 11486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11393,
											"end": 11486,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11393,
											"end": 11486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11515,
											"end": 11517,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11510,
											"end": 11513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11506,
											"end": 11518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11499,
											"end": 11518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11499,
											"end": 11518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11973,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 11538,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11748,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11735,
											"end": 11744,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11731,
											"end": 11749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 11749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 11749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11789,
											"end": 11809,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11763,
											"end": 11810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11831,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 11957,
											"end": 11961,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11831,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 11831,
											"end": 11962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11831,
											"end": 11962,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 11831,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11823,
											"end": 11962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11823,
											"end": 11962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11538,
											"end": 11973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12169,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11983,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12127,
											"end": 12157,
											"name": "PUSH",
											"source": 11,
											"value": "74686520737570706C7920697320616C7265616479206275726E656400000000"
										},
										{
											"begin": 12123,
											"end": 12124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12115,
											"end": 12121,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12111,
											"end": 12125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12104,
											"end": 12158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12561,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 12179,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 12410,
											"end": 12412,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12346,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 12346,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12346,
											"end": 12413,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 12346,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12339,
											"end": 12413,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12339,
											"end": 12413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12426,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 12515,
											"end": 12518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12426,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 12426,
											"end": 12519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12426,
											"end": 12519,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 12426,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12548,
											"end": 12550,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12561,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12571,
											"end": 13006,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 12571,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12777,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12756,
											"end": 12782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12756,
											"end": 12782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12832,
											"end": 12841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12822,
											"end": 12842,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12807,
											"end": 12816,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12803,
											"end": 12820,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12796,
											"end": 12843,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 12990,
											"end": 12994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 12864,
											"end": 12995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12995,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 12864,
											"end": 12995,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12995,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12571,
											"end": 13006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12571,
											"end": 13006,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12571,
											"end": 13006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12571,
											"end": 13006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 13098,
											"end": 13099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 13080,
											"end": 13100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13100,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 13080,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13118,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 13136,
											"end": 13137,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13118,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 13118,
											"end": 13138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13118,
											"end": 13138,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 13118,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13113,
											"end": 13138,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13113,
											"end": 13138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13166,
											"end": 13167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13163,
											"end": 13164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13159,
											"end": 13168,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13151,
											"end": 13168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13151,
											"end": 13168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13188,
											"end": 13192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 13199,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 13182,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13342,
											"end": 13353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13406,
											"end": 13587,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13406,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13550,
											"end": 13575,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13527,
											"end": 13576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13406,
											"end": 13587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13406,
											"end": 13587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13597,
											"end": 14015,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13597,
											"end": 14015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13757,
											"end": 13760,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 13864,
											"end": 13866,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 13859,
											"end": 13862,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13782,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13782,
											"end": 13867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13782,
											"end": 13867,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 13782,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13775,
											"end": 13867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13775,
											"end": 13867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 13969,
											"end": 13972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13880,
											"end": 13973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 13973,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 13880,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14002,
											"end": 14004,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 13997,
											"end": 14000,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13986,
											"end": 14005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13986,
											"end": 14005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13597,
											"end": 14015,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13597,
											"end": 14015,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13597,
											"end": 14015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13597,
											"end": 14015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14132,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14025,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14077,
											"end": 14083,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14121,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14142,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14142,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14227,
											"end": 14228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14252,
											"end": 14253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14249,
											"end": 14262,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14348,
											"end": 14349,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14343,
											"end": 14346,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14339,
											"end": 14350,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14329,
											"end": 14330,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14324,
											"end": 14327,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14320,
											"end": 14331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14313,
											"end": 14352,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14274,
											"end": 14275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14265,
											"end": 14280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14265,
											"end": 14280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14241,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14404,
											"end": 14405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14401,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14386,
											"end": 14402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14379,
											"end": 14406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14204,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14142,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14142,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14142,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14142,
											"end": 14416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 14597,
											"end": 14602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14564,
											"end": 14603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14623,
											"end": 14712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 14705,
											"end": 14711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14700,
											"end": 14703,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14623,
											"end": 14712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 14623,
											"end": 14712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14623,
											"end": 14712,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 14623,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14616,
											"end": 14712,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14616,
											"end": 14712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14725,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 14783,
											"end": 14789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14781,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14764,
											"end": 14769,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14760,
											"end": 14776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14725,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14725,
											"end": 14790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14725,
											"end": 14790,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 14725,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14819,
											"end": 14825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14814,
											"end": 14817,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14810,
											"end": 14826,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14803,
											"end": 14826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14803,
											"end": 14826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14536,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14846,
											"end": 15021,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 14846,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14990,
											"end": 15009,
											"name": "PUSH",
											"source": 11,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 14984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14974,
											"end": 14988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14967,
											"end": 15010,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14846,
											"end": 15021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14846,
											"end": 15021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15031,
											"end": 15449,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 15031,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15191,
											"end": 15194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15216,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 15298,
											"end": 15300,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 15293,
											"end": 15296,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15216,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 15216,
											"end": 15301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15216,
											"end": 15301,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 15216,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 15403,
											"end": 15406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 15314,
											"end": 15407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15427,
											"end": 15439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15420,
											"end": 15439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15420,
											"end": 15439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15031,
											"end": 15449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15031,
											"end": 15449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15031,
											"end": 15449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15031,
											"end": 15449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 16011,
											"end": 16014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 15867,
											"end": 16015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 16015,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 15867,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15860,
											"end": 16015,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15860,
											"end": 16015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 16127,
											"end": 16130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16118,
											"end": 16124,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 16036,
											"end": 16131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16131,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 16036,
											"end": 16131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16029,
											"end": 16131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16029,
											"end": 16131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 16296,
											"end": 16299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 16152,
											"end": 16300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16300,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 16152,
											"end": 16300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16145,
											"end": 16300,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16145,
											"end": 16300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16321,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 16412,
											"end": 16415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16403,
											"end": 16409,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16321,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 16321,
											"end": 16416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16321,
											"end": 16416,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 16321,
											"end": 16416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16437,
											"end": 16440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16430,
											"end": 16440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16430,
											"end": 16440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 16450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16460,
											"end": 16570,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 16460,
											"end": 16570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16501,
											"end": 16507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16558,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 16552,
											"end": 16559,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 16547,
											"end": 16549,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 16540,
											"end": 16545,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16532,
											"end": 16560,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16522,
											"end": 16560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16522,
											"end": 16560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16460,
											"end": 16570,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16460,
											"end": 16570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16460,
											"end": 16570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16460,
											"end": 16570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16668,
											"end": 16671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16700,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 16733,
											"end": 16738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16700,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 16700,
											"end": 16739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16700,
											"end": 16739,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 16700,
											"end": 16739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16759,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 16823,
											"end": 16829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16818,
											"end": 16821,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16759,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 16759,
											"end": 16830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16759,
											"end": 16830,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 16759,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16752,
											"end": 16830,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16752,
											"end": 16830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16843,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 16901,
											"end": 16907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16896,
											"end": 16899,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16887,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16878,
											"end": 16894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16843,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 16843,
											"end": 16908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16843,
											"end": 16908,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 16843,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 16959,
											"end": 16965,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 16937,
											"end": 16966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16966,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 16937,
											"end": 16966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16928,
											"end": 16967,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16921,
											"end": 16967,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16921,
											"end": 16967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16672,
											"end": 16977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16580,
											"end": 16977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17100,
											"end": 17104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17131,
											"end": 17140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17119,
											"end": 17145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17119,
											"end": 17145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17195,
											"end": 17204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17189,
											"end": 17193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17185,
											"end": 17205,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17181,
											"end": 17182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17170,
											"end": 17179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17166,
											"end": 17183,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17159,
											"end": 17206,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17227,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 17300,
											"end": 17304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17291,
											"end": 17297,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17227,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 17227,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17227,
											"end": 17305,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 17227,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17219,
											"end": 17305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17219,
											"end": 17305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16987,
											"end": 17316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17326,
											"end": 17522,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 17326,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17378,
											"end": 17455,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17375,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17368,
											"end": 17456,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17479,
											"end": 17483,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 17476,
											"end": 17477,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17469,
											"end": 17484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17507,
											"end": 17511,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17504,
											"end": 17505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17532,
											"end": 17728,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 17532,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17584,
											"end": 17661,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17581,
											"end": 17582,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17685,
											"end": 17689,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 17682,
											"end": 17683,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17675,
											"end": 17690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17713,
											"end": 17717,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17710,
											"end": 17711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17703,
											"end": 17718,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17738,
											"end": 17925,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 17738,
											"end": 17925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17777,
											"end": 17780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17804,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 17822,
											"end": 17827,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17804,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 17804,
											"end": 17828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17804,
											"end": 17828,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 17804,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 17828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 17828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17854,
											"end": 17858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17847,
											"end": 17852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17859,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17841,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 17841,
											"end": 17882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 17862,
											"end": 17880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 17862,
											"end": 17880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17841,
											"end": 17882,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 17841,
											"end": 17882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17913,
											"end": 17914,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 17906,
											"end": 17911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17902,
											"end": 17915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17895,
											"end": 17915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17895,
											"end": 17915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17738,
											"end": 17925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17738,
											"end": 17925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17738,
											"end": 17925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17738,
											"end": 17925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17935,
											"end": 18125,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 17935,
											"end": 18125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18079,
											"end": 18113,
											"name": "PUSH",
											"source": 11,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 18075,
											"end": 18076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18067,
											"end": 18073,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18063,
											"end": 18077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18056,
											"end": 18114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17935,
											"end": 18125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17935,
											"end": 18125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18135,
											"end": 18517,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18135,
											"end": 18517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18277,
											"end": 18280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18302,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 18366,
											"end": 18368,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18361,
											"end": 18364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18302,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 18302,
											"end": 18369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18302,
											"end": 18369,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 18302,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18295,
											"end": 18369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18295,
											"end": 18369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 18471,
											"end": 18474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 18382,
											"end": 18475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18504,
											"end": 18506,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18499,
											"end": 18502,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18495,
											"end": 18507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18488,
											"end": 18507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18488,
											"end": 18507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18135,
											"end": 18517,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18135,
											"end": 18517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18135,
											"end": 18517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18135,
											"end": 18517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18962,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 18527,
											"end": 18962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18693,
											"end": 18697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18735,
											"end": 18737,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18724,
											"end": 18733,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18720,
											"end": 18738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18712,
											"end": 18738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18712,
											"end": 18738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18788,
											"end": 18797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18778,
											"end": 18798,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18774,
											"end": 18775,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18763,
											"end": 18772,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18759,
											"end": 18776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18752,
											"end": 18799,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18820,
											"end": 18951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 18946,
											"end": 18950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18820,
											"end": 18951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18820,
											"end": 18951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18820,
											"end": 18951,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 18820,
											"end": 18951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18812,
											"end": 18951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18812,
											"end": 18951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18962,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18962,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18527,
											"end": 18962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18972,
											"end": 19168,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18972,
											"end": 19168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19024,
											"end": 19101,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19021,
											"end": 19022,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19014,
											"end": 19102,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19125,
											"end": 19129,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 19122,
											"end": 19123,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19115,
											"end": 19130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19153,
											"end": 19157,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19143,
											"end": 19158,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19218,
											"end": 19219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 19257,
											"end": 19258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19239,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 19239,
											"end": 19259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19239,
											"end": 19259,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 19239,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19234,
											"end": 19259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19234,
											"end": 19259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19277,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 19295,
											"end": 19296,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19277,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 19277,
											"end": 19297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19277,
											"end": 19297,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 19277,
											"end": 19297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19272,
											"end": 19297,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19272,
											"end": 19297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19320,
											"end": 19321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19310,
											"end": 19345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 19310,
											"end": 19345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 19325,
											"end": 19343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19310,
											"end": 19345,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 19310,
											"end": 19345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19371,
											"end": 19372,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19369,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19364,
											"end": 19373,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19359,
											"end": 19373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EXTEND_ICO_ROLE()": "b1ac51f8",
							"INVESTOR_ROLE()": "76082a5e",
							"burned()": "73f42561",
							"buy()": "a6f2ae3a",
							"endICO()": "4f248409",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eftt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTEND_ICO_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVESTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amnt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5ba913971094657f08bc31e8c2244a193c5117b40a13f76f4da0f1be7fae8ff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3992c068dfc7286dddffb6865e004b834b92fc4ff604c70459684479c1394ec\",\"dweb:/ipfs/QmV673kQefsXYk1BLmcWSf4WWBtSiYymzpYsBubrB5xY6X\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/ICO.sol\":{\"keccak256\":\"0x48c8e3bcd09123b41dbafb77af78a8c8841d05816bfbcd21ada1fcc65e5221da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a35c01e4131230e8cd7f34ad9da38c1533e2bca309035c12a1ef88f0a54fbe32\",\"dweb:/ipfs/QmQkdn2cmrFwjZkyRgtwNyG77ejxF4p5DpKsA1bcM5G2ds\"]},\"contracts/IEFTT.sol\":{\"keccak256\":\"0x73cf9b22b5e03ebf710f6acb27c641e26cda872b7865ca41a1a945cb6e458390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dc72ab8c304820108003b558b03ce557ab9bc99d5611a6f8e2583bba55315b0\",\"dweb:/ipfs/QmQAXZruD17gW4LxKeNjMYhoiBsxURQzczkHLKgfj5Lh61\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 102,
								"contract": "contracts/ICO.sol:ICO",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)97_storage)"
							},
							{
								"astId": 1904,
								"contract": "contracts/ICO.sol:ICO",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 1910,
								"contract": "contracts/ICO.sol:ICO",
								"label": "minters_",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1912,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxSupply_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1915,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1918,
								"contract": "contracts/ICO.sol:ICO",
								"label": "eftt",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IEFTT)2574"
							},
							{
								"astId": 1925,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxICO",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1927,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldInMetis",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1929,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldEFTT",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "contracts/ICO.sol:ICO",
								"label": "ratioMetis",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1936,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLocks",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1939,
								"contract": "contracts/ICO.sol:ICO",
								"label": "BURNED",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1944,
								"contract": "contracts/ICO.sol:ICO",
								"label": "locked",
								"offset": 1,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1947,
								"contract": "contracts/ICO.sol:ICO",
								"label": "month",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1950,
								"contract": "contracts/ICO.sol:ICO",
								"label": "week",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1954,
								"contract": "contracts/ICO.sol:ICO",
								"label": "ICOtimeLock",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IEFTT)2574": {
								"encoding": "inplace",
								"label": "contract IEFTT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)97_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)97_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RoleData)97_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 94,
										"contract": "contracts/ICO.sol:ICO",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 96,
										"contract": "contracts/ICO.sol:ICO",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IEFTT.sol": {
				"IEFTT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IEFTT.sol\":\"IEFTT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IEFTT.sol\":{\"keccak256\":\"0x73cf9b22b5e03ebf710f6acb27c641e26cda872b7865ca41a1a945cb6e458390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dc72ab8c304820108003b558b03ce557ab9bc99d5611a6f8e2583bba55315b0\",\"dweb:/ipfs/QmQAXZruD17gW4LxKeNjMYhoiBsxURQzczkHLKgfj5Lh61\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2565:0",
							"usedErrors": []
						}
					],
					"src": "106:2662:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							393
						],
						"Context": [
							488
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							466
						],
						"IERC165": [
							699
						],
						"Math": [
							1564
						],
						"Strings": [
							663
						]
					},
					"id": 394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 394,
							"sourceUnit": 467,
							"src": "133:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 394,
							"sourceUnit": 489,
							"src": "164:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 394,
							"sourceUnit": 664,
							"src": "195:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 394,
							"sourceUnit": 688,
							"src": "226:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 85,
										"name": "Context",
										"nameLocations": [
											"1841:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 488,
										"src": "1841:7:1"
									},
									"id": 86,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:1"
								},
								{
									"baseName": {
										"id": 87,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "1850:14:1"
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:1"
								},
								{
									"baseName": {
										"id": 89,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "1866:6:1"
									},
									"id": 90,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 84,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393,
								687,
								699,
								466,
								488
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 97,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 97,
											"src": "1905:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 93,
												"keyType": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 97,
											"src": "1947:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 95,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:1",
									"nodeType": "StructDefinition",
									"scope": 393,
									"src": "1879:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "1977:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 101,
										"keyType": {
											"id": 98,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 100,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 99,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 97,
												"src": "1996:8:1"
											},
											"referencedDeclaration": 97,
											"src": "1996:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$97_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 105,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "2027:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 103,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2495:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 111,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 110,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															209
														],
														"referencedDeclaration": 170,
														"src": "2505:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:1"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:1"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 116,
									"name": "onlyRole",
									"nameLocation": "2472:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:1"
									},
									"src": "2463:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2697:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 125,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2714:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 127,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "2734:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$466_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$466_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 126,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$466",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 133,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2789:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 131,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$393_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2765:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 124,
												"id": 136,
												"nodeType": "Return",
												"src": "2707:94:1"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:1"
									},
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2633:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 118,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:1"
									},
									"scope": 393,
									"src": "2606:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										433
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2987:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 149,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "3004:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 151,
															"indexExpression": {
																"id": 150,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "3011:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$97_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:1",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "3004:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 154,
													"indexExpression": {
														"id": 153,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "3025:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 148,
												"id": 155,
												"nodeType": "Return",
												"src": "2997:36:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:1"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2912:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 140,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2926:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2981:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:1"
									},
									"scope": 393,
									"src": "2895:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "3390:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "3411:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 165,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3417:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															209
														],
														"referencedDeclaration": 209,
														"src": "3400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "3354:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:1"
									},
									"scope": 393,
									"src": "3334:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3791:406:1",
										"statements": [
											{
												"condition": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 179,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "3814:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 180,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "3820:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 178,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "IfStatement",
												"src": "3801:390:1",
												"trueBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "3830:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 191,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 175,
																								"src": "4009:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 189,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 663,
																								"src": "3989:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$663_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 190,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 662,
																							"src": "3989:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 198,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 173,
																										"src": "4116:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 197,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 196,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 199,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 200,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 194,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 663,
																								"src": "4088:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$663_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 195,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 642,
																							"src": "4088:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 186,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:1",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 184,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 183,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 205,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3738:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3752:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 393,
									"src": "3718:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										441
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "4461:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 218,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "4478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 220,
														"indexExpression": {
															"id": 219,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4485:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$97_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 96,
													"src": "4478:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 217,
												"id": 222,
												"nodeType": "Return",
												"src": "4471:29:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 214,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:1"
									},
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "4400:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "4452:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:1"
									},
									"scope": 393,
									"src": "4378:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										449
									],
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "4906:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 240,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 238,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "4916:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4899:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4886:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "4877:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:1"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4822:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 226,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4836:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:1"
									},
									"scope": 393,
									"src": "4803:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										457
									],
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5332:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "5354:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 260,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "5360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 258,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "5342:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:1"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 254,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "5325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 253,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "5312:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 252,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "5303:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 251,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:1"
									},
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5248:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:1"
									},
									"scope": 393,
									"src": "5228:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "5989:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 274,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6007:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 275,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6018:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 282,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "6105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 283,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "6111:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 281,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "6093:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5934:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5948:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:1"
									},
									"scope": 393,
									"src": "5912:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "6879:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "6900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "6906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6889:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "6831:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "6845:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:1"
									},
									"scope": 393,
									"src": "6811:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "7119:174:1",
										"statements": [
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "7129:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 309,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"arguments": [
														{
															"id": 312,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7170:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 311,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "7157:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:1"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 315,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "7185:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 317,
															"indexExpression": {
																"id": 316,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "7192:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$97_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "7185:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 319,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "7210:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 323,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 324,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "7257:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 325,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7276:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 322,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "7234:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "7229:57:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7069:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7083:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:1"
									},
									"scope": 393,
									"src": "7046:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7529:165:1",
										"statements": [
											{
												"condition": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 338,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 339,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 337,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "7544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "7539:149:1",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "7568:120:1",
													"statements": [
														{
															"expression": {
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 342,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 102,
																				"src": "7582:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 344,
																			"indexExpression": {
																				"id": 343,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "7589:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$97_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 94,
																		"src": "7582:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 347,
																	"indexExpression": {
																		"id": 346,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "7603:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 350,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 352,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "7649:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 353,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "7655:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 354,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "7664:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 351,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "7637:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 357,
															"nodeType": "EmitStatement",
															"src": "7632:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7495:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:1"
									},
									"scope": 393,
									"src": "7461:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "7934:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 370,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "7956:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 371,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "7962:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "7948:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "IfStatement",
												"src": "7944:149:1",
												"trueBody": {
													"id": 389,
													"nodeType": "Block",
													"src": "7972:121:1",
													"statements": [
														{
															"expression": {
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 373,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 102,
																				"src": "7986:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$97_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 375,
																			"indexExpression": {
																				"id": 374,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 364,
																				"src": "7993:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$97_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 94,
																		"src": "7986:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 378,
																	"indexExpression": {
																		"id": 377,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "8007:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 381,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 383,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "8054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 384,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "8060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 385,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "8069:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 382,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "8042:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 388,
															"nodeType": "EmitStatement",
															"src": "8037:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "7886:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "7900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:1"
									},
									"scope": 393,
									"src": "7865:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "1806:6295:1",
							"usedErrors": []
						}
					],
					"src": "108:7994:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 405,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 414,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 423,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 466,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 435,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 438,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 466,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 466,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 466,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 466,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "209:2710:2",
							"usedErrors": []
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							488
						]
					},
					"id": 489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 488,
							"linearizedBaseContracts": [
								488
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 473,
												"id": 476,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 488,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 482,
												"id": 485,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 488,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 489,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1564
						],
						"Strings": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 491,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1565,
							"src": "126:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 492,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "Strings",
							"nameLocation": "196:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 495,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "210:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 493,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 498,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "270:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 496,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 497,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "486:625:4",
										"statements": [
											{
												"id": 544,
												"nodeType": "UncheckedBlock",
												"src": "496:609:4",
												"statements": [
													{
														"assignments": [
															507
														],
														"declarations": [
															{
																"constant": false,
																"id": 507,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "520:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "548:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 508,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "537:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1564_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1401,
																	"src": "537:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:4"
													},
													{
														"assignments": [
															516
														],
														"declarations": [
															{
																"constant": false,
																"id": 516,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "572:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 515,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 521,
														"initialValue": {
															"arguments": [
																{
																	"id": 519,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "606:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 517,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:4"
													},
													{
														"assignments": [
															523
														],
														"declarations": [
															{
																"constant": false,
																"id": 523,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 544,
																"src": "627:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 524,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 516,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:4",
																"valueSize": 1
															},
															{
																"declaration": 507,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:4",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:4",
																"valueSize": 1
															}
														],
														"id": 525,
														"nodeType": "InlineAssembly",
														"src": "699:76:4"
													},
													{
														"body": {
															"id": 540,
															"nodeType": "Block",
															"src": "801:267:4",
															"statements": [
																{
																	"expression": {
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:4",
																		"subExpression": {
																			"id": 527,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "819:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 529,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:4"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:4"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 495,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 523,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 501,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 530,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:4"
																},
																{
																	"expression": {
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1003:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 534,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1036:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 539,
																	"nodeType": "IfStatement",
																	"src": "1032:21:4",
																	"trueBody": {
																		"id": 538,
																		"nodeType": "Break",
																		"src": "1048:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 541,
														"nodeType": "WhileStatement",
														"src": "788:280:4"
													},
													{
														"expression": {
															"id": 542,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 505,
														"id": 543,
														"nodeType": "Return",
														"src": "1081:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "471:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:4"
									},
									"scope": 663,
									"src": "415:696:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "1290:100:4",
										"statements": [
											{
												"id": 564,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "1343:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 558,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "1362:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 556,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1564,
																				"src": "1350:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1564_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1524,
																			"src": "1350:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 554,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	566,
																	642,
																	662
																],
																"referencedDeclaration": 642,
																"src": "1331:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 553,
														"id": 563,
														"nodeType": "Return",
														"src": "1324:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1237:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1275:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:4"
									},
									"scope": 663,
									"src": "1216:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1603:347:4",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1613:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 576,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 581,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "1649:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:4"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1670:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 589,
														"indexExpression": {
															"hexValue": "30",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:4"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 593,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1695:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 595,
														"indexExpression": {
															"hexValue": "31",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:4"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "1765:83:4",
													"statements": [
														{
															"expression": {
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 613,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1779:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 615,
																	"indexExpression": {
																		"id": 614,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "1786:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 616,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "1791:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 620,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "1800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:4"
														},
														{
															"expression": {
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "1826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 626,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1753:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"assignments": [
														600
													],
													"declarations": [
														{
															"constant": false,
															"id": 600,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 628,
															"src": "1725:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 599,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 606,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 602,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "1741:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:4",
														"subExpression": {
															"id": 610,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "1762:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "1865:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1936:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 636,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 640,
												"nodeType": "Return",
												"src": "1922:21:4"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1534:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1549:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:4"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1588:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:4"
									},
									"scope": 663,
									"src": "1513:437:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "2175:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 655,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "2220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 653,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 651,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 658,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "2228:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 650,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															566,
															642,
															662
														],
														"referencedDeclaration": 642,
														"src": "2192:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 649,
												"id": 660,
												"nodeType": "Return",
												"src": "2185:59:4"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2123:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2160:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:4"
									},
									"scope": 663,
									"src": "2102:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 664,
							"src": "188:2065:4",
							"usedErrors": []
						}
					],
					"src": "101:2153:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							687
						],
						"IERC165": [
							699
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 700,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "754:7:5"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687,
								699
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$699_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 679,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$699",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 684,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 674,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 671,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 687,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 688,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							699
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 692,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 699,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1564
						]
					},
					"id": 1565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 706,
									"members": [
										{
											"id": 703,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 704,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 705,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 716,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 717,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 720,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 719,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 722,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 1564,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 734,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 735,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 738,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 737,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 740,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 1564,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 752,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 753,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 755,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 757,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 759,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 763,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 1564,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 775,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 779,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 783,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 774,
												"id": 788,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 1564,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "1795:3797:7",
										"statements": [
											{
												"id": 910,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:7",
												"statements": [
													{
														"assignments": [
															803
														],
														"declarations": [
															{
																"constant": false,
																"id": 803,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2126:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 804,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:7"
													},
													{
														"assignments": [
															806
														],
														"declarations": [
															{
																"constant": false,
																"id": 806,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2198:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 805,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 807,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:7",
																"valueSize": 1
															}
														],
														"id": 808,
														"nodeType": "InlineAssembly",
														"src": "2269:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "2516:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "2512:75:7",
														"trueBody": {
															"id": 816,
															"nodeType": "Block",
															"src": "2528:59:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 812,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "2553:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 813,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "2561:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 801,
																	"id": 815,
																	"nodeType": "Return",
																	"src": "2546:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2697:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 820,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2711:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 818,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:7"
													},
													{
														"assignments": [
															825
														],
														"declarations": [
															{
																"constant": false,
																"id": 825,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "2973:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 826,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:7",
																"valueSize": 1
															},
															{
																"declaration": 806,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:7",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:7",
																"valueSize": 1
															},
															{
																"declaration": 793,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:7",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:7",
																"valueSize": 1
															}
														],
														"id": 827,
														"nodeType": "InlineAssembly",
														"src": "3004:300:7"
													},
													{
														"assignments": [
															829
														],
														"declarations": [
															{
																"constant": false,
																"id": 829,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "3611:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 828,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 837,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "3626:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:7",
																			"subExpression": {
																				"id": 831,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "3642:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:7",
																"valueSize": 1
															},
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:7",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:7",
																"valueSize": 1
															}
														],
														"id": 838,
														"nodeType": "InlineAssembly",
														"src": "3672:371:7"
													},
													{
														"expression": {
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 839,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "4109:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 840,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "4118:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 841,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "4126:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 844,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:7"
													},
													{
														"assignments": [
															846
														],
														"declarations": [
															{
																"constant": false,
																"id": 846,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "4448:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 853,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 848,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "4471:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:7"
													},
													{
														"expression": {
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 854,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4704:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 856,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4719:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 857,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4733:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 861,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:7"
													},
													{
														"expression": {
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 862,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 864,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4788:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 865,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4802:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:7"
													},
													{
														"expression": {
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 870,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4843:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 872,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4858:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 873,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4872:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 877,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:7"
													},
													{
														"expression": {
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4913:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4928:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "4942:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 885,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:7"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "4983:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "4998:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "5012:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:7"
													},
													{
														"expression": {
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "5054:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "5069:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "5083:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 901,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:7"
													},
													{
														"expression": {
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 902,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "5524:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5533:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 904,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "5541:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 907,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:7"
													},
													{
														"expression": {
															"id": 908,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5569:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 801,
														"id": 909,
														"nodeType": "Return",
														"src": "5562:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1692:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1711:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1730:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:7"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1779:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:7"
									},
									"scope": 1564,
									"src": "1667:3925:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "5872:189:7",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "5882:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"id": 930,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "5906:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 931,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "5909:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 932,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5912:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															912,
															956
														],
														"referencedDeclaration": 912,
														"src": "5899:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$706",
															"typeString": "enum Math.Rounding"
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 935,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "5938:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$706",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 936,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5950:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 704,
															"src": "5950:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$706",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 940,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "5972:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 941,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "5975:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 942,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "5978:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 939,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "5934:98:7",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "5996:36:7",
													"statements": [
														{
															"expression": {
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 947,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "6010:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 953,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "6048:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 954,
												"nodeType": "Return",
												"src": "6041:13:7"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5749:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5787:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5816:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 920,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "5816:8:7"
													},
													"referencedDeclaration": 706,
													"src": "5816:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:7"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5863:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:7"
									},
									"scope": 1564,
									"src": "5724:337:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "6337:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6351:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "6347:45:7",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "6359:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 963,
															"id": 968,
															"nodeType": "Return",
															"src": "6373:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "7071:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 975,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "7099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 974,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1236,
																			1272
																		],
																		"referencedDeclaration": 1236,
																		"src": "7094:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:7"
											},
											{
												"id": 1066,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:7",
												"statements": [
													{
														"expression": {
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 982,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7532:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 983,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7542:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 984,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7551:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 985,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7555:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 988,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 992,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:7"
													},
													{
														"expression": {
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 993,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7581:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 994,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7591:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 995,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7600:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 996,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7604:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 999,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1003,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:7"
													},
													{
														"expression": {
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1004,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7630:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1005,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7640:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1006,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7649:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1007,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7653:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1010,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:7"
													},
													{
														"expression": {
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1015,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7679:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1016,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7689:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1017,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7698:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1018,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7702:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1021,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1025,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:7"
													},
													{
														"expression": {
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1026,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7728:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1027,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7738:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1028,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7747:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1029,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7751:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1032,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:7"
													},
													{
														"expression": {
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1037,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1038,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7787:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1039,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7796:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1040,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7800:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1047,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:7"
													},
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "7826:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1049,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "7836:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1050,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "7845:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1051,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "7849:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "7886:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "7894:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1062,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "7898:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1059,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7882:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 963,
														"id": 1065,
														"nodeType": "Return",
														"src": "7875:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "6294:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "6328:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:7"
									},
									"scope": 1564,
									"src": "6280:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "8098:161:7",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:7",
												"statements": [
													{
														"assignments": [
															1080
														],
														"declarations": [
															{
																"constant": false,
																"id": 1080,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "8132:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1079,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1084,
														"initialValue": {
															"arguments": [
																{
																	"id": 1082,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "8154:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1081,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1068,
																	1104
																],
																"referencedDeclaration": 1068,
																"src": "8149:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "8177:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1086,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1074,
																					"src": "8187:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1087,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "8199:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "8199:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1090,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1080,
																						"src": "8214:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1091,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1080,
																						"src": "8223:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1093,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "8232:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1078,
														"id": 1101,
														"nodeType": "Return",
														"src": "8170:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8036:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8047:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1072,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "8047:8:7"
													},
													"referencedDeclaration": 706,
													"src": "8047:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8089:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:7"
									},
									"scope": 1564,
									"src": "8022:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "8444:922:7",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "8454:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"hexValue": "30",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:7"
											},
											{
												"id": 1232,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8510:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "8506:99:7",
														"trueBody": {
															"id": 1129,
															"nodeType": "Block",
															"src": "8528:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8546:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:7"
																},
																{
																	"expression": {
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8577:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1128,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8622:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1145,
														"nodeType": "IfStatement",
														"src": "8618:96:7",
														"trueBody": {
															"id": 1144,
															"nodeType": "Block",
															"src": "8639:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8657:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1139,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:7"
																},
																{
																	"expression": {
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8687:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1143,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8731:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "8727:96:7",
														"trueBody": {
															"id": 1159,
															"nodeType": "Block",
															"src": "8748:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8766:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:7"
																},
																{
																	"expression": {
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8796:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8840:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1175,
														"nodeType": "IfStatement",
														"src": "8836:96:7",
														"trueBody": {
															"id": 1174,
															"nodeType": "Block",
															"src": "8857:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:7"
																},
																{
																	"expression": {
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "8905:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1173,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "8949:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1190,
														"nodeType": "IfStatement",
														"src": "8945:93:7",
														"trueBody": {
															"id": 1189,
															"nodeType": "Block",
															"src": "8965:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "8983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:7"
																},
																{
																	"expression": {
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9012:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1191,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9055:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1205,
														"nodeType": "IfStatement",
														"src": "9051:93:7",
														"trueBody": {
															"id": 1204,
															"nodeType": "Block",
															"src": "9071:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1196,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "9089:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:7"
																},
																{
																	"expression": {
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1200,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9118:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1203,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9161:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1220,
														"nodeType": "IfStatement",
														"src": "9157:93:7",
														"trueBody": {
															"id": 1219,
															"nodeType": "Block",
															"src": "9177:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "9195:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:7"
																},
																{
																	"expression": {
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1215,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9224:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "9267:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1231,
														"nodeType": "IfStatement",
														"src": "9263:64:7",
														"trueBody": {
															"id": 1230,
															"nodeType": "Block",
															"src": "9283:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "9301:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1233,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1113,
													"src": "9353:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1234,
												"nodeType": "Return",
												"src": "9346:13:7"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "8397:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "8435:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:7"
									},
									"scope": 1564,
									"src": "8383:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "9599:165:7",
										"statements": [
											{
												"id": 1270,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:7",
												"statements": [
													{
														"assignments": [
															1248
														],
														"declarations": [
															{
																"constant": false,
																"id": 1248,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1270,
																"src": "9633:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1247,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1252,
														"initialValue": {
															"arguments": [
																{
																	"id": 1250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "9655:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1249,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1236,
																	1272
																],
																"referencedDeclaration": 1236,
																"src": "9650:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "9682:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1254,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "9692:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1255,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "9704:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "9704:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1259,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1248,
																						"src": "9724:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1261,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1239,
																					"src": "9733:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1246,
														"id": 1269,
														"nodeType": "Return",
														"src": "9675:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9533:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9548:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1240,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "9548:8:7"
													},
													"referencedDeclaration": 706,
													"src": "9548:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:7"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "9590:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:7"
									},
									"scope": 1564,
									"src": "9519:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "9951:828:7",
										"statements": [
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9961:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"hexValue": "30",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:7"
											},
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10017:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1300,
														"nodeType": "IfStatement",
														"src": "10013:99:7",
														"trueBody": {
															"id": 1299,
															"nodeType": "Block",
															"src": "10034:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10052:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1294,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:7"
																},
																{
																	"expression": {
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10085:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1298,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10129:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1317,
														"nodeType": "IfStatement",
														"src": "10125:99:7",
														"trueBody": {
															"id": 1316,
															"nodeType": "Block",
															"src": "10146:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10164:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:7"
																},
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10197:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10241:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "10237:99:7",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "10258:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1328,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:7"
																},
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10309:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10353:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1351,
														"nodeType": "IfStatement",
														"src": "10349:96:7",
														"trueBody": {
															"id": 1350,
															"nodeType": "Block",
															"src": "10369:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10387:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:7"
																},
																{
																	"expression": {
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10419:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10462:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "10458:96:7",
														"trueBody": {
															"id": 1367,
															"nodeType": "Block",
															"src": "10478:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10496:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:7"
																},
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10528:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1369,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10571:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1385,
														"nodeType": "IfStatement",
														"src": "10567:96:7",
														"trueBody": {
															"id": 1384,
															"nodeType": "Block",
															"src": "10587:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "10605:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:7"
																},
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10637:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "10680:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1396,
														"nodeType": "IfStatement",
														"src": "10676:64:7",
														"trueBody": {
															"id": 1395,
															"nodeType": "Block",
															"src": "10696:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "10714:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1398,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "10766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1399,
												"nodeType": "Return",
												"src": "10759:13:7"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "9904:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "9942:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:7"
									},
									"scope": 1564,
									"src": "9889:890:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "11014:165:7",
										"statements": [
											{
												"id": 1435,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:7",
												"statements": [
													{
														"assignments": [
															1413
														],
														"declarations": [
															{
																"constant": false,
																"id": 1413,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1435,
																"src": "11048:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1412,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1417,
														"initialValue": {
															"arguments": [
																{
																	"id": 1415,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "11071:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1414,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1401,
																	1437
																],
																"referencedDeclaration": 1401,
																"src": "11065:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "11098:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1419,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "11108:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1420,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "11120:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "11120:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1424,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1413,
																						"src": "11139:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1426,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "11148:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1432,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1411,
														"id": 1434,
														"nodeType": "Return",
														"src": "11091:71:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "10948:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "10963:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1405,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "10963:8:7"
													},
													"referencedDeclaration": 706,
													"src": "10963:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "11005:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:7"
									},
									"scope": 1564,
									"src": "10933:246:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "11493:600:7",
										"statements": [
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "11503:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"hexValue": "30",
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:7"
											},
											{
												"id": 1520,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1449,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1463,
														"nodeType": "IfStatement",
														"src": "11555:98:7",
														"trueBody": {
															"id": 1462,
															"nodeType": "Block",
															"src": "11577:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1454,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11595:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1457,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:7"
																},
																{
																	"expression": {
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1458,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11626:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1461,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11670:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1478,
														"nodeType": "IfStatement",
														"src": "11666:95:7",
														"trueBody": {
															"id": 1477,
															"nodeType": "Block",
															"src": "11687:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11705:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1472,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:7"
																},
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11735:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11778:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1493,
														"nodeType": "IfStatement",
														"src": "11774:95:7",
														"trueBody": {
															"id": 1492,
															"nodeType": "Block",
															"src": "11795:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1484,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11813:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:7"
																},
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11843:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11886:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "11882:95:7",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "11903:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "11921:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1502,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:7"
																},
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "11951:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "11994:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1519,
														"nodeType": "IfStatement",
														"src": "11990:64:7",
														"trueBody": {
															"id": 1518,
															"nodeType": "Block",
															"src": "12010:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1514,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "12028:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1521,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1446,
													"src": "12080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1522,
												"nodeType": "Return",
												"src": "12073:13:7"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "11446:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:7"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "11484:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:7"
									},
									"scope": 1564,
									"src": "11430:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "12329:173:7",
										"statements": [
											{
												"id": 1561,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:7",
												"statements": [
													{
														"assignments": [
															1536
														],
														"declarations": [
															{
																"constant": false,
																"id": 1536,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1561,
																"src": "12363:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1535,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1540,
														"initialValue": {
															"arguments": [
																{
																	"id": 1538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "12387:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1537,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1524,
																	1563
																],
																"referencedDeclaration": 1524,
																"src": "12380:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "12414:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$706",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1542,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1530,
																					"src": "12424:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1543,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 706,
																						"src": "12436:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$706_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 704,
																					"src": "12436:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$706",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1549,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1547,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1536,
																									"src": "12457:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1548,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1550,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1552,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "12471:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1558,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1534,
														"id": 1560,
														"nodeType": "Return",
														"src": "12407:78:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12263:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12278:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$706",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1528,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "12278:8:7"
													},
													"referencedDeclaration": 706,
													"src": "12278:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$706",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:7"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12320:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:7"
									},
									"scope": 1564,
									"src": "12247:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1565,
							"src": "202:12302:7",
							"usedErrors": []
						}
					],
					"src": "103:12402:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1876
						]
					},
					"id": 1877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1876,
							"linearizedBaseContracts": [
								1876
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 1597,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															1580
														],
														"declarations": [
															{
																"constant": false,
																"id": 1580,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1597,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1584,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1582,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1585,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1586,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1592,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1578,
															"id": 1591,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1594,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1595,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1578,
														"id": 1596,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1876,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 1625,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1612,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1618,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1610,
															"id": 1617,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1620,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1621,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1623,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1610,
														"id": 1624,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1876,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 1667,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1638,
															"id": 1645,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															1648
														],
														"declarations": [
															{
																"constant": false,
																"id": 1648,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1667,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1647,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1652,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1649,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1653,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1654,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1656,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1662,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1638,
															"id": 1661,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1664,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1665,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1638,
														"id": 1666,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1876,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 1695,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1681,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1688,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1686,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1680,
															"id": 1687,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1690,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1691,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1693,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1680,
														"id": 1694,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1876,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1716,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1708,
															"id": 1715,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1718,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1719,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1721,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1708,
														"id": 1722,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1876,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1736,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1738,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1876,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1751,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1753,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1876,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1768,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1876,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1779,
												"id": 1783,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1876,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1798,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1876,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "5084:106:8",
										"statements": [
											{
												"id": 1823,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1813,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "5126:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1814,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "5131:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1816,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "5134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1812,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1818,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1819,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "5168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "5172:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1811,
														"id": 1822,
														"nodeType": "Return",
														"src": "5161:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "4981:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5000:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5019:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:8"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5075:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:8"
									},
									"scope": 1876,
									"src": "4959:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "5799:105:8",
										"statements": [
											{
												"id": 1848,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "5841:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1841,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "5848:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1837,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1843,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "5882:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1845,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "5886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1836,
														"id": 1847,
														"nodeType": "Return",
														"src": "5875:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5715:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5734:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:8"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:8"
									},
									"scope": 1876,
									"src": "5674:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "6675:105:8",
										"statements": [
											{
												"id": 1873,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1863,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "6717:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1866,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "6724:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1862,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1868,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "6758:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "6762:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1861,
														"id": 1872,
														"nodeType": "Return",
														"src": "6751:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6572:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6591:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6610:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1856,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:8"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "6666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:8"
									},
									"scope": 1876,
									"src": "6550:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1877,
							"src": "482:6300:8",
							"usedErrors": []
						}
					],
					"src": "107:6676:8"
				},
				"id": 8
			},
			"contracts/ICO.sol": {
				"ast": {
					"absolutePath": "contracts/ICO.sol",
					"exportedSymbols": {
						"AccessControl": [
							393
						],
						"Context": [
							488
						],
						"ERC165": [
							687
						],
						"IAccessControl": [
							466
						],
						"ICO": [
							2491
						],
						"IEFTT": [
							2574
						],
						"IERC165": [
							699
						],
						"IERC20": [
							77
						],
						"Math": [
							1564
						],
						"SafeMath": [
							1876
						],
						"Strings": [
							663
						]
					},
					"id": 2492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": ".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2492,
							"sourceUnit": 78,
							"src": "57:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IEFTT.sol",
							"file": "./IEFTT.sol",
							"id": 1880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2492,
							"sourceUnit": 2575,
							"src": "124:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2492,
							"sourceUnit": 1877,
							"src": "146:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2492,
							"sourceUnit": 394,
							"src": "204:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1883,
										"name": "AccessControl",
										"nameLocations": [
											"280:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "280:13:9"
									},
									"id": 1884,
									"nodeType": "InheritanceSpecifier",
									"src": "280:13:9"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2491,
							"linearizedBaseContracts": [
								2491,
								393,
								687,
								699,
								466,
								488
							],
							"name": "ICO",
							"nameLocation": "273:3:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1887,
									"libraryName": {
										"id": 1885,
										"name": "SafeMath",
										"nameLocations": [
											"305:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1876,
										"src": "305:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "299:27:9",
									"typeName": {
										"id": 1886,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "76082a5e",
									"id": 1892,
									"mutability": "constant",
									"name": "INVESTOR_ROLE",
									"nameLocation": "355:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "331:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1888,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "331:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "494e564553544f525f524f4c45",
												"id": 1890,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "381:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												},
												"value": "INVESTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												}
											],
											"id": 1889,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "371:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "371:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1897,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "427:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "403:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1893,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1895,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "451:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1894,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "441:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1896,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "441:24:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b1ac51f8",
									"id": 1902,
									"mutability": "constant",
									"name": "EXTEND_ICO_ROLE",
									"nameLocation": "495:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "471:70:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1898,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "471:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455854454e445f49434f5f524f4c45",
												"id": 1900,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "523:17:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289",
													"typeString": "literal_string \"EXTEND_ICO_ROLE\""
												},
												"value": "EXTEND_ICO_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289",
													"typeString": "literal_string \"EXTEND_ICO_ROLE\""
												}
											],
											"id": 1899,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "513:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1901,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "513:28:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1904,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "668:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "652:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1903,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "652:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1907,
									"mutability": "constant",
									"name": "METISADDRESS",
									"nameLocation": "817:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "800:74:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1905,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839453332623133636537663245383041303139333242343235353336353245303533443665643865",
										"id": 1906,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "832:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9E32b13ce7f2E80A01932B42553652E053D6ed8e"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1910,
									"mutability": "mutable",
									"name": "minters_",
									"nameLocation": "890:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "880:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1908,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "880:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1909,
										"nodeType": "ArrayTypeName",
										"src": "880:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1912,
									"mutability": "mutable",
									"name": "maxSupply_",
									"nameLocation": "912:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "904:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1915,
									"mutability": "mutable",
									"name": "timeLock",
									"nameLocation": "936:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "928:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1913,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "928:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138303030303030303030",
										"id": 1914,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "945:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18000000000_by_1",
											"typeString": "int_const 18000000000"
										},
										"value": "18000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1918,
									"mutability": "mutable",
									"name": "eftt",
									"nameLocation": "968:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "962:10:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEFTT_$2574",
										"typeString": "contract IEFTT"
									},
									"typeName": {
										"id": 1917,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1916,
											"name": "IEFTT",
											"nameLocations": [
												"962:5:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2574,
											"src": "962:5:9"
										},
										"referencedDeclaration": 2574,
										"src": "962:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEFTT_$2574",
											"typeString": "contract IEFTT"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1925,
									"mutability": "mutable",
									"name": "maxICO",
									"nameLocation": "986:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "978:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "978:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030",
											"id": 1920,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "995:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000_by_1",
												"typeString": "int_const 100000"
											},
											"value": "100000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1923,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1921,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1003:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1922,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1007:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1003:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "995:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1927,
									"mutability": "mutable",
									"name": "SoldInMetis",
									"nameLocation": "1023:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1015:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1015:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1929,
									"mutability": "mutable",
									"name": "SoldEFTT",
									"nameLocation": "1048:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1040:16:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1040:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "ratioMetis",
									"nameLocation": "1070:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1062:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1930,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1062:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1082:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1936,
									"mutability": "mutable",
									"name": "timeLocks",
									"nameLocation": "1111:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1089:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1935,
										"keyType": {
											"id": 1933,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1097:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1089:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1934,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1105:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1939,
									"mutability": "mutable",
									"name": "BURNED",
									"nameLocation": "1139:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1126:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1937,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1126:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1148:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1942,
									"mutability": "constant",
									"name": "liquidityRatio",
									"nameLocation": "1173:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1159:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1940,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1159:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1190:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1944,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1211:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1197:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1943,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1197:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1947,
									"mutability": "mutable",
									"name": "month",
									"nameLocation": "1231:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1223:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1223:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32353932303030",
										"id": 1946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1238:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "2592000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1950,
									"mutability": "mutable",
									"name": "week",
									"nameLocation": "1259:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1251:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363034383030",
										"id": 1949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1266:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "604800"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1952,
									"mutability": "immutable",
									"name": "creationtTime",
									"nameLocation": "1296:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1278:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1278:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1954,
									"mutability": "mutable",
									"name": "ICOtimeLock",
									"nameLocation": "1323:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2491,
									"src": "1315:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "1391:391:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1962,
															"name": "INVESTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "1466:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1963,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "1481:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1961,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1455:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "1455:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1967,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "1507:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1968,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "1520:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1966,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1496:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "1496:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1972,
															"name": "EXTEND_ICO_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "1546:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1973,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "1563:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1971,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1535:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "1535:33:9"
											},
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1976,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "1578:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1979,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1594:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1598:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1594:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1586:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1977,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1586:8:9",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1586:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1578:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "1578:27:9"
											},
											{
												"expression": {
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1984,
														"name": "eftt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "1615:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEFTT_$2574",
															"typeString": "contract IEFTT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1986,
																"name": "_eftt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "1628:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1985,
															"name": "IEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2574,
															"src": "1622:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IEFTT_$2574_$",
																"typeString": "type(contract IEFTT)"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1622:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEFTT_$2574",
															"typeString": "contract IEFTT"
														}
													},
													"src": "1615:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEFTT_$2574",
														"typeString": "contract IEFTT"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "1615:19:9"
											},
											{
												"expression": {
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1990,
														"name": "creationtTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "1652:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1991,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1668:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1674:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1668:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1652:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "1652:31:9"
											},
											{
												"expression": {
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1995,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "1693:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1997,
														"indexExpression": {
															"hexValue": "30",
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1703:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1693:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313131",
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1708:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_111_by_1",
															"typeString": "int_const 111"
														},
														"value": "111"
													},
													"src": "1693:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "1693:18:9"
											},
											{
												"expression": {
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2001,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "1721:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2003,
														"indexExpression": {
															"hexValue": "31",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1731:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1721:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323232",
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_222_by_1",
															"typeString": "int_const 222"
														},
														"value": "222"
													},
													"src": "1721:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "1721:18:9"
											},
											{
												"expression": {
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2007,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "1749:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2009,
														"indexExpression": {
															"hexValue": "32",
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1759:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1749:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1764:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "1749:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "1749:18:9"
											}
										]
									},
									"id": 2014,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "_eftt",
												"nameLocation": "1362:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1354:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "1377:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1369:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:29:9"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:0:9"
									},
									"scope": 2491,
									"src": "1342:440:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 2018,
									"name": "Log",
									"nameLocation": "1795:3:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"indexed": false,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "1806:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1799:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1799:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:13:9"
									},
									"src": "1789:23:9"
								},
								{
									"anonymous": false,
									"eventSelector": "92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727",
									"id": 2022,
									"name": "Sold",
									"nameLocation": "1823:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1828:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1828:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1827:6:9"
									},
									"src": "1817:17:9"
								},
								{
									"anonymous": false,
									"eventSelector": "d83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e",
									"id": 2026,
									"name": "Burned",
									"nameLocation": "1845:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "1852:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:6:9"
									},
									"src": "1839:19:9"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "1886:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2029,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1904:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1910:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1904:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2031,
																"name": "timeLock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "1922:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1904:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f206973206f766572203a2820",
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1931:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															},
															"value": "ICO is over :( "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															}
														],
														"id": 2028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1896:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "1896:53:9"
											},
											{
												"id": 2036,
												"nodeType": "PlaceholderStatement",
												"src": "1959:1:9"
											}
										]
									},
									"id": 2038,
									"name": "_timeCheck",
									"nameLocation": "1874:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:9"
									},
									"src": "1865:102:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "1994:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2012:7:9",
															"subExpression": {
																"id": 2041,
																"name": "BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "2013:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74686520737570706c7920697320616c7265616479206275726e6564",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																"typeString": "literal_string \"the supply is already burned\""
															},
															"value": "the supply is already burned"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																"typeString": "literal_string \"the supply is already burned\""
															}
														],
														"id": 2040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2004:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "2004:47:9"
											},
											{
												"id": 2046,
												"nodeType": "PlaceholderStatement",
												"src": "2061:1:9"
											},
											{
												"expression": {
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2047,
														"name": "BURNED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "2072:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2081:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2072:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "2072:13:9"
											}
										]
									},
									"id": 2052,
									"name": "_burnCheck",
									"nameLocation": "1982:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1992:2:9"
									},
									"src": "1973:119:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2118:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2055,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "2136:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2056,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2145:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2149:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2145:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2136:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75277265206e6f7420746865206f776e6572",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															},
															"value": "You're not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															}
														],
														"id": 2054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2128:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "2128:51:9"
											},
											{
												"id": 2062,
												"nodeType": "PlaceholderStatement",
												"src": "2189:1:9"
											}
										]
									},
									"id": 2064,
									"name": "_onlyOwner",
									"nameLocation": "2106:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2116:2:9"
									},
									"src": "2097:100:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "2229:109:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2247:7:9",
															"subExpression": {
																"id": 2067,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "2248:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072652d656e7472616e6379",
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
																"typeString": "literal_string \"No re-entrancy\""
															},
															"value": "No re-entrancy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
																"typeString": "literal_string \"No re-entrancy\""
															}
														],
														"id": 2066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "2239:34:9"
											},
											{
												"expression": {
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2072,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "2283:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2292:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2283:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "2283:13:9"
											},
											{
												"id": 2076,
												"nodeType": "PlaceholderStatement",
												"src": "2306:1:9"
											},
											{
												"expression": {
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2077,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "2317:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2326:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2317:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "2317:14:9"
											}
										]
									},
									"id": 2082,
									"name": "_noReentry",
									"nameLocation": "2216:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:2:9"
									},
									"src": "2207:131:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "2375:104:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "66616c6c6261636b20686974",
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2442:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															},
															"value": "fallback hit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															}
														],
														"id": 2085,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "2438:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2438:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2088,
												"nodeType": "EmitStatement",
												"src": "2433:24:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2089,
														"name": "buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2160,
														"src": "2467:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2467:5:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "2467:5:9"
											}
										]
									},
									"id": 2093,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:2:9"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:9"
									},
									"scope": 2491,
									"src": "2348:131:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "2540:411:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2558:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2562:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2558:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2570:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2558:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20706c656173652073656e64206d65746973",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2572:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb",
																"typeString": "literal_string \" please send metis\""
															},
															"value": " please send metis"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efa4272df5251353d1665915e921ebce595929b77d4a188bf3901967bf1327cb",
																"typeString": "literal_string \" please send metis\""
															}
														],
														"id": 2100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2550:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2550:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "2550:43:9"
											},
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "buyAmount",
														"nameLocation": "2611:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 2159,
														"src": "2603:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2603:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2114,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2634:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2638:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2634:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2110,
														"name": "conversion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "2623:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2603:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "buyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2663:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2117,
																	"name": "SoldEFTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "2675:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2663:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2119,
																"name": "maxICO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "2686:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2663:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2694:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															},
															"value": "exceeds the total for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															}
														],
														"id": 2115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2655:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "2655:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2129,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2755:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2747:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2747:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2747:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2131,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2762:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2124,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "2733:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2574",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2738:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2556,
														"src": "2733:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2733:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "2733:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2796:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2800:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2796:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2139,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2808:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2134,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "2782:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2574",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2787:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2536,
														"src": "2782:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2782:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "2782:36:9"
											},
											{
												"expression": {
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2142,
														"name": "SoldEFTT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "2828:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2143,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2839:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2144,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "2851:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2839:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2828:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "2828:31:9"
											},
											{
												"expression": {
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2148,
														"name": "SoldInMetis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "2869:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2149,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2884:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2888:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2884:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2869:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2152,
												"nodeType": "ExpressionStatement",
												"src": "2869:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2154,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2913:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2153,
														"name": "Sold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "2908:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2156,
												"nodeType": "EmitStatement",
												"src": "2903:20:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2940:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2099,
												"id": 2158,
												"nodeType": "Return",
												"src": "2933:11:9"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2095,
												"name": "_timeCheck",
												"nameLocations": [
													"2516:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2038,
												"src": "2516:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2516:10:9"
										}
									],
									"name": "buy",
									"nameLocation": "2495:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2498:2:9"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2535:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2535:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:6:9"
									},
									"scope": 2491,
									"src": "2486:465:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "3021:630:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2168,
															"name": "creationtTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "3045:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2169,
																"name": "month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "3061:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3069:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3061:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3045:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2173,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3074:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3080:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3074:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3045:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "creationtTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "3284:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2203,
																	"name": "month",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "3300:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3132",
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3308:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	},
																	"value": "12"
																},
																"src": "3300:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3284:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2207,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3313:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3319:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3313:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3284:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2226,
																	"name": "creationtTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "3466:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2227,
																		"name": "month",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "3482:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "3482:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3466:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2231,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3494:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3500:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3494:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3466:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2250,
														"nodeType": "IfStatement",
														"src": "3461:175:9",
														"trueBody": {
															"id": 2249,
															"nodeType": "Block",
															"src": "3510:126:9",
															"statements": [
																{
																	"assignments": [
																		2235
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2235,
																			"mutability": "mutable",
																			"name": "convertedAmnt",
																			"nameLocation": "3532:13:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 2249,
																			"src": "3524:21:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2234,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3524:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2239,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 2237,
																				"name": "_amnt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "3562:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2236,
																			"name": "percentFromICO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2471,
																			"src": "3547:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3547:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3524:44:9"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2246,
																				"name": "convertedAmnt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2235,
																				"src": "3611:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2242,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3590:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 2243,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3594:6:9",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3590:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3582:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 2240,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3582:8:9",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3582:19:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3602:8:9",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"src": "3582:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																				"typeString": "function (uint256)"
																			}
																		},
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3582:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2248,
																	"nodeType": "ExpressionStatement",
																	"src": "3582:43:9"
																}
															]
														}
													},
													"id": 2251,
													"nodeType": "IfStatement",
													"src": "3279:357:9",
													"trueBody": {
														"id": 2225,
														"nodeType": "Block",
														"src": "3329:126:9",
														"statements": [
															{
																"assignments": [
																	2211
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2211,
																		"mutability": "mutable",
																		"name": "convertedAmnt",
																		"nameLocation": "3351:13:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 2225,
																		"src": "3343:21:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2210,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3343:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2215,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2213,
																			"name": "_amnt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2162,
																			"src": "3381:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2212,
																		"name": "percentFromICO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "3366:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3366:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3343:44:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2222,
																			"name": "convertedAmnt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "3430:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2218,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3409:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3413:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3409:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3401:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2216,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3401:8:9",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3401:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3421:8:9",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"src": "3401:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3401:43:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2224,
																"nodeType": "ExpressionStatement",
																"src": "3401:43:9"
															}
														]
													}
												},
												"id": 2252,
												"nodeType": "IfStatement",
												"src": "3040:596:9",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "3090:183:9",
													"statements": [
														{
															"assignments": [
																2177
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2177,
																	"mutability": "mutable",
																	"name": "convertedAmnt",
																	"nameLocation": "3112:13:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2201,
																	"src": "3104:21:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2176,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3104:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2181,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2179,
																		"name": "_amnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "3142:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2178,
																	"name": "percentFromICO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2471,
																	"src": "3127:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3127:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3104:44:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2187,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3184:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ICO_$2491",
																					"typeString": "contract ICO"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ICO_$2491",
																					"typeString": "contract ICO"
																				}
																			],
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3176:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2185,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3176:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3176:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2189,
																		"name": "convertedAmnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "3191:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2182,
																		"name": "eftt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "3162:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEFTT_$2574",
																			"typeString": "contract IEFTT"
																		}
																	},
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3167:7:9",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2556,
																	"src": "3162:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3162:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2191,
															"nodeType": "ExpressionStatement",
															"src": "3162:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2198,
																		"name": "convertedAmnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "3248:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2194,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3227:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3231:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3227:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3219:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2192,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3219:8:9",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3219:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3239:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3219:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3219:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2200,
															"nodeType": "ExpressionStatement",
															"src": "3219:43:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2165,
													"name": "INVESTOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1892,
													"src": "2999:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2164,
												"name": "onlyRole",
												"nameLocations": [
													"2990:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "2990:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2990:23:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "2966:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "2983:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "2975:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:15:9"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3021:0:9"
									},
									"scope": 2491,
									"src": "2957:694:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "3725:118:9",
										"statements": [
											{
												"assignments": [
													2265
												],
												"declarations": [
													{
														"constant": false,
														"id": 2265,
														"mutability": "mutable",
														"name": "burnAmnt",
														"nameLocation": "3743:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 2282,
														"src": "3735:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3735:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2268,
																	"name": "SoldEFTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "3766:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2266,
																	"name": "maxICO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "3755:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3762:3:9",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1755,
																"src": "3755:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3755:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2270,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3754:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3735:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2275,
															"name": "burnAmnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "3796:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2272,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "3786:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2574",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3791:4:9",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2573,
														"src": "3786:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "3786:19:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2279,
															"name": "burnAmnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "3827:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2278,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "3820:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2281,
												"nodeType": "EmitStatement",
												"src": "3815:21:9"
											}
										]
									},
									"functionSelector": "4f248409",
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2256,
												"name": "_timeCheck",
												"nameLocations": [
													"3682:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2038,
												"src": "3682:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3682:10:9"
										},
										{
											"arguments": [
												{
													"id": 2259,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1897,
													"src": "3702:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2258,
												"name": "onlyRole",
												"nameLocations": [
													"3693:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "3693:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3693:21:9"
										},
										{
											"id": 2262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2261,
												"name": "_burnCheck",
												"nameLocations": [
													"3715:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2052,
												"src": "3715:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3715:10:9"
										}
									],
									"name": "endICO",
									"nameLocation": "3666:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3672:2:9"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3725:0:9"
									},
									"scope": 2491,
									"src": "3657:186:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "3903:817:9",
										"statements": [
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "metisLiquidity",
														"nameLocation": "4035:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 2326,
														"src": "4027:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4027:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2297,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2291,
														"name": "SoldInMetis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "4052:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 2294,
																"name": "liquidityRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4082:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2292,
																"name": "SoldInMetis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "4066:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4078:3:9",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1785,
															"src": "4066:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4066:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4052:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4027:70:9"
											},
											{
												"assignments": [
													2299
												],
												"declarations": [
													{
														"constant": false,
														"id": 2299,
														"mutability": "mutable",
														"name": "efttLiquidity",
														"nameLocation": "4115:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2326,
														"src": "4107:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4107:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"initialValue": {
													"arguments": [
														{
															"id": 2302,
															"name": "ratioMetis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "4150:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2300,
															"name": "metisLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "4131:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4146:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "4131:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4131:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4107:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4208:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4200:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4200:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4200:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2313,
															"name": "metisLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "4214:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2306,
																	"name": "METISADDRESS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "4178:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2305,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "4171:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4171:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4192:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "4171:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "4171:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2321,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4260:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2491",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4252:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2319,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4252:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4252:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2323,
															"name": "efttLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "4267:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2316,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "4239:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2574",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4244:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2556,
														"src": "4239:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4239:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "4239:42:9"
											}
										]
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2286,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1897,
													"src": "3891:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2285,
												"name": "onlyRole",
												"nameLocations": [
													"3882:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "3882:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3882:21:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3859:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3871:2:9"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3903:0:9"
									},
									"scope": 2491,
									"src": "3850:870:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "4815:274:9",
										"statements": [
											{
												"assignments": [
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "paris",
														"nameLocation": "4842:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2350,
														"src": "4834:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4834:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2347,
												"initialValue": {
													"arguments": [
														{
															"id": 2340,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "4858:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2343,
																	"name": "eftt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "4874:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IEFTT_$2574",
																		"typeString": "contract IEFTT"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IEFTT_$2574",
																		"typeString": "contract IEFTT"
																	}
																],
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4866:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4866:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4866:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2345,
															"name": "METISADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4881:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2339,
														"name": "pairFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "4850:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address,address) pure returns (address)"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4834:60:9"
											},
											{
												"expression": {
													"id": 2348,
													"name": "paris",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2338,
													"src": "5077:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2336,
												"id": 2349,
												"nodeType": "Return",
												"src": "5070:12:9"
											}
										]
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2332,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1897,
													"src": "4786:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2331,
												"name": "onlyRole",
												"nameLocations": [
													"4777:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "4777:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4777:21:9"
										}
									],
									"name": "createPool",
									"nameLocation": "4735:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "4754:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "4746:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:17:9"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "4807:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4806:9:9"
									},
									"scope": 2491,
									"src": "4726:363:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "5249:238:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "5267:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2364,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "5277:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5267:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5285:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ddc3ca35a8b7ccaa016ab70252fdf3396ded4f4fd8375f95b1e9d99790fcdca",
																"typeString": "literal_string \"UniswapV2Library: IDENTICAL_ADDRESSES\""
															},
															"value": "UniswapV2Library: IDENTICAL_ADDRESSES"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ddc3ca35a8b7ccaa016ab70252fdf3396ded4f4fd8375f95b1e9d99790fcdca",
																"typeString": "literal_string \"UniswapV2Library: IDENTICAL_ADDRESSES\""
															}
														],
														"id": 2362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5259:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5259:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "5259:66:9"
											},
											{
												"expression": {
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2369,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "5336:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2370,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "5344:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 2371,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5335:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2372,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "5354:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2373,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "5363:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5354:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 2378,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "5392:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2379,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "5400:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5391:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"id": 2381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5354:53:9",
														"trueExpression": {
															"components": [
																{
																	"id": 2375,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "5373:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2376,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "5381:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2377,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5372:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"src": "5335:72:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2383,
												"nodeType": "ExpressionStatement",
												"src": "5335:72:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2385,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "5425:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5443:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5435:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5435:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5435:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5425:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e697377617056324c6962726172793a205a45524f5f41444452455353",
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5447:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db0dda5a73ac3122e17df097fa2cbce2c5161b45d20c7d6cf363d3b147392c83",
																"typeString": "literal_string \"UniswapV2Library: ZERO_ADDRESS\""
															},
															"value": "UniswapV2Library: ZERO_ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db0dda5a73ac3122e17df097fa2cbce2c5161b45d20c7d6cf363d3b147392c83",
																"typeString": "literal_string \"UniswapV2Library: ZERO_ADDRESS\""
															}
														],
														"id": 2384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5417:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "5417:63:9"
											}
										]
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sortTokens",
									"nameLocation": "5151:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5170:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "5162:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5186:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "5178:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:32:9"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "5225:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "5217:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "5241:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "5233:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:32:9"
									},
									"scope": 2491,
									"src": "5142:345:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2442,
										"nodeType": "Block",
										"src": "5596:379:9",
										"statements": [
											{
												"assignments": [
													2407,
													2409
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "5615:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2442,
														"src": "5607:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2406,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5607:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "5631:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2442,
														"src": "5623:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5623:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2414,
												"initialValue": {
													"arguments": [
														{
															"id": 2411,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "5652:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2412,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "5660:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2410,
														"name": "sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "5641:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5606:61:9"
											},
											{
												"expression": {
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2415,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "5677:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "ff",
																								"id": 2425,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "hexString",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5752:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								}
																							},
																							{
																								"id": 2426,
																								"name": "factory",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2397,
																								"src": "5777:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"id": 2430,
																												"name": "token0",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2407,
																												"src": "5829:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"id": 2431,
																												"name": "token1",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2409,
																												"src": "5837:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											],
																											"expression": {
																												"id": 2428,
																												"name": "abi",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967295,
																												"src": "5812:3:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_abi",
																													"typeString": "abi"
																												}
																											},
																											"id": 2429,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "5816:12:9",
																											"memberName": "encodePacked",
																											"nodeType": "MemberAccess",
																											"src": "5812:16:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																												"typeString": "function () pure returns (bytes memory)"
																											}
																										},
																										"id": 2432,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5812:32:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 2427,
																									"name": "keccak256",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967288,
																									"src": "5802:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																										"typeString": "function (bytes memory) pure returns (bytes32)"
																									}
																								},
																								"id": 2433,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5802:43:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"hexValue": "96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f",
																								"id": 2434,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "hexString",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5863:69:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_66d76495d34dc7613deaf40ec013ef0fbd2f03604ae509b7212971c455edfb7a",
																									"typeString": "literal_string hex\"96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\""
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_66d76495d34dc7613deaf40ec013ef0fbd2f03604ae509b7212971c455edfb7a",
																									"typeString": "literal_string hex\"96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\""
																								}
																							],
																							"expression": {
																								"id": 2423,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "5718:3:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2424,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "5722:12:9",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "5718:16:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 2435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5718:246:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2422,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "5708:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5708:257:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5700:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2420,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5700:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5700:266:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5692:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2418,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "5692:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5692:275:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5684:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2416,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5684:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5684:284:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5677:291:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "5677:291:9"
											}
										]
									},
									"id": 2443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairFor",
									"nameLocation": "5502:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "5518:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "5510:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5510:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5535:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "5527:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5551:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "5543:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5509:49:9"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "5590:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "5582:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5581:14:9"
									},
									"scope": 2491,
									"src": "5493:482:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "6045:46:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2452,
																	"name": "ratioMetis",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "6072:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2450,
																	"name": "_amnt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2445,
																	"src": "6062:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6068:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1770,
																"src": "6062:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6062:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2454,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6061:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2449,
												"id": 2455,
												"nodeType": "Return",
												"src": "6055:29:9"
											}
										]
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "conversion",
									"nameLocation": "5990:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "6009:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "6001:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6000:15:9"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "6037:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:9:9"
									},
									"scope": 2491,
									"src": "5981:110:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "6165:48:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2466,
																"name": "soldPercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "6192:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2464,
															"name": "_amnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "6182:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:3:9",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1770,
														"src": "6182:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6182:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2463,
												"id": 2469,
												"nodeType": "Return",
												"src": "6175:31:9"
											}
										]
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentFromICO",
									"nameLocation": "6106:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "6129:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "6121:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6120:15:9"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "6157:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6156:9:9"
									},
									"scope": 2491,
									"src": "6097:116:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "6271:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2478,
															"name": "maxICO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "6301:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2476,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "6288:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6297:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "6288:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6288:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2475,
												"id": 2480,
												"nodeType": "Return",
												"src": "6281:27:9"
											}
										]
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "soldPercent",
									"nameLocation": "6228:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6239:2:9"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "6263:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6262:9:9"
									},
									"scope": 2491,
									"src": "6219:96:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "6363:30:9",
										"statements": [
											{
												"expression": {
													"id": 2487,
													"name": "BURNED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1939,
													"src": "6380:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2488,
												"nodeType": "Return",
												"src": "6373:13:9"
											}
										]
									},
									"functionSelector": "73f42561",
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burned",
									"nameLocation": "6329:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6335:2:9"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "6358:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6358:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6357:6:9"
									},
									"scope": 2491,
									"src": "6320:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2492,
							"src": "264:6131:9",
							"usedErrors": []
						}
					],
					"src": "32:6363:9"
				},
				"id": 9
			},
			"contracts/IEFTT.sol": {
				"ast": {
					"absolutePath": "contracts/IEFTT.sol",
					"exportedSymbols": {
						"IEFTT": [
							2574
						]
					},
					"id": 2575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEFTT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2494,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:10",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2574,
							"linearizedBaseContracts": [
								2574
							],
							"name": "IEFTT",
							"nameLocation": "212:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "224:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2503,
									"name": "Transfer",
									"nameLocation": "393:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "418:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "402:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "440:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "424:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "452:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "444:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:57:10"
									},
									"src": "387:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "465:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2512,
									"name": "Approval",
									"nameLocation": "624:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "649:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "633:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "672:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "656:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "689:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "681:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:63:10"
									},
									"src": "618:78:10"
								},
								{
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "702:66:10",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "782:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:10"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "819:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:10"
									},
									"scope": 2574,
									"src": "773:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "834:72:10",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "930:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:10"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "970:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:10"
									},
									"scope": 2574,
									"src": "911:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2527,
										"nodeType": "StructuredDocumentation",
										"src": "985:202:10",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1201:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1218:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "1210:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1230:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "1222:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:28:10"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "1256:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:10"
									},
									"scope": 2574,
									"src": "1192:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "1268:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1546:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1564:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1556:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1579:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1571:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:32:10"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1611:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:9:10"
									},
									"scope": 2574,
									"src": "1537:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "1626:642:10",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2282:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2298:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2290:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2315:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2307:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:33:10"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "2341:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2341:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:6:10"
									},
									"scope": 2574,
									"src": "2273:74:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "2353:287:10",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2654:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2684:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "2676:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2706:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "2698:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2726:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "2718:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:72:10"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "2757:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:6:10"
									},
									"scope": 2574,
									"src": "2645:118:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2778:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2791:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2783:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:16:10"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:0:10"
									},
									"scope": 2574,
									"src": "2769:39:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2575,
							"src": "202:2608:10",
							"usedErrors": []
						}
					],
					"src": "106:2705:10"
				},
				"id": 10
			}
		}
	}
}
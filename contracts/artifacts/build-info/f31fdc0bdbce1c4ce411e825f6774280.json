{
	"id": "f31fdc0bdbce1c4ce411e825f6774280",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ICO.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n//import \".deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IEFTT.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ICO is AccessControl{\n    using SafeMath for uint256;\n    bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n    bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\");\n\n    address payable owner;\n    address payable private devAddress;\n    address constant burnAddres =0x000000000000000000000000000000000000dEaD;\n    address[] minters_;\n    uint256 maxSupply_;\n    uint256 timeLock=18000000000;\n    IEFTT eftt;\n    uint256 maxICO = 100000 *10**18;\n    uint256 SoldInMetis;\n    uint256 SoldEFTT;\n    uint256 ratioMetis =1;\n    mapping(uint => uint) timeLocks;\n    bool private BURNED = false;\n    bool internal locked;\n    uint256 month =2592000;\n    uint256 week = 604800;\n    uint256 immutable creationtTime;\n    uint256 ICOtimeLock;\n\n\n    constructor(address _eftt, address _dev) payable {\n        //below might have to obfuscate with for loop\n        _grantRole(INVESTOR_ROLE, _dev);\n        _grantRole(BURNER_ROLE, _dev);\n        _grantRole(EXTEND_ICO_ROLE, _dev);\n        owner = payable(msg.sender);\n        eftt = IEFTT(_eftt);\n        devAddress = payable(_dev);\n        creationtTime = block.timestamp;\n        timeLocks[0] = 111;\n        timeLocks[1] = 222;\n        timeLocks[2] = 333;\n            }\n\n\n    event Log(string func);\n    event Sold(uint);\n \n    modifier _timeCheck(){\n        require(block.timestamp < timeLock,\"ICO is over :( \");\n        _;\n    }\n\n    modifier _burnCheck(){\n        require(!BURNED,\"the supply is already burned\");\n        _;\n        BURNED = true;\n    }\n    modifier _onlyOwner(){\n        require(owner == msg.sender,\"You're not the owner\");\n        _;\n    }\n    \n    modifier _noReentry() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n    \n    receive() external payable {\n        //add in if just metis sent to contract\n        emit Log(\"fallback hit\");\n        buy();\n    }\n\n\n    function buy() public payable _timeCheck returns(bool){\n        require(msg.value > 0,\"them/they please send metis\");\n        uint256 buyAmount = conversion(msg.value);\n\n        require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\");\n        eftt.approve( address(this), buyAmount);\n        eftt.transfer(msg.sender, buyAmount);\n        SoldEFTT = buyAmount + SoldEFTT;\n        emit Sold(buyAmount);\n        return true;\n    }\n\n    function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {\n        \n        if ( creationtTime + month * 18 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            eftt.approve( address(this), convertedAmnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        } else if ( creationtTime + month * 12 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        } else if ( creationtTime + month * 6 > block.timestamp){\n            uint256 convertedAmnt =percentFromICO(_amnt);\n            payable(msg.sender).transfer(convertedAmnt);\n        }\n        \n    }\n\n    function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{\n        uint256 burnAmnt = (maxICO.sub(SoldEFTT));\n        eftt.burn(burnAmnt);\n        // eftt.allowance( address(this), payable(burnAddres));\n        // eftt.transfer(payable(burnAddres),burnAmnt);\n    }\n\n    function conversion(uint256 _amnt) private view returns(uint256){\n        return(_amnt.mul(ratioMetis));\n    }\n\n    function percentFromICO(uint256 _amnt) private view returns(uint256){\n        return _amnt.mul(soldPercent());\n    }\n\n    function soldPercent() private view returns(uint256){\n        return SoldEFTT.div(maxICO);\n    }\n    function burned() public view returns(bool){\n        return BURNED;\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/IEFTT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IEFTT {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    function burn(uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ICO.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eftt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dev",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "func",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Sold",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EXTEND_ICO_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INVESTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burned",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amnt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ICO.sol\":266:4107  contract ICO is AccessControl{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ICO.sol\":759:770  18000000000 */\n  0x0430e23400\n    /* \"contracts/ICO.sol\":742:770  uint256 timeLock=18000000000 */\n  0x05\n  sstore\n    /* \"contracts/ICO.sol\":809:823  100000 *10**18 */\n  0x152d02c7e14af6800000\n    /* \"contracts/ICO.sol\":792:823  uint256 maxICO = 100000 *10**18 */\n  0x07\n  sstore\n    /* \"contracts/ICO.sol\":896:897  1 */\n  0x01\n    /* \"contracts/ICO.sol\":876:897  uint256 ratioMetis =1 */\n  0x0a\n  sstore\n    /* \"contracts/ICO.sol\":962:967  false */\n  0x00\n    /* \"contracts/ICO.sol\":940:967  bool private BURNED = false */\n  0x0c\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1014:1021  2592000 */\n  0x278d00\n    /* \"contracts/ICO.sol\":999:1021  uint256 month =2592000 */\n  0x0d\n  sstore\n    /* \"contracts/ICO.sol\":1042:1048  604800 */\n  0x093a80\n    /* \"contracts/ICO.sol\":1027:1048  uint256 week = 604800 */\n  0x0e\n  sstore\n    /* \"contracts/ICO.sol\":1118:1586  constructor(address _eftt, address _dev) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/ICO.sol\":1231:1262  _grantRole(INVESTOR_ROLE, _dev) */\n  tag_5\n    /* \"contracts/ICO.sol\":373:399  keccak256(\"INVESTOR_ROLE\") */\n  0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n    /* \"contracts/ICO.sol\":1257:1261  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1231:1241  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1231:1262  _grantRole(INVESTOR_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/ICO.sol\":1272:1301  _grantRole(BURNER_ROLE, _dev) */\n  tag_7\n    /* \"contracts/ICO.sol\":443:467  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"contracts/ICO.sol\":1296:1300  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1272:1282  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1272:1301  _grantRole(BURNER_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/ICO.sol\":1311:1344  _grantRole(EXTEND_ICO_ROLE, _dev) */\n  tag_8\n    /* \"contracts/ICO.sol\":515:543  keccak256(\"EXTEND_ICO_ROLE\") */\n  0x305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289\n    /* \"contracts/ICO.sol\":1339:1343  _dev */\n  dup3\n    /* \"contracts/ICO.sol\":1311:1321  _grantRole */\n  shl(0x20, tag_6)\n    /* \"contracts/ICO.sol\":1311:1344  _grantRole(EXTEND_ICO_ROLE, _dev) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/ICO.sol\":1370:1380  msg.sender */\n  caller\n    /* \"contracts/ICO.sol\":1354:1359  owner */\n  0x01\n  0x00\n    /* \"contracts/ICO.sol\":1354:1381  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1404:1409  _eftt */\n  dup2\n    /* \"contracts/ICO.sol\":1391:1395  eftt */\n  0x06\n  0x00\n    /* \"contracts/ICO.sol\":1391:1410  eftt = IEFTT(_eftt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1441:1445  _dev */\n  dup1\n    /* \"contracts/ICO.sol\":1420:1430  devAddress */\n  0x02\n  0x00\n    /* \"contracts/ICO.sol\":1420:1446  devAddress = payable(_dev) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1472:1487  block.timestamp */\n  timestamp\n    /* \"contracts/ICO.sol\":1456:1487  creationtTime = block.timestamp */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ICO.sol\":1512:1515  111 */\n  0x6f\n    /* \"contracts/ICO.sol\":1497:1506  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1497:1509  timeLocks[0] */\n  0x00\n    /* \"contracts/ICO.sol\":1507:1508  0 */\n  dup1\n    /* \"contracts/ICO.sol\":1497:1509  timeLocks[0] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1497:1515  timeLocks[0] = 111 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1540:1543  222 */\n  0xde\n    /* \"contracts/ICO.sol\":1525:1534  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1525:1537  timeLocks[1] */\n  0x00\n    /* \"contracts/ICO.sol\":1535:1536  1 */\n  0x01\n    /* \"contracts/ICO.sol\":1525:1537  timeLocks[1] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1525:1543  timeLocks[1] = 222 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1568:1571  333 */\n  0x014d\n    /* \"contracts/ICO.sol\":1553:1562  timeLocks */\n  0x0b\n    /* \"contracts/ICO.sol\":1553:1565  timeLocks[2] */\n  0x00\n    /* \"contracts/ICO.sol\":1563:1564  2 */\n  0x02\n    /* \"contracts/ICO.sol\":1553:1565  timeLocks[2] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICO.sol\":1553:1571  timeLocks[2] = 333 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICO.sol\":1118:1586  constructor(address _eftt, address _dev) payable {... */\n  pop\n  pop\n    /* \"contracts/ICO.sol\":266:4107  contract ICO is AccessControl{... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_2:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ICO.sol\":266:4107  contract ICO is AccessControl{... */\ntag_9:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6e70f41b0ebc8971243af82fe8a69025c90fb92c960359b66a1ee7d55a695397\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ICO.sol\":266:4107  contract ICO is AccessControl{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73f42561\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb1ac51f8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x73f42561\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x76082a5e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f248409\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/ICO.sol\":2218:2237  Log(\"fallback hit\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":2247:2252  buy() */\n      tag_24\n        /* \"contracts/ICO.sol\":2247:2250  buy */\n      tag_25\n        /* \"contracts/ICO.sol\":2247:2252  buy() */\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/ICO.sol\":266:4107  contract ICO is AccessControl{... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":405:467  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":2712:3406  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ICO.sol\":3412:3687  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/ICO.sol\":4032:4105  function burned() public view returns(bool){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":333:399  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":2266:2706  function buy() public payable _timeCheck returns(bool){... */\n    tag_14:\n      tag_78\n      tag_25\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICO.sol\":473:543  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/ICO.sol\":2266:2706  function buy() public payable _timeCheck returns(bool){... */\n    tag_25:\n        /* \"contracts/ICO.sol\":2315:2319  bool */\n      0x00\n        /* \"contracts/ICO.sol\":1702:1710  timeLock */\n      sload(0x05)\n        /* \"contracts/ICO.sol\":1684:1699  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1684:1710  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1676:1729  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/ICO.sol\":2350:2351  0 */\n      0x00\n        /* \"contracts/ICO.sol\":2338:2347  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":2338:2351  msg.value > 0 */\n      gt\n        /* \"contracts/ICO.sol\":2330:2382  require(msg.value > 0,\"them/they please send metis\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/ICO.sol\":2392:2409  uint256 buyAmount */\n      0x00\n        /* \"contracts/ICO.sol\":2412:2433  conversion(msg.value) */\n      tag_96\n        /* \"contracts/ICO.sol\":2423:2432  msg.value */\n      callvalue\n        /* \"contracts/ICO.sol\":2412:2422  conversion */\n      tag_97\n        /* \"contracts/ICO.sol\":2412:2433  conversion(msg.value) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ICO.sol\":2392:2433  uint256 buyAmount = conversion(msg.value) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":2475:2481  maxICO */\n      sload(0x07)\n        /* \"contracts/ICO.sol\":2464:2472  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":2452:2461  buyAmount */\n      dup3\n        /* \"contracts/ICO.sol\":2452:2472  buyAmount + SoldEFTT */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/ICO.sol\":2452:2481  buyAmount + SoldEFTT < maxICO */\n      lt\n        /* \"contracts/ICO.sol\":2444:2512  require(buyAmount + SoldEFTT < maxICO, \"exceeds the total for sale\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/ICO.sol\":2522:2526  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2522:2534  eftt.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/ICO.sol\":2544:2548  this */\n      address\n        /* \"contracts/ICO.sol\":2551:2560  buyAmount */\n      dup4\n        /* \"contracts/ICO.sol\":2522:2561  eftt.approve( address(this), buyAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts/ICO.sol\":2571:2575  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2571:2584  eftt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ICO.sol\":2585:2595  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2597:2606  buyAmount */\n      dup4\n        /* \"contracts/ICO.sol\":2571:2607  eftt.transfer(msg.sender, buyAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/ICO.sol\":2640:2648  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":2628:2637  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2628:2648  buyAmount + SoldEFTT */\n      tag_113\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_113:\n        /* \"contracts/ICO.sol\":2617:2625  SoldEFTT */\n      0x09\n        /* \"contracts/ICO.sol\":2617:2648  SoldEFTT = buyAmount + SoldEFTT */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":2663:2678  Sold(buyAmount) */\n      0x92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727\n        /* \"contracts/ICO.sol\":2668:2677  buyAmount */\n      dup2\n        /* \"contracts/ICO.sol\":2663:2678  Sold(buyAmount) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ICO.sol\":2695:2699  true */\n      0x01\n        /* \"contracts/ICO.sol\":2688:2699  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ICO.sol\":2266:2706  function buy() public payable _timeCheck returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_117\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":405:467  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_42:\n        /* \"contracts/ICO.sol\":443:467  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/ICO.sol\":405:467  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ICO.sol\":2712:3406  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n    tag_48:\n        /* \"contracts/ICO.sol\":373:399  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ICO.sol\":2829:2844  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":2824:2826  18 */\n      0x12\n        /* \"contracts/ICO.sol\":2816:2821  month */\n      sload(0x0d)\n        /* \"contracts/ICO.sol\":2816:2826  month * 18 */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/ICO.sol\":2800:2813  creationtTime */\n      immutable(\"0x6e70f41b0ebc8971243af82fe8a69025c90fb92c960359b66a1ee7d55a695397\")\n        /* \"contracts/ICO.sol\":2800:2826  creationtTime + month * 18 */\n      tag_127\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_127:\n        /* \"contracts/ICO.sol\":2800:2844  creationtTime + month * 18 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":2795:3391  if ( creationtTime + month * 18 > block.timestamp){... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/ICO.sol\":2859:2880  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":2882:2903  percentFromICO(_amnt) */\n      tag_129\n        /* \"contracts/ICO.sol\":2897:2902  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":2882:2896  percentFromICO */\n      tag_130\n        /* \"contracts/ICO.sol\":2882:2903  percentFromICO(_amnt) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/ICO.sol\":2859:2903  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":2917:2921  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2917:2929  eftt.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/ICO.sol\":2939:2943  this */\n      address\n        /* \"contracts/ICO.sol\":2946:2959  convertedAmnt */\n      dup4\n        /* \"contracts/ICO.sol\":2917:2960  eftt.approve( address(this), convertedAmnt) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_134:\n      pop\n        /* \"contracts/ICO.sol\":2982:2992  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":2974:3002  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":2974:3017  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3003:3016  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":2974:3017  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n        /* \"contracts/ICO.sol\":2845:3028  {... */\n      pop\n        /* \"contracts/ICO.sol\":2795:3391  if ( creationtTime + month * 18 > block.timestamp){... */\n      jump(tag_137)\n    tag_128:\n        /* \"contracts/ICO.sol\":3068:3083  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":3063:3065  12 */\n      0x0c\n        /* \"contracts/ICO.sol\":3055:3060  month */\n      sload(0x0d)\n        /* \"contracts/ICO.sol\":3055:3065  month * 12 */\n      tag_138\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_138:\n        /* \"contracts/ICO.sol\":3039:3052  creationtTime */\n      immutable(\"0x6e70f41b0ebc8971243af82fe8a69025c90fb92c960359b66a1ee7d55a695397\")\n        /* \"contracts/ICO.sol\":3039:3065  creationtTime + month * 12 */\n      tag_139\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"contracts/ICO.sol\":3039:3083  creationtTime + month * 12 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":3034:3391  if ( creationtTime + month * 12 > block.timestamp){... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/ICO.sol\":3098:3119  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3121:3142  percentFromICO(_amnt) */\n      tag_141\n        /* \"contracts/ICO.sol\":3136:3141  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3121:3135  percentFromICO */\n      tag_130\n        /* \"contracts/ICO.sol\":3121:3142  percentFromICO(_amnt) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ICO.sol\":3098:3142  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3164:3174  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":3156:3184  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3156:3199  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3185:3198  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3156:3199  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n        /* \"contracts/ICO.sol\":3084:3210  {... */\n      pop\n        /* \"contracts/ICO.sol\":3034:3391  if ( creationtTime + month * 12 > block.timestamp){... */\n      jump(tag_144)\n    tag_140:\n        /* \"contracts/ICO.sol\":3249:3264  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":3245:3246  6 */\n      0x06\n        /* \"contracts/ICO.sol\":3237:3242  month */\n      sload(0x0d)\n        /* \"contracts/ICO.sol\":3237:3246  month * 6 */\n      tag_145\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_145:\n        /* \"contracts/ICO.sol\":3221:3234  creationtTime */\n      immutable(\"0x6e70f41b0ebc8971243af82fe8a69025c90fb92c960359b66a1ee7d55a695397\")\n        /* \"contracts/ICO.sol\":3221:3246  creationtTime + month * 6 */\n      tag_146\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_146:\n        /* \"contracts/ICO.sol\":3221:3264  creationtTime + month * 6 > block.timestamp */\n      gt\n        /* \"contracts/ICO.sol\":3216:3391  if ( creationtTime + month * 6 > block.timestamp){... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/ICO.sol\":3279:3300  uint256 convertedAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3302:3323  percentFromICO(_amnt) */\n      tag_148\n        /* \"contracts/ICO.sol\":3317:3322  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3302:3316  percentFromICO */\n      tag_130\n        /* \"contracts/ICO.sol\":3302:3323  percentFromICO(_amnt) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ICO.sol\":3279:3323  uint256 convertedAmnt =percentFromICO(_amnt) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3345:3355  msg.sender */\n      caller\n        /* \"contracts/ICO.sol\":3337:3365  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3337:3380  payable(msg.sender).transfer(convertedAmnt) */\n      0x08fc\n        /* \"contracts/ICO.sol\":3366:3379  convertedAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3337:3380  payable(msg.sender).transfer(convertedAmnt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n        /* \"contracts/ICO.sol\":3265:3391  {... */\n      pop\n        /* \"contracts/ICO.sol\":3216:3391  if ( creationtTime + month * 6 > block.timestamp){... */\n    tag_147:\n        /* \"contracts/ICO.sol\":3034:3391  if ( creationtTime + month * 12 > block.timestamp){... */\n    tag_144:\n        /* \"contracts/ICO.sol\":2795:3391  if ( creationtTime + month * 18 > block.timestamp){... */\n    tag_137:\n        /* \"contracts/ICO.sol\":2712:3406  function withdraw(uint256 _amnt) onlyRole(INVESTOR_ROLE) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":3412:3687  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n    tag_60:\n        /* \"contracts/ICO.sol\":1702:1710  timeLock */\n      sload(0x05)\n        /* \"contracts/ICO.sol\":1684:1699  block.timestamp */\n      timestamp\n        /* \"contracts/ICO.sol\":1684:1710  block.timestamp < timeLock */\n      lt\n        /* \"contracts/ICO.sol\":1676:1729  require(block.timestamp < timeLock,\"ICO is over :( \") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_91\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/ICO.sol\":443:467  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ICO.sol\":1793:1799  BURNED */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ICO.sol\":1792:1799  !BURNED */\n      iszero\n        /* \"contracts/ICO.sol\":1784:1831  require(!BURNED,\"the supply is already burned\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/ICO.sol\":3490:3506  uint256 burnAmnt */\n      0x00\n        /* \"contracts/ICO.sol\":3510:3530  maxICO.sub(SoldEFTT) */\n      tag_175\n        /* \"contracts/ICO.sol\":3521:3529  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":3510:3516  maxICO */\n      sload(0x07)\n        /* \"contracts/ICO.sol\":3510:3520  maxICO.sub */\n      tag_176\n      swap1\n        /* \"contracts/ICO.sol\":3510:3530  maxICO.sub(SoldEFTT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/ICO.sol\":3490:3531  uint256 burnAmnt = (maxICO.sub(SoldEFTT)) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3541:3545  eftt */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ICO.sol\":3541:3550  eftt.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/ICO.sol\":3551:3559  burnAmnt */\n      dup3\n        /* \"contracts/ICO.sol\":3541:3560  eftt.burn(burnAmnt) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_177:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ICO.sol\":3480:3687  {... */\n      pop\n        /* \"contracts/ICO.sol\":1861:1865  true */\n      0x01\n        /* \"contracts/ICO.sol\":1852:1858  BURNED */\n      0x0c\n      0x00\n        /* \"contracts/ICO.sol\":1852:1865  BURNED = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ICO.sol\":1739:1740  _ */\n      pop\n        /* \"contracts/ICO.sol\":3412:3687  function endICO() public _timeCheck onlyRole(BURNER_ROLE) _burnCheck{... */\n      jump\t// out\n        /* \"contracts/ICO.sol\":4032:4105  function burned() public view returns(bool){... */\n    tag_63:\n        /* \"contracts/ICO.sol\":4070:4074  bool */\n      0x00\n        /* \"contracts/ICO.sol\":4092:4098  BURNED */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ICO.sol\":4085:4098  return BURNED */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":4032:4105  function burned() public view returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ICO.sol\":333:399  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n    tag_67:\n        /* \"contracts/ICO.sol\":373:399  keccak256(\"INVESTOR_ROLE\") */\n      0xb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738\n        /* \"contracts/ICO.sol\":333:399  bytes32 public constant INVESTOR_ROLE = keccak256(\"INVESTOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/ICO.sol\":473:543  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n    tag_82:\n        /* \"contracts/ICO.sol\":515:543  keccak256(\"EXTEND_ICO_ROLE\") */\n      0x305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289\n        /* \"contracts/ICO.sol\":473:543  bytes32 public constant EXTEND_ICO_ROLE = keccak256(\"EXTEND_ICO_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":3693:3803  function conversion(uint256 _amnt) private view returns(uint256){... */\n    tag_97:\n        /* \"contracts/ICO.sol\":3749:3756  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":3774:3795  _amnt.mul(ratioMetis) */\n      tag_189\n        /* \"contracts/ICO.sol\":3784:3794  ratioMetis */\n      sload(0x0a)\n        /* \"contracts/ICO.sol\":3774:3779  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3774:3783  _amnt.mul */\n      tag_190\n      swap1\n        /* \"contracts/ICO.sol\":3774:3795  _amnt.mul(ratioMetis) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/ICO.sol\":3767:3796  return(_amnt.mul(ratioMetis)) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3693:3803  function conversion(uint256 _amnt) private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":3809:3925  function percentFromICO(uint256 _amnt) private view returns(uint256){... */\n    tag_130:\n        /* \"contracts/ICO.sol\":3869:3876  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":3894:3918  _amnt.mul(soldPercent()) */\n      tag_197\n        /* \"contracts/ICO.sol\":3904:3917  soldPercent() */\n      tag_198\n        /* \"contracts/ICO.sol\":3904:3915  soldPercent */\n      tag_199\n        /* \"contracts/ICO.sol\":3904:3917  soldPercent() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/ICO.sol\":3894:3899  _amnt */\n      dup4\n        /* \"contracts/ICO.sol\":3894:3903  _amnt.mul */\n      tag_190\n      swap1\n        /* \"contracts/ICO.sol\":3894:3918  _amnt.mul(soldPercent()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/ICO.sol\":3887:3918  return _amnt.mul(soldPercent()) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3809:3925  function percentFromICO(uint256 _amnt) private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_213\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICO.sol\":3931:4027  function soldPercent() private view returns(uint256){... */\n    tag_199:\n        /* \"contracts/ICO.sol\":3975:3982  uint256 */\n      0x00\n        /* \"contracts/ICO.sol\":4000:4020  SoldEFTT.div(maxICO) */\n      tag_226\n        /* \"contracts/ICO.sol\":4013:4019  maxICO */\n      sload(0x07)\n        /* \"contracts/ICO.sol\":4000:4008  SoldEFTT */\n      sload(0x09)\n        /* \"contracts/ICO.sol\":4000:4012  SoldEFTT.div */\n      tag_227\n      swap1\n        /* \"contracts/ICO.sol\":4000:4020  SoldEFTT.div(maxICO) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"contracts/ICO.sol\":3993:4020  return SoldEFTT.div(maxICO) */\n      swap1\n      pop\n        /* \"contracts/ICO.sol\":3931:4027  function soldPercent() private view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_229\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_220\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_231\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_232\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_235\n      jump\t// in\n    tag_234:\n    tag_233:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_236\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_237\n      jumpi\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n    tag_237:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_239\n      jump\t// in\n    tag_241:\n    tag_240:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_245\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_246\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_239\n      jump\t// in\n    tag_248:\n    tag_247:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_239\n      jump\t// in\n    tag_250:\n    tag_249:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_259:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:344   */\n    tag_260:\n        /* \"#utility.yul\":322:336   */\n      0x66616c6c6261636b206869740000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:337   */\n      mstore\n        /* \"#utility.yul\":182:344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":350:716   */\n    tag_261:\n        /* \"#utility.yul\":492:495   */\n      0x00\n        /* \"#utility.yul\":513:580   */\n      tag_313\n        /* \"#utility.yul\":577:579   */\n      0x0c\n        /* \"#utility.yul\":572:575   */\n      dup4\n        /* \"#utility.yul\":513:580   */\n      tag_259\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":506:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":589:682   */\n      tag_314\n        /* \"#utility.yul\":678:681   */\n      dup3\n        /* \"#utility.yul\":589:682   */\n      tag_260\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":702:705   */\n      dup3\n        /* \"#utility.yul\":698:710   */\n      add\n        /* \"#utility.yul\":691:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":350:716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:1141   */\n    tag_23:\n        /* \"#utility.yul\":888:892   */\n      0x00\n        /* \"#utility.yul\":926:928   */\n      0x20\n        /* \"#utility.yul\":915:924   */\n      dup3\n        /* \"#utility.yul\":911:929   */\n      add\n        /* \"#utility.yul\":903:929   */\n      swap1\n      pop\n        /* \"#utility.yul\":975:984   */\n      dup2\n        /* \"#utility.yul\":969:973   */\n      dup2\n        /* \"#utility.yul\":965:985   */\n      sub\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":950:959   */\n      dup4\n        /* \"#utility.yul\":946:963   */\n      add\n        /* \"#utility.yul\":939:986   */\n      mstore\n        /* \"#utility.yul\":1003:1134   */\n      tag_316\n        /* \"#utility.yul\":1129:1133   */\n      dup2\n        /* \"#utility.yul\":1003:1134   */\n      tag_261\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":995:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":722:1141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1345   */\n    tag_263:\n        /* \"#utility.yul\":1337:1338   */\n      0x00\n        /* \"#utility.yul\":1334:1335   */\n      dup1\n        /* \"#utility.yul\":1327:1339   */\n      revert\n        /* \"#utility.yul\":1474:1623   */\n    tag_265:\n        /* \"#utility.yul\":1510:1517   */\n      0x00\n        /* \"#utility.yul\":1550:1616   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1543:1548   */\n      dup3\n        /* \"#utility.yul\":1539:1617   */\n      and\n        /* \"#utility.yul\":1528:1617   */\n      swap1\n      pop\n        /* \"#utility.yul\":1474:1623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1749   */\n    tag_266:\n        /* \"#utility.yul\":1701:1724   */\n      tag_322\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1701:1724   */\n      tag_265\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1725   */\n      eq\n        /* \"#utility.yul\":1681:1743   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1739:1740   */\n      0x00\n        /* \"#utility.yul\":1736:1737   */\n      dup1\n        /* \"#utility.yul\":1729:1741   */\n      revert\n        /* \"#utility.yul\":1681:1743   */\n    tag_323:\n        /* \"#utility.yul\":1629:1749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:1892   */\n    tag_267:\n        /* \"#utility.yul\":1800:1805   */\n      0x00\n        /* \"#utility.yul\":1838:1844   */\n      dup2\n        /* \"#utility.yul\":1825:1845   */\n      calldataload\n        /* \"#utility.yul\":1816:1845   */\n      swap1\n      pop\n        /* \"#utility.yul\":1854:1886   */\n      tag_325\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1854:1886   */\n      tag_266\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1755:1892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1898:2225   */\n    tag_29:\n        /* \"#utility.yul\":1956:1962   */\n      0x00\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":1993:2002   */\n      dup3\n        /* \"#utility.yul\":1984:1991   */\n      dup5\n        /* \"#utility.yul\":1980:2003   */\n      sub\n        /* \"#utility.yul\":1976:2008   */\n      slt\n        /* \"#utility.yul\":1973:2092   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2011:2090   */\n      tag_328\n      tag_263\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1973:2092   */\n    tag_327:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2156:2208   */\n      tag_329\n        /* \"#utility.yul\":2200:2207   */\n      dup5\n        /* \"#utility.yul\":2191:2197   */\n      dup3\n        /* \"#utility.yul\":2180:2189   */\n      dup6\n        /* \"#utility.yul\":2176:2198   */\n      add\n        /* \"#utility.yul\":2156:2208   */\n      tag_267\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2146:2208   */\n      swap2\n      pop\n        /* \"#utility.yul\":2102:2218   */\n      pop\n        /* \"#utility.yul\":1898:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2321   */\n    tag_268:\n        /* \"#utility.yul\":2265:2272   */\n      0x00\n        /* \"#utility.yul\":2308:2313   */\n      dup2\n        /* \"#utility.yul\":2301:2314   */\n      iszero\n        /* \"#utility.yul\":2294:2315   */\n      iszero\n        /* \"#utility.yul\":2283:2315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2436   */\n    tag_269:\n        /* \"#utility.yul\":2408:2429   */\n      tag_332\n        /* \"#utility.yul\":2423:2428   */\n      dup2\n        /* \"#utility.yul\":2408:2429   */\n      tag_268\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2403:2406   */\n      dup3\n        /* \"#utility.yul\":2396:2430   */\n      mstore\n        /* \"#utility.yul\":2327:2436   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2652   */\n    tag_32:\n        /* \"#utility.yul\":2529:2533   */\n      0x00\n        /* \"#utility.yul\":2567:2569   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup3\n        /* \"#utility.yul\":2552:2570   */\n      add\n        /* \"#utility.yul\":2544:2570   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2645   */\n      tag_334\n        /* \"#utility.yul\":2642:2643   */\n      0x00\n        /* \"#utility.yul\":2631:2640   */\n      dup4\n        /* \"#utility.yul\":2627:2644   */\n      add\n        /* \"#utility.yul\":2618:2624   */\n      dup5\n        /* \"#utility.yul\":2580:2645   */\n      tag_269\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2442:2652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:2735   */\n    tag_270:\n        /* \"#utility.yul\":2695:2702   */\n      0x00\n        /* \"#utility.yul\":2724:2729   */\n      dup2\n        /* \"#utility.yul\":2713:2729   */\n      swap1\n      pop\n        /* \"#utility.yul\":2658:2735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2863   */\n    tag_271:\n        /* \"#utility.yul\":2814:2838   */\n      tag_337\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2814:2838   */\n      tag_270\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2804:2839   */\n      eq\n        /* \"#utility.yul\":2794:2857   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      dup1\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2794:2857   */\n    tag_338:\n        /* \"#utility.yul\":2741:2863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3008   */\n    tag_272:\n        /* \"#utility.yul\":2915:2920   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      dup2\n        /* \"#utility.yul\":2940:2960   */\n      calldataload\n        /* \"#utility.yul\":2931:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3002   */\n      tag_340\n        /* \"#utility.yul\":2996:3001   */\n      dup2\n        /* \"#utility.yul\":2969:3002   */\n      tag_271\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2869:3008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3014:3343   */\n    tag_36:\n        /* \"#utility.yul\":3073:3079   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3110:3119   */\n      dup3\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3097:3120   */\n      sub\n        /* \"#utility.yul\":3093:3125   */\n      slt\n        /* \"#utility.yul\":3090:3209   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3128:3207   */\n      tag_343\n      tag_263\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3090:3209   */\n    tag_342:\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3273:3326   */\n      tag_344\n        /* \"#utility.yul\":3318:3325   */\n      dup5\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3298:3307   */\n      dup6\n        /* \"#utility.yul\":3294:3316   */\n      add\n        /* \"#utility.yul\":3273:3326   */\n      tag_272\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3263:3326   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3336   */\n      pop\n        /* \"#utility.yul\":3014:3343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3467   */\n    tag_273:\n        /* \"#utility.yul\":3436:3460   */\n      tag_346\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3436:3460   */\n      tag_270\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3461   */\n      mstore\n        /* \"#utility.yul\":3349:3467   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3695   */\n    tag_39:\n        /* \"#utility.yul\":3566:3570   */\n      0x00\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3593:3602   */\n      dup3\n        /* \"#utility.yul\":3589:3607   */\n      add\n        /* \"#utility.yul\":3581:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3617:3688   */\n      tag_348\n        /* \"#utility.yul\":3685:3686   */\n      0x00\n        /* \"#utility.yul\":3674:3683   */\n      dup4\n        /* \"#utility.yul\":3670:3687   */\n      add\n        /* \"#utility.yul\":3661:3667   */\n      dup5\n        /* \"#utility.yul\":3617:3688   */\n      tag_273\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3473:3695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3701:3778   */\n    tag_274:\n        /* \"#utility.yul\":3738:3745   */\n      0x00\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3756:3772   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3784:3906   */\n    tag_275:\n        /* \"#utility.yul\":3857:3881   */\n      tag_351\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3857:3881   */\n      tag_274\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3850:3855   */\n      dup2\n        /* \"#utility.yul\":3847:3882   */\n      eq\n        /* \"#utility.yul\":3837:3900   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3893:3894   */\n      dup1\n        /* \"#utility.yul\":3886:3898   */\n      revert\n        /* \"#utility.yul\":3837:3900   */\n    tag_352:\n        /* \"#utility.yul\":3784:3906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4051   */\n    tag_276:\n        /* \"#utility.yul\":3958:3963   */\n      0x00\n        /* \"#utility.yul\":3996:4002   */\n      dup2\n        /* \"#utility.yul\":3983:4003   */\n      calldataload\n        /* \"#utility.yul\":3974:4003   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4045   */\n      tag_354\n        /* \"#utility.yul\":4039:4044   */\n      dup2\n        /* \"#utility.yul\":4012:4045   */\n      tag_275\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3912:4051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4057:4386   */\n    tag_47:\n        /* \"#utility.yul\":4116:4122   */\n      0x00\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4153:4162   */\n      dup3\n        /* \"#utility.yul\":4144:4151   */\n      dup5\n        /* \"#utility.yul\":4140:4163   */\n      sub\n        /* \"#utility.yul\":4136:4168   */\n      slt\n        /* \"#utility.yul\":4133:4252   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":4171:4250   */\n      tag_357\n      tag_263\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4133:4252   */\n    tag_356:\n        /* \"#utility.yul\":4291:4292   */\n      0x00\n        /* \"#utility.yul\":4316:4369   */\n      tag_358\n        /* \"#utility.yul\":4361:4368   */\n      dup5\n        /* \"#utility.yul\":4352:4358   */\n      dup3\n        /* \"#utility.yul\":4341:4350   */\n      dup6\n        /* \"#utility.yul\":4337:4359   */\n      add\n        /* \"#utility.yul\":4316:4369   */\n      tag_276\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4306:4369   */\n      swap2\n      pop\n        /* \"#utility.yul\":4262:4379   */\n      pop\n        /* \"#utility.yul\":4057:4386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4392:4518   */\n    tag_277:\n        /* \"#utility.yul\":4429:4436   */\n      0x00\n        /* \"#utility.yul\":4469:4511   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4462:4467   */\n      dup3\n        /* \"#utility.yul\":4458:4512   */\n      and\n        /* \"#utility.yul\":4447:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4392:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4620   */\n    tag_278:\n        /* \"#utility.yul\":4561:4568   */\n      0x00\n        /* \"#utility.yul\":4590:4614   */\n      tag_361\n        /* \"#utility.yul\":4608:4613   */\n      dup3\n        /* \"#utility.yul\":4590:4614   */\n      tag_277\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4579:4614   */\n      swap1\n      pop\n        /* \"#utility.yul\":4524:4620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:4748   */\n    tag_279:\n        /* \"#utility.yul\":4699:4723   */\n      tag_363\n        /* \"#utility.yul\":4717:4722   */\n      dup2\n        /* \"#utility.yul\":4699:4723   */\n      tag_278\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4692:4697   */\n      dup2\n        /* \"#utility.yul\":4689:4724   */\n      eq\n        /* \"#utility.yul\":4679:4742   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4738:4739   */\n      0x00\n        /* \"#utility.yul\":4735:4736   */\n      dup1\n        /* \"#utility.yul\":4728:4740   */\n      revert\n        /* \"#utility.yul\":4679:4742   */\n    tag_364:\n        /* \"#utility.yul\":4626:4748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4754:4893   */\n    tag_280:\n        /* \"#utility.yul\":4800:4805   */\n      0x00\n        /* \"#utility.yul\":4838:4844   */\n      dup2\n        /* \"#utility.yul\":4825:4845   */\n      calldataload\n        /* \"#utility.yul\":4816:4845   */\n      swap1\n      pop\n        /* \"#utility.yul\":4854:4887   */\n      tag_366\n        /* \"#utility.yul\":4881:4886   */\n      dup2\n        /* \"#utility.yul\":4854:4887   */\n      tag_279\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4754:4893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4899:5373   */\n    tag_52:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":5024:5026   */\n      0x40\n        /* \"#utility.yul\":5012:5021   */\n      dup4\n        /* \"#utility.yul\":5003:5010   */\n      dup6\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5027   */\n      slt\n        /* \"#utility.yul\":4992:5111   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":5030:5109   */\n      tag_369\n      tag_263\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4992:5111   */\n    tag_368:\n        /* \"#utility.yul\":5150:5151   */\n      0x00\n        /* \"#utility.yul\":5175:5228   */\n      tag_370\n        /* \"#utility.yul\":5220:5227   */\n      dup6\n        /* \"#utility.yul\":5211:5217   */\n      dup3\n        /* \"#utility.yul\":5200:5209   */\n      dup7\n        /* \"#utility.yul\":5196:5218   */\n      add\n        /* \"#utility.yul\":5175:5228   */\n      tag_272\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5165:5228   */\n      swap3\n      pop\n        /* \"#utility.yul\":5121:5238   */\n      pop\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5303:5356   */\n      tag_371\n        /* \"#utility.yul\":5348:5355   */\n      dup6\n        /* \"#utility.yul\":5339:5345   */\n      dup3\n        /* \"#utility.yul\":5328:5337   */\n      dup7\n        /* \"#utility.yul\":5324:5346   */\n      add\n        /* \"#utility.yul\":5303:5356   */\n      tag_280\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5293:5356   */\n      swap2\n      pop\n        /* \"#utility.yul\":5248:5366   */\n      pop\n        /* \"#utility.yul\":4899:5373   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5379:5548   */\n    tag_281:\n        /* \"#utility.yul\":5519:5536   */\n      0x49434f206973206f766572203a28200000000000000000000000000000000000\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5507:5513   */\n      dup3\n        /* \"#utility.yul\":5503:5517   */\n      add\n        /* \"#utility.yul\":5496:5537   */\n      mstore\n        /* \"#utility.yul\":5379:5548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:5940   */\n    tag_282:\n        /* \"#utility.yul\":5700:5703   */\n      0x00\n        /* \"#utility.yul\":5725:5792   */\n      tag_374\n        /* \"#utility.yul\":5789:5791   */\n      0x0f\n        /* \"#utility.yul\":5784:5787   */\n      dup4\n        /* \"#utility.yul\":5725:5792   */\n      tag_259\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5718:5792   */\n      swap2\n      pop\n        /* \"#utility.yul\":5805:5898   */\n      tag_375\n        /* \"#utility.yul\":5894:5897   */\n      dup3\n        /* \"#utility.yul\":5805:5898   */\n      tag_281\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5927:5929   */\n      0x20\n        /* \"#utility.yul\":5922:5925   */\n      dup3\n        /* \"#utility.yul\":5918:5930   */\n      add\n        /* \"#utility.yul\":5911:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5558:5940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5950:6385   */\n    tag_91:\n        /* \"#utility.yul\":6116:6120   */\n      0x00\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6147:6156   */\n      dup3\n        /* \"#utility.yul\":6143:6161   */\n      add\n        /* \"#utility.yul\":6135:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6211:6220   */\n      dup2\n        /* \"#utility.yul\":6205:6209   */\n      dup2\n        /* \"#utility.yul\":6201:6221   */\n      sub\n        /* \"#utility.yul\":6197:6198   */\n      0x00\n        /* \"#utility.yul\":6186:6195   */\n      dup4\n        /* \"#utility.yul\":6182:6199   */\n      add\n        /* \"#utility.yul\":6175:6222   */\n      mstore\n        /* \"#utility.yul\":6243:6374   */\n      tag_377\n        /* \"#utility.yul\":6369:6373   */\n      dup2\n        /* \"#utility.yul\":6243:6374   */\n      tag_282\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6235:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":5950:6385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6580   */\n    tag_283:\n        /* \"#utility.yul\":6539:6568   */\n      0x7468656d2f7468657920706c656173652073656e64206d657469730000000000\n        /* \"#utility.yul\":6535:6536   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6523:6537   */\n      add\n        /* \"#utility.yul\":6516:6569   */\n      mstore\n        /* \"#utility.yul\":6395:6580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6972   */\n    tag_284:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6757:6824   */\n      tag_380\n        /* \"#utility.yul\":6821:6823   */\n      0x1b\n        /* \"#utility.yul\":6816:6819   */\n      dup4\n        /* \"#utility.yul\":6757:6824   */\n      tag_259\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6750:6824   */\n      swap2\n      pop\n        /* \"#utility.yul\":6837:6930   */\n      tag_381\n        /* \"#utility.yul\":6926:6929   */\n      dup3\n        /* \"#utility.yul\":6837:6930   */\n      tag_283\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"#utility.yul\":6954:6957   */\n      dup3\n        /* \"#utility.yul\":6950:6962   */\n      add\n        /* \"#utility.yul\":6943:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7417   */\n    tag_95:\n        /* \"#utility.yul\":7148:7152   */\n      0x00\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7179:7188   */\n      dup3\n        /* \"#utility.yul\":7175:7193   */\n      add\n        /* \"#utility.yul\":7167:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":7243:7252   */\n      dup2\n        /* \"#utility.yul\":7237:7241   */\n      dup2\n        /* \"#utility.yul\":7233:7253   */\n      sub\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7218:7227   */\n      dup4\n        /* \"#utility.yul\":7214:7231   */\n      add\n        /* \"#utility.yul\":7207:7254   */\n      mstore\n        /* \"#utility.yul\":7275:7406   */\n      tag_383\n        /* \"#utility.yul\":7401:7405   */\n      dup2\n        /* \"#utility.yul\":7275:7406   */\n      tag_284\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7267:7406   */\n      swap1\n      pop\n        /* \"#utility.yul\":6982:7417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:7623   */\n    tag_285:\n        /* \"#utility.yul\":7479:7556   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7476:7477   */\n      0x00\n        /* \"#utility.yul\":7469:7557   */\n      mstore\n        /* \"#utility.yul\":7580:7584   */\n      0x11\n        /* \"#utility.yul\":7577:7578   */\n      0x04\n        /* \"#utility.yul\":7570:7585   */\n      mstore\n        /* \"#utility.yul\":7608:7612   */\n      0x24\n        /* \"#utility.yul\":7605:7606   */\n      0x00\n        /* \"#utility.yul\":7598:7613   */\n      revert\n        /* \"#utility.yul\":7633:7844   */\n    tag_99:\n        /* \"#utility.yul\":7673:7676   */\n      0x00\n        /* \"#utility.yul\":7696:7716   */\n      tag_386\n        /* \"#utility.yul\":7714:7715   */\n      dup3\n        /* \"#utility.yul\":7696:7716   */\n      tag_274\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7691:7716   */\n      swap2\n      pop\n        /* \"#utility.yul\":7734:7754   */\n      tag_387\n        /* \"#utility.yul\":7752:7753   */\n      dup4\n        /* \"#utility.yul\":7734:7754   */\n      tag_274\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7729:7754   */\n      swap3\n      pop\n        /* \"#utility.yul\":7781:7782   */\n      dup3\n        /* \"#utility.yul\":7778:7779   */\n      dup3\n        /* \"#utility.yul\":7774:7783   */\n      add\n        /* \"#utility.yul\":7767:7783   */\n      swap1\n      pop\n        /* \"#utility.yul\":7806:7809   */\n      dup1\n        /* \"#utility.yul\":7803:7804   */\n      dup3\n        /* \"#utility.yul\":7800:7810   */\n      gt\n        /* \"#utility.yul\":7797:7833   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":7813:7831   */\n      tag_389\n      tag_285\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7797:7833   */\n    tag_388:\n        /* \"#utility.yul\":7633:7844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8038   */\n    tag_286:\n        /* \"#utility.yul\":7998:8026   */\n      0x657863656564732074686520746f74616c20666f722073616c65000000000000\n        /* \"#utility.yul\":7994:7995   */\n      0x00\n        /* \"#utility.yul\":7986:7992   */\n      dup3\n        /* \"#utility.yul\":7982:7996   */\n      add\n        /* \"#utility.yul\":7975:8027   */\n      mstore\n        /* \"#utility.yul\":7854:8038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8048:8430   */\n    tag_287:\n        /* \"#utility.yul\":8190:8193   */\n      0x00\n        /* \"#utility.yul\":8215:8282   */\n      tag_392\n        /* \"#utility.yul\":8279:8281   */\n      0x1a\n        /* \"#utility.yul\":8274:8277   */\n      dup4\n        /* \"#utility.yul\":8215:8282   */\n      tag_259\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8208:8282   */\n      swap2\n      pop\n        /* \"#utility.yul\":8295:8388   */\n      tag_393\n        /* \"#utility.yul\":8384:8387   */\n      dup3\n        /* \"#utility.yul\":8295:8388   */\n      tag_286\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8417:8419   */\n      0x20\n        /* \"#utility.yul\":8412:8415   */\n      dup3\n        /* \"#utility.yul\":8408:8420   */\n      add\n        /* \"#utility.yul\":8401:8420   */\n      swap1\n      pop\n        /* \"#utility.yul\":8048:8430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8875   */\n    tag_102:\n        /* \"#utility.yul\":8606:8610   */\n      0x00\n        /* \"#utility.yul\":8648:8650   */\n      0x20\n        /* \"#utility.yul\":8637:8646   */\n      dup3\n        /* \"#utility.yul\":8633:8651   */\n      add\n        /* \"#utility.yul\":8625:8651   */\n      swap1\n      pop\n        /* \"#utility.yul\":8701:8710   */\n      dup2\n        /* \"#utility.yul\":8695:8699   */\n      dup2\n        /* \"#utility.yul\":8691:8711   */\n      sub\n        /* \"#utility.yul\":8687:8688   */\n      0x00\n        /* \"#utility.yul\":8676:8685   */\n      dup4\n        /* \"#utility.yul\":8672:8689   */\n      add\n        /* \"#utility.yul\":8665:8712   */\n      mstore\n        /* \"#utility.yul\":8733:8864   */\n      tag_395\n        /* \"#utility.yul\":8859:8863   */\n      dup2\n        /* \"#utility.yul\":8733:8864   */\n      tag_287\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8725:8864   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8885:9011   */\n    tag_288:\n        /* \"#utility.yul\":8976:9000   */\n      tag_397\n        /* \"#utility.yul\":8994:8999   */\n      dup2\n        /* \"#utility.yul\":8976:9000   */\n      tag_278\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8971:8974   */\n      dup3\n        /* \"#utility.yul\":8964:9001   */\n      mstore\n        /* \"#utility.yul\":8885:9011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9021:9147   */\n    tag_289:\n        /* \"#utility.yul\":9112:9136   */\n      tag_399\n        /* \"#utility.yul\":9130:9135   */\n      dup2\n        /* \"#utility.yul\":9112:9136   */\n      tag_274\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9107:9110   */\n      dup3\n        /* \"#utility.yul\":9100:9137   */\n      mstore\n        /* \"#utility.yul\":9021:9147   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9157:9505   */\n    tag_104:\n        /* \"#utility.yul\":9278:9282   */\n      0x00\n        /* \"#utility.yul\":9320:9322   */\n      0x40\n        /* \"#utility.yul\":9309:9318   */\n      dup3\n        /* \"#utility.yul\":9305:9323   */\n      add\n        /* \"#utility.yul\":9297:9323   */\n      swap1\n      pop\n        /* \"#utility.yul\":9337:9408   */\n      tag_401\n        /* \"#utility.yul\":9405:9406   */\n      0x00\n        /* \"#utility.yul\":9394:9403   */\n      dup4\n        /* \"#utility.yul\":9390:9407   */\n      add\n        /* \"#utility.yul\":9381:9387   */\n      dup6\n        /* \"#utility.yul\":9337:9408   */\n      tag_288\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9422:9494   */\n      tag_402\n        /* \"#utility.yul\":9490:9492   */\n      0x20\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9493   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9422:9494   */\n      tag_289\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9157:9505   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9515:9639   */\n    tag_290:\n        /* \"#utility.yul\":9589:9610   */\n      tag_404\n        /* \"#utility.yul\":9604:9609   */\n      dup2\n        /* \"#utility.yul\":9589:9610   */\n      tag_268\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9582:9587   */\n      dup2\n        /* \"#utility.yul\":9579:9611   */\n      eq\n        /* \"#utility.yul\":9569:9629   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9625:9626   */\n      0x00\n        /* \"#utility.yul\":9622:9623   */\n      dup1\n        /* \"#utility.yul\":9615:9627   */\n      revert\n        /* \"#utility.yul\":9569:9629   */\n    tag_405:\n        /* \"#utility.yul\":9515:9639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9649:9798   */\n    tag_291:\n        /* \"#utility.yul\":9703:9708   */\n      0x00\n        /* \"#utility.yul\":9738:9744   */\n      dup2\n        /* \"#utility.yul\":9732:9745   */\n      mload\n        /* \"#utility.yul\":9723:9745   */\n      swap1\n      pop\n        /* \"#utility.yul\":9758:9788   */\n      tag_407\n        /* \"#utility.yul\":9782:9787   */\n      dup2\n        /* \"#utility.yul\":9758:9788   */\n      tag_290\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9649:9798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:10177   */\n    tag_108:\n        /* \"#utility.yul\":9875:9881   */\n      0x00\n        /* \"#utility.yul\":9928:9930   */\n      0x20\n        /* \"#utility.yul\":9916:9925   */\n      dup3\n        /* \"#utility.yul\":9907:9914   */\n      dup5\n        /* \"#utility.yul\":9903:9926   */\n      sub\n        /* \"#utility.yul\":9899:9931   */\n      slt\n        /* \"#utility.yul\":9896:10015   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":9934:10013   */\n      tag_410\n      tag_263\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9896:10015   */\n    tag_409:\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10091:10152   */\n      tag_411\n        /* \"#utility.yul\":10144:10151   */\n      dup5\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10124:10133   */\n      dup6\n        /* \"#utility.yul\":10120:10142   */\n      add\n        /* \"#utility.yul\":10091:10152   */\n      tag_291\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10081:10152   */\n      swap2\n      pop\n        /* \"#utility.yul\":10029:10166   */\n      pop\n        /* \"#utility.yul\":9808:10177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10187:10421   */\n    tag_115:\n        /* \"#utility.yul\":10280:10284   */\n      0x00\n        /* \"#utility.yul\":10322:10324   */\n      0x20\n        /* \"#utility.yul\":10311:10320   */\n      dup3\n        /* \"#utility.yul\":10307:10325   */\n      add\n        /* \"#utility.yul\":10299:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10339:10410   */\n      tag_413\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10396:10405   */\n      dup4\n        /* \"#utility.yul\":10392:10409   */\n      add\n        /* \"#utility.yul\":10383:10389   */\n      dup5\n        /* \"#utility.yul\":10339:10410   */\n      tag_289\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10187:10421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10431:10889   */\n    tag_126:\n        /* \"#utility.yul\":10471:10478   */\n      0x00\n        /* \"#utility.yul\":10498:10518   */\n      tag_415\n        /* \"#utility.yul\":10516:10517   */\n      dup3\n        /* \"#utility.yul\":10498:10518   */\n      tag_274\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10493:10518   */\n      swap2\n      pop\n        /* \"#utility.yul\":10536:10556   */\n      tag_416\n        /* \"#utility.yul\":10554:10555   */\n      dup4\n        /* \"#utility.yul\":10536:10556   */\n      tag_274\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10531:10556   */\n      swap3\n      pop\n        /* \"#utility.yul\":10595:10596   */\n      dup3\n        /* \"#utility.yul\":10592:10593   */\n      dup3\n        /* \"#utility.yul\":10588:10597   */\n      mul\n        /* \"#utility.yul\":10621:10651   */\n      tag_417\n        /* \"#utility.yul\":10639:10650   */\n      dup2\n        /* \"#utility.yul\":10621:10651   */\n      tag_274\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10610:10651   */\n      swap2\n      pop\n        /* \"#utility.yul\":10820:10821   */\n      dup3\n        /* \"#utility.yul\":10811:10818   */\n      dup3\n        /* \"#utility.yul\":10807:10822   */\n      div\n        /* \"#utility.yul\":10804:10805   */\n      dup5\n        /* \"#utility.yul\":10801:10823   */\n      eq\n        /* \"#utility.yul\":10777:10778   */\n      dup4\n        /* \"#utility.yul\":10770:10779   */\n      iszero\n        /* \"#utility.yul\":10746:10841   */\n      or\n        /* \"#utility.yul\":10719:10878   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":10858:10876   */\n      tag_419\n      tag_285\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10719:10878   */\n    tag_418:\n        /* \"#utility.yul\":10479:10889   */\n      pop\n        /* \"#utility.yul\":10431:10889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10899:11145   */\n    tag_292:\n        /* \"#utility.yul\":11043:11077   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11039:11040   */\n      0x00\n        /* \"#utility.yul\":11031:11037   */\n      dup3\n        /* \"#utility.yul\":11027:11041   */\n      add\n        /* \"#utility.yul\":11020:11078   */\n      mstore\n        /* \"#utility.yul\":11116:11133   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11111:11113   */\n      0x20\n        /* \"#utility.yul\":11103:11109   */\n      dup3\n        /* \"#utility.yul\":11099:11114   */\n      add\n        /* \"#utility.yul\":11092:11134   */\n      mstore\n        /* \"#utility.yul\":10899:11145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11155:11537   */\n    tag_293:\n        /* \"#utility.yul\":11297:11300   */\n      0x00\n        /* \"#utility.yul\":11322:11389   */\n      tag_422\n        /* \"#utility.yul\":11386:11388   */\n      0x2f\n        /* \"#utility.yul\":11381:11384   */\n      dup4\n        /* \"#utility.yul\":11322:11389   */\n      tag_259\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11315:11389   */\n      swap2\n      pop\n        /* \"#utility.yul\":11402:11495   */\n      tag_423\n        /* \"#utility.yul\":11491:11494   */\n      dup3\n        /* \"#utility.yul\":11402:11495   */\n      tag_292\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11524:11526   */\n      0x40\n        /* \"#utility.yul\":11519:11522   */\n      dup3\n        /* \"#utility.yul\":11515:11527   */\n      add\n        /* \"#utility.yul\":11508:11527   */\n      swap1\n      pop\n        /* \"#utility.yul\":11155:11537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11547:11982   */\n    tag_162:\n        /* \"#utility.yul\":11713:11717   */\n      0x00\n        /* \"#utility.yul\":11755:11757   */\n      0x20\n        /* \"#utility.yul\":11744:11753   */\n      dup3\n        /* \"#utility.yul\":11740:11758   */\n      add\n        /* \"#utility.yul\":11732:11758   */\n      swap1\n      pop\n        /* \"#utility.yul\":11808:11817   */\n      dup2\n        /* \"#utility.yul\":11802:11806   */\n      dup2\n        /* \"#utility.yul\":11798:11818   */\n      sub\n        /* \"#utility.yul\":11794:11795   */\n      0x00\n        /* \"#utility.yul\":11783:11792   */\n      dup4\n        /* \"#utility.yul\":11779:11796   */\n      add\n        /* \"#utility.yul\":11772:11819   */\n      mstore\n        /* \"#utility.yul\":11840:11971   */\n      tag_425\n        /* \"#utility.yul\":11966:11970   */\n      dup2\n        /* \"#utility.yul\":11840:11971   */\n      tag_293\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11832:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":11547:11982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11992:12178   */\n    tag_294:\n        /* \"#utility.yul\":12136:12166   */\n      0x74686520737570706c7920697320616c7265616479206275726e656400000000\n        /* \"#utility.yul\":12132:12133   */\n      0x00\n        /* \"#utility.yul\":12124:12130   */\n      dup3\n        /* \"#utility.yul\":12120:12134   */\n      add\n        /* \"#utility.yul\":12113:12167   */\n      mstore\n        /* \"#utility.yul\":11992:12178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12188:12570   */\n    tag_295:\n        /* \"#utility.yul\":12330:12333   */\n      0x00\n        /* \"#utility.yul\":12355:12422   */\n      tag_428\n        /* \"#utility.yul\":12419:12421   */\n      0x1c\n        /* \"#utility.yul\":12414:12417   */\n      dup4\n        /* \"#utility.yul\":12355:12422   */\n      tag_259\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12348:12422   */\n      swap2\n      pop\n        /* \"#utility.yul\":12435:12528   */\n      tag_429\n        /* \"#utility.yul\":12524:12527   */\n      dup3\n        /* \"#utility.yul\":12435:12528   */\n      tag_294\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12557:12559   */\n      0x20\n        /* \"#utility.yul\":12552:12555   */\n      dup3\n        /* \"#utility.yul\":12548:12560   */\n      add\n        /* \"#utility.yul\":12541:12560   */\n      swap1\n      pop\n        /* \"#utility.yul\":12188:12570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12580:13015   */\n    tag_173:\n        /* \"#utility.yul\":12746:12750   */\n      0x00\n        /* \"#utility.yul\":12788:12790   */\n      0x20\n        /* \"#utility.yul\":12777:12786   */\n      dup3\n        /* \"#utility.yul\":12773:12791   */\n      add\n        /* \"#utility.yul\":12765:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12841:12850   */\n      dup2\n        /* \"#utility.yul\":12835:12839   */\n      dup2\n        /* \"#utility.yul\":12831:12851   */\n      sub\n        /* \"#utility.yul\":12827:12828   */\n      0x00\n        /* \"#utility.yul\":12816:12825   */\n      dup4\n        /* \"#utility.yul\":12812:12829   */\n      add\n        /* \"#utility.yul\":12805:12852   */\n      mstore\n        /* \"#utility.yul\":12873:13004   */\n      tag_431\n        /* \"#utility.yul\":12999:13003   */\n      dup2\n        /* \"#utility.yul\":12873:13004   */\n      tag_295\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12865:13004   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:13015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13025:13239   */\n    tag_211:\n        /* \"#utility.yul\":13065:13069   */\n      0x00\n        /* \"#utility.yul\":13089:13109   */\n      tag_433\n        /* \"#utility.yul\":13107:13108   */\n      dup3\n        /* \"#utility.yul\":13089:13109   */\n      tag_274\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13084:13109   */\n      swap2\n      pop\n        /* \"#utility.yul\":13127:13147   */\n      tag_434\n        /* \"#utility.yul\":13145:13146   */\n      dup4\n        /* \"#utility.yul\":13127:13147   */\n      tag_274\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13122:13147   */\n      swap3\n      pop\n        /* \"#utility.yul\":13175:13176   */\n      dup3\n        /* \"#utility.yul\":13172:13173   */\n      dup3\n        /* \"#utility.yul\":13168:13177   */\n      sub\n        /* \"#utility.yul\":13160:13177   */\n      swap1\n      pop\n        /* \"#utility.yul\":13203:13204   */\n      dup2\n        /* \"#utility.yul\":13197:13201   */\n      dup2\n        /* \"#utility.yul\":13194:13205   */\n      gt\n        /* \"#utility.yul\":13191:13228   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":13208:13226   */\n      tag_436\n      tag_285\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13191:13228   */\n    tag_435:\n        /* \"#utility.yul\":13025:13239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13249:13405   */\n    tag_296:\n        /* \"#utility.yul\":13351:13362   */\n      0x00\n        /* \"#utility.yul\":13392:13395   */\n      dup2\n        /* \"#utility.yul\":13377:13395   */\n      swap1\n      pop\n        /* \"#utility.yul\":13249:13405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13415:13596   */\n    tag_297:\n        /* \"#utility.yul\":13559:13584   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13555:13556   */\n      0x00\n        /* \"#utility.yul\":13547:13553   */\n      dup3\n        /* \"#utility.yul\":13543:13557   */\n      add\n        /* \"#utility.yul\":13536:13585   */\n      mstore\n        /* \"#utility.yul\":13415:13596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13606:14024   */\n    tag_298:\n        /* \"#utility.yul\":13766:13769   */\n      0x00\n        /* \"#utility.yul\":13791:13876   */\n      tag_440\n        /* \"#utility.yul\":13873:13875   */\n      0x17\n        /* \"#utility.yul\":13868:13871   */\n      dup4\n        /* \"#utility.yul\":13791:13876   */\n      tag_296\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13784:13876   */\n      swap2\n      pop\n        /* \"#utility.yul\":13889:13982   */\n      tag_441\n        /* \"#utility.yul\":13978:13981   */\n      dup3\n        /* \"#utility.yul\":13889:13982   */\n      tag_297\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14011:14013   */\n      0x17\n        /* \"#utility.yul\":14006:14009   */\n      dup3\n        /* \"#utility.yul\":14002:14014   */\n      add\n        /* \"#utility.yul\":13995:14014   */\n      swap1\n      pop\n        /* \"#utility.yul\":13606:14024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14034:14141   */\n    tag_299:\n        /* \"#utility.yul\":14086:14092   */\n      0x00\n        /* \"#utility.yul\":14124:14129   */\n      dup2\n        /* \"#utility.yul\":14118:14130   */\n      mload\n        /* \"#utility.yul\":14108:14130   */\n      swap1\n      pop\n        /* \"#utility.yul\":14034:14141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14151:14425   */\n    tag_300:\n        /* \"#utility.yul\":14236:14237   */\n      0x00\n        /* \"#utility.yul\":14250:14375   */\n    tag_444:\n        /* \"#utility.yul\":14264:14270   */\n      dup4\n        /* \"#utility.yul\":14261:14262   */\n      dup2\n        /* \"#utility.yul\":14258:14271   */\n      lt\n        /* \"#utility.yul\":14250:14375   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":14357:14358   */\n      dup1\n        /* \"#utility.yul\":14352:14355   */\n      dup3\n        /* \"#utility.yul\":14348:14359   */\n      add\n        /* \"#utility.yul\":14342:14360   */\n      mload\n        /* \"#utility.yul\":14338:14339   */\n      dup2\n        /* \"#utility.yul\":14333:14336   */\n      dup5\n        /* \"#utility.yul\":14329:14340   */\n      add\n        /* \"#utility.yul\":14322:14361   */\n      mstore\n        /* \"#utility.yul\":14286:14288   */\n      0x20\n        /* \"#utility.yul\":14283:14284   */\n      dup2\n        /* \"#utility.yul\":14279:14289   */\n      add\n        /* \"#utility.yul\":14274:14289   */\n      swap1\n      pop\n        /* \"#utility.yul\":14250:14375   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":14413:14414   */\n      0x00\n        /* \"#utility.yul\":14404:14410   */\n      dup5\n        /* \"#utility.yul\":14399:14402   */\n      dup5\n        /* \"#utility.yul\":14395:14411   */\n      add\n        /* \"#utility.yul\":14388:14415   */\n      mstore\n        /* \"#utility.yul\":14213:14425   */\n      pop\n        /* \"#utility.yul\":14151:14425   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14435:14845   */\n    tag_301:\n        /* \"#utility.yul\":14541:14544   */\n      0x00\n        /* \"#utility.yul\":14573:14612   */\n      tag_448\n        /* \"#utility.yul\":14606:14611   */\n      dup3\n        /* \"#utility.yul\":14573:14612   */\n      tag_299\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14632:14721   */\n      tag_449\n        /* \"#utility.yul\":14714:14720   */\n      dup2\n        /* \"#utility.yul\":14709:14712   */\n      dup6\n        /* \"#utility.yul\":14632:14721   */\n      tag_296\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14625:14721   */\n      swap4\n      pop\n        /* \"#utility.yul\":14734:14799   */\n      tag_450\n        /* \"#utility.yul\":14792:14798   */\n      dup2\n        /* \"#utility.yul\":14787:14790   */\n      dup6\n        /* \"#utility.yul\":14780:14784   */\n      0x20\n        /* \"#utility.yul\":14773:14778   */\n      dup7\n        /* \"#utility.yul\":14769:14785   */\n      add\n        /* \"#utility.yul\":14734:14799   */\n      tag_300\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14828:14834   */\n      dup1\n        /* \"#utility.yul\":14823:14826   */\n      dup5\n        /* \"#utility.yul\":14819:14835   */\n      add\n        /* \"#utility.yul\":14812:14835   */\n      swap2\n      pop\n        /* \"#utility.yul\":14545:14845   */\n      pop\n        /* \"#utility.yul\":14435:14845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14855:15030   */\n    tag_302:\n        /* \"#utility.yul\":14999:15018   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":14995:14996   */\n      0x00\n        /* \"#utility.yul\":14987:14993   */\n      dup3\n        /* \"#utility.yul\":14983:14997   */\n      add\n        /* \"#utility.yul\":14976:15019   */\n      mstore\n        /* \"#utility.yul\":14855:15030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15040:15458   */\n    tag_303:\n        /* \"#utility.yul\":15200:15203   */\n      0x00\n        /* \"#utility.yul\":15225:15310   */\n      tag_453\n        /* \"#utility.yul\":15307:15309   */\n      0x11\n        /* \"#utility.yul\":15302:15305   */\n      dup4\n        /* \"#utility.yul\":15225:15310   */\n      tag_296\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15218:15310   */\n      swap2\n      pop\n        /* \"#utility.yul\":15323:15416   */\n      tag_454\n        /* \"#utility.yul\":15412:15415   */\n      dup3\n        /* \"#utility.yul\":15323:15416   */\n      tag_302\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15445:15447   */\n      0x11\n        /* \"#utility.yul\":15440:15443   */\n      dup3\n        /* \"#utility.yul\":15436:15448   */\n      add\n        /* \"#utility.yul\":15429:15448   */\n      swap1\n      pop\n        /* \"#utility.yul\":15040:15458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15468:16459   */\n    tag_222:\n        /* \"#utility.yul\":15850:15853   */\n      0x00\n        /* \"#utility.yul\":15876:16024   */\n      tag_456\n        /* \"#utility.yul\":16020:16023   */\n      dup3\n        /* \"#utility.yul\":15876:16024   */\n      tag_298\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15869:16024   */\n      swap2\n      pop\n        /* \"#utility.yul\":16045:16140   */\n      tag_457\n        /* \"#utility.yul\":16136:16139   */\n      dup3\n        /* \"#utility.yul\":16127:16133   */\n      dup6\n        /* \"#utility.yul\":16045:16140   */\n      tag_301\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":16038:16140   */\n      swap2\n      pop\n        /* \"#utility.yul\":16161:16309   */\n      tag_458\n        /* \"#utility.yul\":16305:16308   */\n      dup3\n        /* \"#utility.yul\":16161:16309   */\n      tag_303\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16154:16309   */\n      swap2\n      pop\n        /* \"#utility.yul\":16330:16425   */\n      tag_459\n        /* \"#utility.yul\":16421:16424   */\n      dup3\n        /* \"#utility.yul\":16412:16418   */\n      dup5\n        /* \"#utility.yul\":16330:16425   */\n      tag_301\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16323:16425   */\n      swap2\n      pop\n        /* \"#utility.yul\":16446:16449   */\n      dup2\n        /* \"#utility.yul\":16439:16449   */\n      swap1\n      pop\n        /* \"#utility.yul\":15468:16459   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16469:16579   */\n    tag_304:\n        /* \"#utility.yul\":16510:16516   */\n      0x00\n        /* \"#utility.yul\":16565:16567   */\n      0x1f\n        /* \"#utility.yul\":16561:16568   */\n      not\n        /* \"#utility.yul\":16556:16558   */\n      0x1f\n        /* \"#utility.yul\":16549:16554   */\n      dup4\n        /* \"#utility.yul\":16545:16559   */\n      add\n        /* \"#utility.yul\":16541:16569   */\n      and\n        /* \"#utility.yul\":16531:16569   */\n      swap1\n      pop\n        /* \"#utility.yul\":16469:16579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16589:16986   */\n    tag_305:\n        /* \"#utility.yul\":16677:16680   */\n      0x00\n        /* \"#utility.yul\":16709:16748   */\n      tag_462\n        /* \"#utility.yul\":16742:16747   */\n      dup3\n        /* \"#utility.yul\":16709:16748   */\n      tag_299\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":16768:16839   */\n      tag_463\n        /* \"#utility.yul\":16832:16838   */\n      dup2\n        /* \"#utility.yul\":16827:16830   */\n      dup6\n        /* \"#utility.yul\":16768:16839   */\n      tag_259\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":16761:16839   */\n      swap4\n      pop\n        /* \"#utility.yul\":16852:16917   */\n      tag_464\n        /* \"#utility.yul\":16910:16916   */\n      dup2\n        /* \"#utility.yul\":16905:16908   */\n      dup6\n        /* \"#utility.yul\":16898:16902   */\n      0x20\n        /* \"#utility.yul\":16891:16896   */\n      dup7\n        /* \"#utility.yul\":16887:16903   */\n      add\n        /* \"#utility.yul\":16852:16917   */\n      tag_300\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16946:16975   */\n      tag_465\n        /* \"#utility.yul\":16968:16974   */\n      dup2\n        /* \"#utility.yul\":16946:16975   */\n      tag_304\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16941:16944   */\n      dup5\n        /* \"#utility.yul\":16937:16976   */\n      add\n        /* \"#utility.yul\":16930:16976   */\n      swap2\n      pop\n        /* \"#utility.yul\":16681:16986   */\n      pop\n        /* \"#utility.yul\":16589:16986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16996:17325   */\n    tag_224:\n        /* \"#utility.yul\":17109:17113   */\n      0x00\n        /* \"#utility.yul\":17151:17153   */\n      0x20\n        /* \"#utility.yul\":17140:17149   */\n      dup3\n        /* \"#utility.yul\":17136:17154   */\n      add\n        /* \"#utility.yul\":17128:17154   */\n      swap1\n      pop\n        /* \"#utility.yul\":17204:17213   */\n      dup2\n        /* \"#utility.yul\":17198:17202   */\n      dup2\n        /* \"#utility.yul\":17194:17214   */\n      sub\n        /* \"#utility.yul\":17190:17191   */\n      0x00\n        /* \"#utility.yul\":17179:17188   */\n      dup4\n        /* \"#utility.yul\":17175:17192   */\n      add\n        /* \"#utility.yul\":17168:17215   */\n      mstore\n        /* \"#utility.yul\":17236:17314   */\n      tag_467\n        /* \"#utility.yul\":17309:17313   */\n      dup2\n        /* \"#utility.yul\":17300:17306   */\n      dup5\n        /* \"#utility.yul\":17236:17314   */\n      tag_305\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":17228:17314   */\n      swap1\n      pop\n        /* \"#utility.yul\":16996:17325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17335:17531   */\n    tag_235:\n        /* \"#utility.yul\":17387:17464   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17384:17385   */\n      0x00\n        /* \"#utility.yul\":17377:17465   */\n      mstore\n        /* \"#utility.yul\":17488:17492   */\n      0x41\n        /* \"#utility.yul\":17485:17486   */\n      0x04\n        /* \"#utility.yul\":17478:17493   */\n      mstore\n        /* \"#utility.yul\":17516:17520   */\n      0x24\n        /* \"#utility.yul\":17513:17514   */\n      0x00\n        /* \"#utility.yul\":17506:17521   */\n      revert\n        /* \"#utility.yul\":17541:17737   */\n    tag_239:\n        /* \"#utility.yul\":17593:17670   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17590:17591   */\n      0x00\n        /* \"#utility.yul\":17583:17671   */\n      mstore\n        /* \"#utility.yul\":17694:17698   */\n      0x32\n        /* \"#utility.yul\":17691:17692   */\n      0x04\n        /* \"#utility.yul\":17684:17699   */\n      mstore\n        /* \"#utility.yul\":17722:17726   */\n      0x24\n        /* \"#utility.yul\":17719:17720   */\n      0x00\n        /* \"#utility.yul\":17712:17727   */\n      revert\n        /* \"#utility.yul\":17747:17934   */\n    tag_252:\n        /* \"#utility.yul\":17786:17789   */\n      0x00\n        /* \"#utility.yul\":17813:17837   */\n      tag_471\n        /* \"#utility.yul\":17831:17836   */\n      dup3\n        /* \"#utility.yul\":17813:17837   */\n      tag_274\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":17804:17837   */\n      swap2\n      pop\n        /* \"#utility.yul\":17863:17867   */\n      0x00\n        /* \"#utility.yul\":17856:17861   */\n      dup3\n        /* \"#utility.yul\":17853:17868   */\n      sub\n        /* \"#utility.yul\":17850:17891   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":17871:17889   */\n      tag_473\n      tag_285\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17850:17891   */\n    tag_472:\n        /* \"#utility.yul\":17922:17923   */\n      0x01\n        /* \"#utility.yul\":17915:17920   */\n      dup3\n        /* \"#utility.yul\":17911:17924   */\n      sub\n        /* \"#utility.yul\":17904:17924   */\n      swap1\n      pop\n        /* \"#utility.yul\":17747:17934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17944:18134   */\n    tag_306:\n        /* \"#utility.yul\":18088:18122   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":18084:18085   */\n      0x00\n        /* \"#utility.yul\":18076:18082   */\n      dup3\n        /* \"#utility.yul\":18072:18086   */\n      add\n        /* \"#utility.yul\":18065:18123   */\n      mstore\n        /* \"#utility.yul\":17944:18134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18144:18526   */\n    tag_307:\n        /* \"#utility.yul\":18286:18289   */\n      0x00\n        /* \"#utility.yul\":18311:18378   */\n      tag_476\n        /* \"#utility.yul\":18375:18377   */\n      0x20\n        /* \"#utility.yul\":18370:18373   */\n      dup4\n        /* \"#utility.yul\":18311:18378   */\n      tag_259\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":18304:18378   */\n      swap2\n      pop\n        /* \"#utility.yul\":18391:18484   */\n      tag_477\n        /* \"#utility.yul\":18480:18483   */\n      dup3\n        /* \"#utility.yul\":18391:18484   */\n      tag_306\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":18513:18515   */\n      0x20\n        /* \"#utility.yul\":18508:18511   */\n      dup3\n        /* \"#utility.yul\":18504:18516   */\n      add\n        /* \"#utility.yul\":18497:18516   */\n      swap1\n      pop\n        /* \"#utility.yul\":18144:18526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18536:18971   */\n    tag_255:\n        /* \"#utility.yul\":18702:18706   */\n      0x00\n        /* \"#utility.yul\":18744:18746   */\n      0x20\n        /* \"#utility.yul\":18733:18742   */\n      dup3\n        /* \"#utility.yul\":18729:18747   */\n      add\n        /* \"#utility.yul\":18721:18747   */\n      swap1\n      pop\n        /* \"#utility.yul\":18797:18806   */\n      dup2\n        /* \"#utility.yul\":18791:18795   */\n      dup2\n        /* \"#utility.yul\":18787:18807   */\n      sub\n        /* \"#utility.yul\":18783:18784   */\n      0x00\n        /* \"#utility.yul\":18772:18781   */\n      dup4\n        /* \"#utility.yul\":18768:18785   */\n      add\n        /* \"#utility.yul\":18761:18808   */\n      mstore\n        /* \"#utility.yul\":18829:18960   */\n      tag_479\n        /* \"#utility.yul\":18955:18959   */\n      dup2\n        /* \"#utility.yul\":18829:18960   */\n      tag_307\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18821:18960   */\n      swap1\n      pop\n        /* \"#utility.yul\":18536:18971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18981:19177   */\n    tag_308:\n        /* \"#utility.yul\":19033:19110   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19030:19031   */\n      0x00\n        /* \"#utility.yul\":19023:19111   */\n      mstore\n        /* \"#utility.yul\":19134:19138   */\n      0x12\n        /* \"#utility.yul\":19131:19132   */\n      0x04\n        /* \"#utility.yul\":19124:19139   */\n      mstore\n        /* \"#utility.yul\":19162:19166   */\n      0x24\n        /* \"#utility.yul\":19159:19160   */\n      0x00\n        /* \"#utility.yul\":19152:19167   */\n      revert\n        /* \"#utility.yul\":19187:19392   */\n    tag_258:\n        /* \"#utility.yul\":19227:19228   */\n      0x00\n        /* \"#utility.yul\":19248:19268   */\n      tag_482\n        /* \"#utility.yul\":19266:19267   */\n      dup3\n        /* \"#utility.yul\":19248:19268   */\n      tag_274\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":19243:19268   */\n      swap2\n      pop\n        /* \"#utility.yul\":19286:19306   */\n      tag_483\n        /* \"#utility.yul\":19304:19305   */\n      dup4\n        /* \"#utility.yul\":19286:19306   */\n      tag_274\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":19281:19306   */\n      swap3\n      pop\n        /* \"#utility.yul\":19329:19330   */\n      dup3\n        /* \"#utility.yul\":19319:19354   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":19334:19352   */\n      tag_485\n      tag_308\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":19319:19354   */\n    tag_484:\n        /* \"#utility.yul\":19380:19381   */\n      dup3\n        /* \"#utility.yul\":19377:19378   */\n      dup3\n        /* \"#utility.yul\":19373:19382   */\n      div\n        /* \"#utility.yul\":19368:19382   */\n      swap1\n      pop\n        /* \"#utility.yul\":19187:19392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc631ef16404c6bd371339a40aec1fbe8a22961e92ace5eb1c9f1467cb38218664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1941": {
									"entryPoint": null,
									"id": 1941,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 549,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_400": {
									"entryPoint": 896,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 790,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052640430e2340060055569152d02c7e14af68000006007556001600a556000600c60006101000a81548160ff02191690831515021790555062278d00600d5562093a80600e55604051620020943803806200209483398181016040528101906200006e9190620003f2565b620000a07fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738826200022560201b60201c565b620000d27f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826200022560201b60201c565b620001047f305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289826200022560201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260808181525050606f600b60008081526020019081526020016000208190555060de600b6000600181526020019081526020016000208190555061014d600b60006002815260200190815260200160002081905550505062000439565b6200023782826200031660201b60201c565b6200031257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002b76200038060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ba826200038d565b9050919050565b620003cc81620003ad565b8114620003d857600080fd5b50565b600081519050620003ec81620003c1565b92915050565b600080604083850312156200040c576200040b62000388565b5b60006200041c85828601620003db565b92505060206200042f85828601620003db565b9150509250929050565b608051611c3162000463600039600081816107060152818161084201526108dd0152611c316000f3fe6080604052600436106100e15760003560e01c806373f425611161007f578063a217fddf11610059578063a217fddf146102f4578063a6f2ae3a1461031f578063b1ac51f81461033d578063d547741f1461036857610125565b806373f425611461026157806376082a5e1461028c57806391d14854146102b757610125565b80632e1a7d4d116100bb5780632e1a7d4d146101cf5780632f2ff15d146101f857806336568abe146102215780634f2484091461024a57610125565b806301ffc9a71461012a578063248a9ca314610167578063282c51f3146101a457610125565b36610125577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610113906112b5565b60405180910390a1610123610391565b005b600080fd5b34801561013657600080fd5b50610151600480360381019061014c9190611332565b61060d565b60405161015e919061137a565b60405180910390f35b34801561017357600080fd5b5061018e600480360381019061018991906113cb565b610687565b60405161019b9190611407565b60405180910390f35b3480156101b057600080fd5b506101b96106a6565b6040516101c69190611407565b60405180910390f35b3480156101db57600080fd5b506101f660048036038101906101f19190611458565b6106ca565b005b34801561020457600080fd5b5061021f600480360381019061021a91906114e3565b610968565b005b34801561022d57600080fd5b50610248600480360381019061024391906114e3565b610989565b005b34801561025657600080fd5b5061025f610a0c565b005b34801561026d57600080fd5b50610276610b91565b604051610283919061137a565b60405180910390f35b34801561029857600080fd5b506102a1610ba8565b6040516102ae9190611407565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d991906114e3565b610bcc565b6040516102eb919061137a565b60405180910390f35b34801561030057600080fd5b50610309610c36565b6040516103169190611407565b60405180910390f35b610327610391565b604051610334919061137a565b60405180910390f35b34801561034957600080fd5b50610352610c3d565b60405161035f9190611407565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a91906114e3565b610c61565b005b600060055442106103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce9061156f565b60405180910390fd5b6000341161041a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610411906115db565b60405180910390fd5b600061042534610c82565b905060075460095482610438919061162a565b10610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906116aa565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016104d59291906116e8565b6020604051808303816000875af11580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610518919061173d565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105769291906116e8565b6020604051808303816000875af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b9919061173d565b50600954816105c8919061162a565b6009819055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727816040516105fd919061176a565b60405180910390a1600191505090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610680575061067f82610ca0565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba77386106f481610d0a565b426012600d546107049190611785565b7f000000000000000000000000000000000000000000000000000000000000000061072f919061162a565b111561083057600061074083610d1e565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161079f9291906116e8565b6020604051808303816000875af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e2919061173d565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610829573d6000803e3d6000fd5b5050610964565b42600c600d546108409190611785565b7f000000000000000000000000000000000000000000000000000000000000000061086b919061162a565b11156108cb57600061087c83610d1e565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108c4573d6000803e3d6000fd5b5050610963565b426006600d546108db9190611785565b7f0000000000000000000000000000000000000000000000000000000000000000610906919061162a565b111561096257600061091783610d1e565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561095f573d6000803e3d6000fd5b50505b5b5b5050565b61097182610687565b61097a81610d0a565b6109848383610d41565b505050565b610991610e21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f590611839565b60405180910390fd5b610a088282610e29565b5050565b6005544210610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a479061156f565b60405180910390fd5b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610a7a81610d0a565b600c60009054906101000a900460ff1615610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac1906118a5565b60405180910390fd5b6000610ae3600954600754610f0a90919063ffffffff16565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610b40919061176a565b600060405180830381600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b50505050506001600c60006101000a81548160ff02191690831515021790555050565b6000600c60009054906101000a900460ff16905090565b7fb165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba773881565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b7f305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb328981565b610c6a82610687565b610c7381610d0a565b610c7d8383610e29565b505050565b6000610c99600a5483610f2090919063ffffffff16565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d1b81610d16610e21565b610f36565b50565b6000610d3a610d2b610fbb565b83610f2090919063ffffffff16565b9050919050565b610d4b8282610bcc565b610e1d57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610dc2610e21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610e338282610bcc565b15610f0657600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eab610e21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008183610f1891906118c5565b905092915050565b60008183610f2e9190611785565b905092915050565b610f408282610bcc565b610fb757610f4d81610fd9565b610f5b8360001c6020611006565b604051602001610f6c929190611a02565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae9190611a86565b60405180910390fd5b5050565b6000610fd460075460095461124290919063ffffffff16565b905090565b6060610fff8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611006565b9050919050565b6060600060028360026110199190611785565b611023919061162a565b67ffffffffffffffff81111561103c5761103b611aa8565b5b6040519080825280601f01601f19166020018201604052801561106e5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106110a6576110a5611ad7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061110a57611109611ad7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261114a9190611785565b611154919061162a565b90505b60018111156111f4577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061119657611195611ad7565b5b1a60f81b8282815181106111ad576111ac611ad7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806111ed90611b06565b9050611157565b5060008414611238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122f90611b7b565b60405180910390fd5b8091505092915050565b600081836112509190611bca565b905092915050565b600082825260208201905092915050565b7f66616c6c6261636b206869740000000000000000000000000000000000000000600082015250565b600061129f600c83611258565b91506112aa82611269565b602082019050919050565b600060208201905081810360008301526112ce81611292565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61130f816112da565b811461131a57600080fd5b50565b60008135905061132c81611306565b92915050565b600060208284031215611348576113476112d5565b5b60006113568482850161131d565b91505092915050565b60008115159050919050565b6113748161135f565b82525050565b600060208201905061138f600083018461136b565b92915050565b6000819050919050565b6113a881611395565b81146113b357600080fd5b50565b6000813590506113c58161139f565b92915050565b6000602082840312156113e1576113e06112d5565b5b60006113ef848285016113b6565b91505092915050565b61140181611395565b82525050565b600060208201905061141c60008301846113f8565b92915050565b6000819050919050565b61143581611422565b811461144057600080fd5b50565b6000813590506114528161142c565b92915050565b60006020828403121561146e5761146d6112d5565b5b600061147c84828501611443565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114b082611485565b9050919050565b6114c0816114a5565b81146114cb57600080fd5b50565b6000813590506114dd816114b7565b92915050565b600080604083850312156114fa576114f96112d5565b5b6000611508858286016113b6565b9250506020611519858286016114ce565b9150509250929050565b7f49434f206973206f766572203a28200000000000000000000000000000000000600082015250565b6000611559600f83611258565b915061156482611523565b602082019050919050565b600060208201905081810360008301526115888161154c565b9050919050565b7f7468656d2f7468657920706c656173652073656e64206d657469730000000000600082015250565b60006115c5601b83611258565b91506115d08261158f565b602082019050919050565b600060208201905081810360008301526115f4816115b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061163582611422565b915061164083611422565b9250828201905080821115611658576116576115fb565b5b92915050565b7f657863656564732074686520746f74616c20666f722073616c65000000000000600082015250565b6000611694601a83611258565b915061169f8261165e565b602082019050919050565b600060208201905081810360008301526116c381611687565b9050919050565b6116d3816114a5565b82525050565b6116e281611422565b82525050565b60006040820190506116fd60008301856116ca565b61170a60208301846116d9565b9392505050565b61171a8161135f565b811461172557600080fd5b50565b60008151905061173781611711565b92915050565b600060208284031215611753576117526112d5565b5b600061176184828501611728565b91505092915050565b600060208201905061177f60008301846116d9565b92915050565b600061179082611422565b915061179b83611422565b92508282026117a981611422565b915082820484148315176117c0576117bf6115fb565b5b5092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611823602f83611258565b915061182e826117c7565b604082019050919050565b6000602082019050818103600083015261185281611816565b9050919050565b7f74686520737570706c7920697320616c7265616479206275726e656400000000600082015250565b600061188f601c83611258565b915061189a82611859565b602082019050919050565b600060208201905081810360008301526118be81611882565b9050919050565b60006118d082611422565b91506118db83611422565b92508282039050818111156118f3576118f26115fb565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061193a6017836118f9565b915061194582611904565b601782019050919050565b600081519050919050565b60005b8381101561197957808201518184015260208101905061195e565b60008484015250505050565b600061199082611950565b61199a81856118f9565b93506119aa81856020860161195b565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006119ec6011836118f9565b91506119f7826119b6565b601182019050919050565b6000611a0d8261192d565b9150611a198285611985565b9150611a24826119df565b9150611a308284611985565b91508190509392505050565b6000601f19601f8301169050919050565b6000611a5882611950565b611a628185611258565b9350611a7281856020860161195b565b611a7b81611a3c565b840191505092915050565b60006020820190508181036000830152611aa08184611a4d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b1182611422565b915060008203611b2457611b236115fb565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611b65602083611258565b9150611b7082611b2f565b602082019050919050565b60006020820190508181036000830152611b9481611b58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bd582611422565b9150611be083611422565b925082611bf057611bef611b9b565b5b82820490509291505056fea2646970667358221220bc631ef16404c6bd371339a40aec1fbe8a22961e92ace5eb1c9f1467cb38218664736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH5 0x430E23400 PUSH1 0x5 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x278D00 PUSH1 0xD SSTORE PUSH3 0x93A80 PUSH1 0xE SSTORE PUSH1 0x40 MLOAD PUSH3 0x2094 CODESIZE SUB DUP1 PUSH3 0x2094 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6E SWAP2 SWAP1 PUSH3 0x3F2 JUMP JUMPDEST PUSH3 0xA0 PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP3 PUSH3 0x225 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD2 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH3 0x225 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP3 PUSH3 0x225 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0x6F PUSH1 0xB PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xDE PUSH1 0xB PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0xB PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x439 JUMP JUMPDEST PUSH3 0x237 DUP3 DUP3 PUSH3 0x316 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x312 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x2B7 PUSH3 0x380 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BA DUP3 PUSH3 0x38D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CC DUP2 PUSH3 0x3AD JUMP JUMPDEST DUP2 EQ PUSH3 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3EC DUP2 PUSH3 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x40C JUMPI PUSH3 0x40B PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x41C DUP6 DUP3 DUP7 ADD PUSH3 0x3DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x42F DUP6 DUP3 DUP7 ADD PUSH3 0x3DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C31 PUSH3 0x463 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x706 ADD MSTORE DUP2 DUP2 PUSH2 0x842 ADD MSTORE PUSH2 0x8DD ADD MSTORE PUSH2 0x1C31 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F42561 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB1AC51F8 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x368 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x73F42561 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B7 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x24A JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1A4 JUMPI PUSH2 0x125 JUMP JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x113 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x123 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x425 CALLVALUE PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD DUP3 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST LT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x680 JUMPI POP PUSH2 0x67F DUP3 PUSH2 0xCA0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x6F4 DUP2 PUSH2 0xD0A JUMP JUMPDEST TIMESTAMP PUSH1 0x12 PUSH1 0xD SLOAD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 PUSH2 0x740 DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x829 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x964 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH1 0xD SLOAD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 PUSH2 0x87C DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x963 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH1 0xD SLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 PUSH2 0x917 DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x95F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x971 DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x97A DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x984 DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x991 PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA08 DUP3 DUP3 PUSH2 0xE29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xA7A DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xACA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE3 PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP2 JUMP JUMPDEST PUSH2 0xC6A DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0xC73 DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0xC7D DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 PUSH1 0xA SLOAD DUP4 PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0xD16 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A PUSH2 0xD2B PUSH2 0xFBB JUMP JUMPDEST DUP4 PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xE1D JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC2 PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE33 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEAB PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF40 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xFB7 JUMPI PUSH2 0xF4D DUP2 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0xF5B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF6C SWAP3 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1242 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFFF DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1019 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103C JUMPI PUSH2 0x103B PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x106E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH2 0x10A5 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x1109 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F4 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11AD JUMPI PUSH2 0x11AC PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x11ED SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1157 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122F SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129F PUSH1 0xC DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AA DUP3 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CE DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP2 EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x132C DUP2 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1356 DUP5 DUP3 DUP6 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A8 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C5 DUP2 PUSH2 0x139F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13EF DUP5 DUP3 DUP6 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1401 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1435 DUP2 PUSH2 0x1422 JUMP JUMPDEST DUP2 EQ PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1452 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 DUP3 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C0 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DD DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FA JUMPI PUSH2 0x14F9 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP6 DUP3 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1519 DUP6 DUP3 DUP7 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1559 PUSH1 0xF DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x1564 DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1588 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468656D2F7468657920706C656173652073656E64206D657469730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C5 PUSH1 0x1B DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D0 DUP3 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1640 DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH1 0x1A DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x169F DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x1687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x171A DUP2 PUSH2 0x135F JUMP JUMPDEST DUP2 EQ PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1737 DUP2 PUSH2 0x1711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1761 DUP5 DUP3 DUP6 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1790 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17A9 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x17C0 JUMPI PUSH2 0x17BF PUSH2 0x15FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1823 PUSH1 0x2F DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x182E DUP3 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1852 DUP2 PUSH2 0x1816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520737570706C7920697320616C7265616479206275726E656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F PUSH1 0x1C DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x189A DUP3 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18BE DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DB DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18F3 JUMPI PUSH2 0x18F2 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x17 DUP4 PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1945 DUP3 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1979 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x195E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1990 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x199A DUP2 DUP6 PUSH2 0x18F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC PUSH1 0x11 DUP4 PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP3 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D DUP3 PUSH2 0x192D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A19 DUP3 DUP6 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A24 DUP3 PUSH2 0x19DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A30 DUP3 DUP5 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A58 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1A62 DUP2 DUP6 PUSH2 0x1258 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195B JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA0 DUP2 DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B11 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B65 PUSH1 0x20 DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B94 DUP2 PUSH2 0x1B58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BF0 JUMPI PUSH2 0x1BEF PUSH2 0x1B9B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH4 0x1EF16404 0xC6 0xBD CALLDATACOPY SGT CODECOPY LOG4 EXP 0xEC 0x1F 0xBE DUP11 0x22 SWAP7 0x1E SWAP3 0xAC 0xE5 0xEB SHR SWAP16 EQ PUSH8 0xCB38218664736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "266:3841:8:-:0;;;759:11;742:28;;809:14;792:31;;896:1;876:21;;962:5;940:27;;;;;;;;;;;;;;;;;;;;1014:7;999:22;;1042:6;1027:21;;1118:468;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1231:31;373:26;1257:4;1231:10;;;:31;;:::i;:::-;1272:29;443:24;1296:4;1272:10;;;:29;;:::i;:::-;1311:33;515:28;1339:4;1311:10;;;:33;;:::i;:::-;1370:10;1354:5;;:27;;;;;;;;;;;;;;;;;;1404:5;1391:4;;:19;;;;;;;;;;;;;;;;;;1441:4;1420:10;;:26;;;;;;;;;;;;;;;;;;1472:15;1456:31;;;;;;1512:3;1497:9;:12;1507:1;1497:12;;;;;;;;;;;:18;;;;1540:3;1525:9;:12;1535:1;1525:12;;;;;;;;;;;:18;;;;1568:3;1553:9;:12;1563:1;1553:12;;;;;;;;;;;:18;;;;1118:468;;266:3841;;7461:233:0;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;266:3841:8:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1818": {
									"entryPoint": 1702,
									"id": 1818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 3126,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EXTEND_ICO_ROLE_1823": {
									"entryPoint": 3133,
									"id": 1823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INVESTOR_ROLE_1813": {
									"entryPoint": 2984,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2016": {
									"entryPoint": null,
									"id": 2016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 3894,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 3338,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 3393,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_400": {
									"entryPoint": 3617,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_314": {
									"entryPoint": 3625,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burned_2244": {
									"entryPoint": 2961,
									"id": 2244,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@buy_2078": {
									"entryPoint": 913,
									"id": 2078,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@conversion_2211": {
									"entryPoint": 3202,
									"id": 2211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1707": {
									"entryPoint": 4674,
									"id": 1707,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endICO_2197": {
									"entryPoint": 2572,
									"id": 2197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_146": {
									"entryPoint": 1671,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 2408,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 3020,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1692": {
									"entryPoint": 3872,
									"id": 1692,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@percentFromICO_2225": {
									"entryPoint": 3358,
									"id": 2225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_209": {
									"entryPoint": 2441,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 3169,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@soldPercent_2236": {
									"entryPoint": 4027,
									"id": 2236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_1677": {
									"entryPoint": 3850,
									"id": 1677,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 1549,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_608": {
									"entryPoint": 3232,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_564": {
									"entryPoint": 4102,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_584": {
									"entryPoint": 4057,
									"id": 584,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdraw_2172": {
									"entryPoint": 1738,
									"id": 2172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19399:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "66616c6c6261636b20686974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:14:10",
																		"type": "",
																		"value": "fallback hit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "572:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "577:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "513:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "678:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																	"nodeType": "YulIdentifier",
																	"src": "589:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "702:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "484:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "492:3:10",
														"type": ""
													}
												],
												"src": "350:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "915:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "903:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "969:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1129:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1003:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "995:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "888:4:10",
														"type": ""
													}
												],
												"src": "722:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1187:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1197:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1180:6:10",
														"type": ""
													}
												],
												"src": "1147:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1327:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1228:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1351:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1528:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1543:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1528:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1500:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1510:7:10",
														"type": ""
													}
												],
												"src": "1474:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1736:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1739:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1729:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1718:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "1701:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1701:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1691:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:42:10"
															},
															"nodeType": "YulIf",
															"src": "1681:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:10",
														"type": ""
													}
												],
												"src": "1629:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1806:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1816:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1838:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1825:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1816:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1880:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1854:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1854:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1784:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1792:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1800:5:10",
														"type": ""
													}
												],
												"src": "1755:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1963:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2009:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2011:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1984:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1993:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1980:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1980:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1976:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:32:10"
															},
															"nodeType": "YulIf",
															"src": "1973:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2102:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2117:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2121:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2146:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2180:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2200:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2156:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2146:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1933:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1944:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1956:6:10",
														"type": ""
													}
												],
												"src": "1898:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2283:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2308:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2301:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2283:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2255:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2265:7:10",
														"type": ""
													}
												],
												"src": "2231:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2423:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2408:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2374:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2381:3:10",
														"type": ""
													}
												],
												"src": "2327:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2534:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2544:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2556:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2567:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2552:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2544:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2618:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2631:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2642:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2580:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2506:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2518:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2529:4:10",
														"type": ""
													}
												],
												"src": "2442:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2713:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2724:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2713:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2685:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2695:7:10",
														"type": ""
													}
												],
												"src": "2658:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2841:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2832:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2814:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2814:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2804:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2804:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:43:10"
															},
															"nodeType": "YulIf",
															"src": "2794:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2777:5:10",
														"type": ""
													}
												],
												"src": "2741:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2953:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2940:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2931:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2996:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2969:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2899:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2907:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2915:5:10",
														"type": ""
													}
												],
												"src": "2869:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3126:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3128:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3128:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3097:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:32:10"
															},
															"nodeType": "YulIf",
															"src": "3090:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3219:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3234:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3238:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3263:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3309:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3318:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3273:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3263:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3050:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3061:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:10",
														"type": ""
													}
												],
												"src": "3014:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3454:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3436:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3409:3:10",
														"type": ""
													}
												],
												"src": "3349:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3571:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3581:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3581:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3661:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3617:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3543:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3555:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3566:4:10",
														"type": ""
													}
												],
												"src": "3473:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3756:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3767:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3738:7:10",
														"type": ""
													}
												],
												"src": "3701:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3827:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3850:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3875:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3857:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3857:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3847:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:43:10"
															},
															"nodeType": "YulIf",
															"src": "3837:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3820:5:10",
														"type": ""
													}
												],
												"src": "3784:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3983:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3974:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4039:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4012:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3942:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3958:5:10",
														"type": ""
													}
												],
												"src": "3912:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4169:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4171:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4171:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4171:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4144:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:32:10"
															},
															"nodeType": "YulIf",
															"src": "4133:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4262:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4277:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4281:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4306:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4341:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4352:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4361:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4316:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4306:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4093:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4104:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4116:6:10",
														"type": ""
													}
												],
												"src": "4057:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4437:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4447:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4462:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4447:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4419:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4429:7:10",
														"type": ""
													}
												],
												"src": "4392:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4569:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4579:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4608:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4590:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4579:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4551:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4561:7:10",
														"type": ""
													}
												],
												"src": "4524:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4726:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4735:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4728:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4728:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4728:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4692:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4717:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4699:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4699:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:43:10"
															},
															"nodeType": "YulIf",
															"src": "4679:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4662:5:10",
														"type": ""
													}
												],
												"src": "4626:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4806:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4816:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4838:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4825:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4816:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4854:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4784:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4792:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4800:5:10",
														"type": ""
													}
												],
												"src": "4754:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5028:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5030:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5030:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5030:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:32:10"
															},
															"nodeType": "YulIf",
															"src": "4992:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5121:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5136:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5150:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5140:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5165:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5200:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5211:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5196:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5196:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5220:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5175:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5165:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5248:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5263:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5267:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5293:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5328:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5339:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5324:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5324:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5303:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5303:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5293:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:10",
														"type": ""
													}
												],
												"src": "4899:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5485:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:14:10"
																	},
																	{
																		"hexValue": "49434f206973206f766572203a2820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5519:17:10",
																		"type": "",
																		"value": "ICO is over :( "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5477:6:10",
														"type": ""
													}
												],
												"src": "5379:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5704:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5718:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5725:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5894:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																	"nodeType": "YulIdentifier",
																	"src": "5805:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5922:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5692:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5700:3:10",
														"type": ""
													}
												],
												"src": "5558:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6121:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6135:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6197:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6205:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6211:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6201:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6235:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6369:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6243:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6235:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6101:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:10",
														"type": ""
													}
												],
												"src": "5950:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6501:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6527:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:14:10"
																	},
																	{
																		"hexValue": "7468656d2f7468657920706c656173652073656e64206d65746973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6539:29:10",
																		"type": "",
																		"value": "them/they please send metis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6493:6:10",
														"type": ""
													}
												],
												"src": "6395:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6750:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6816:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6821:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6757:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6757:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6750:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6926:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																	"nodeType": "YulIdentifier",
																	"src": "6837:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6837:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6943:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6954:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6724:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6732:3:10",
														"type": ""
													}
												],
												"src": "6590:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7153:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7167:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7179:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7175:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7167:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7218:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7229:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7214:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7237:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7243:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7233:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7267:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7401:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7275:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7275:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7267:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7133:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7148:4:10",
														"type": ""
													}
												],
												"src": "6982:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7455:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7476:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7479:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7469:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7580:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7570:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7570:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7608:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7598:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7427:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7677:167:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7691:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7714:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7696:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7691:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7729:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7752:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7734:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7729:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7767:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7778:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7781:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7774:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7811:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7813:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7813:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7813:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7803:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7806:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7800:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:10:10"
															},
															"nodeType": "YulIf",
															"src": "7797:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7664:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7667:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7673:3:10",
														"type": ""
													}
												],
												"src": "7633:211:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7986:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7994:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7982:14:10"
																	},
																	{
																		"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7998:28:10",
																		"type": "",
																		"value": "exceeds the total for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7975:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7952:6:10",
														"type": ""
													}
												],
												"src": "7854:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8194:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8208:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8215:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8384:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																	"nodeType": "YulIdentifier",
																	"src": "8295:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8295:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8401:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8401:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8182:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8190:3:10",
														"type": ""
													}
												],
												"src": "8048:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8611:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8625:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8637:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8648:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8676:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8687:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8672:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8695:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8701:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8691:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8665:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8725:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8859:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8733:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8725:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8591:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8606:4:10",
														"type": ""
													}
												],
												"src": "8440:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8950:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8971:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8994:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8976:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8964:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8964:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8964:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8938:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8945:3:10",
														"type": ""
													}
												],
												"src": "8885:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9086:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9107:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9130:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9112:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9112:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9100:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9074:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9081:3:10",
														"type": ""
													}
												],
												"src": "9021:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9283:222:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9297:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9309:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9320:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9305:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9297:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9381:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9394:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9390:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9337:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9422:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9422:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9247:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9259:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9267:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9278:4:10",
														"type": ""
													}
												],
												"src": "9157:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9555:84:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9613:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9622:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9625:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9615:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9615:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9615:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9582:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9604:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9589:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9589:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9579:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9579:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9572:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:40:10"
															},
															"nodeType": "YulIf",
															"src": "9569:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9548:5:10",
														"type": ""
													}
												],
												"src": "9515:124:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:89:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9738:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9732:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9732:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9723:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9782:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9758:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9758:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9758:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9687:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9695:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9703:5:10",
														"type": ""
													}
												],
												"src": "9649:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9882:295:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9932:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9934:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9934:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9934:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9907:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9916:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9903:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9903:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9928:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9899:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9899:32:10"
															},
															"nodeType": "YulIf",
															"src": "9896:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10029:137:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10048:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10062:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10052:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10081:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10124:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10135:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10120:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10144:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10091:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10081:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9852:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9863:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9875:6:10",
														"type": ""
													}
												],
												"src": "9808:369:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10285:136:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10299:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10311:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10322:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10307:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10299:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10383:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10396:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10407:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10392:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10339:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10257:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10269:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10280:4:10",
														"type": ""
													}
												],
												"src": "10187:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:410:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10493:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10516:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10498:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10498:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10493:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10531:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10554:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10536:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10531:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10569:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10592:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10595:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10588:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10573:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10610:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10639:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10621:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10621:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10610:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10856:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10858:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10858:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10858:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10777:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10770:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10770:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10804:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10811:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10820:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10807:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10807:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10801:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10801:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10746:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:95:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10722:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10722:133:10"
															},
															"nodeType": "YulIf",
															"src": "10719:159:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10462:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10465:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10471:7:10",
														"type": ""
													}
												],
												"src": "10431:458:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11005:140:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11031:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11039:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11027:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11027:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11043:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11020:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11020:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11103:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11111:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11099:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11099:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11116:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11092:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11092:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11092:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10997:6:10",
														"type": ""
													}
												],
												"src": "10899:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11301:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11315:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11381:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11386:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11322:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11322:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11315:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11491:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "11402:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11402:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11402:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11508:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11519:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11289:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11297:3:10",
														"type": ""
													}
												],
												"src": "11155:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11718:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11732:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11744:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11755:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11740:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11732:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11783:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11794:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11779:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11802:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11808:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11798:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11772:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11772:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11832:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11966:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11840:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11832:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11698:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11713:4:10",
														"type": ""
													}
												],
												"src": "11547:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12098:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12124:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12132:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12120:14:10"
																	},
																	{
																		"hexValue": "74686520737570706c7920697320616c7265616479206275726e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12136:30:10",
																		"type": "",
																		"value": "the supply is already burned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12113:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12090:6:10",
														"type": ""
													}
												],
												"src": "11992:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12334:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12348:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12414:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12355:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12355:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12524:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																	"nodeType": "YulIdentifier",
																	"src": "12435:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12435:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12541:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12552:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12548:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12548:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12541:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12330:3:10",
														"type": ""
													}
												],
												"src": "12188:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12751:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12765:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12777:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12765:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12816:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12827:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12835:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12841:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12831:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12805:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12865:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12999:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12873:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12873:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12865:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12731:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12746:4:10",
														"type": ""
													}
												],
												"src": "12580:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13070:169:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13084:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13107:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13089:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13089:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13084:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13122:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13145:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13127:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13127:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13122:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13160:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13172:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13175:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13168:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13168:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13160:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13206:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13208:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13208:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13208:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13197:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13203:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13194:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:11:10"
															},
															"nodeType": "YulIf",
															"src": "13191:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13056:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13059:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13065:4:10",
														"type": ""
													}
												],
												"src": "13025:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13363:42:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13377:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13392:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13377:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13335:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13340:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13351:11:10",
														"type": ""
													}
												],
												"src": "13249:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13521:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13547:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13555:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13543:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13559:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13536:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13536:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13536:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13513:6:10",
														"type": ""
													}
												],
												"src": "13415:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13770:254:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13784:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13868:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13873:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13791:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13784:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13978:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "13889:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13889:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13995:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14006:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14011:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14002:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14002:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13758:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13766:3:10",
														"type": ""
													}
												],
												"src": "13606:418:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14093:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14108:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14124:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14118:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14118:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14108:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14076:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14086:6:10",
														"type": ""
													}
												],
												"src": "14034:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14213:212:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14227:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14236:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14231:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14304:71:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14333:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14338:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14329:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14329:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14352:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14357:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14348:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14348:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14342:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14342:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14322:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14322:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14322:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14261:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14264:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14258:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14258:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14272:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14274:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14283:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14286:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14279:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14279:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14274:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14254:3:10",
																"statements": []
															},
															"src": "14250:125:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14399:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14404:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14395:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14413:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14388:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14195:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14200:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14205:6:10",
														"type": ""
													}
												],
												"src": "14151:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14545:300:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14559:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14606:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14573:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14573:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14563:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14625:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14709:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14714:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14632:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14632:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14625:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14773:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14780:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14769:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14787:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14792:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14734:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14734:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14734:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14812:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14823:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14828:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14819:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14819:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14812:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14526:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14533:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14541:3:10",
														"type": ""
													}
												],
												"src": "14435:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14961:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14987:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14995:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14983:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14999:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14976:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14976:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14976:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14953:6:10",
														"type": ""
													}
												],
												"src": "14855:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15204:254:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15218:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15302:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15307:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15225:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15225:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15218:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15412:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "15323:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15323:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15323:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15429:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15440:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15445:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15436:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15436:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15429:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15192:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15200:3:10",
														"type": ""
													}
												],
												"src": "15040:418:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15854:605:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15869:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16020:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15876:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15876:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15869:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16038:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16127:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16136:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16045:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16045:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16038:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16154:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16305:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16161:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16161:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16154:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16323:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16412:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16421:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16330:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16330:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16323:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16439:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16446:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16439:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15825:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15831:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15839:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15850:3:10",
														"type": ""
													}
												],
												"src": "15468:991:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16517:62:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16531:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16549:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16556:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16545:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16565:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16561:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16561:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16541:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16531:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16500:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16510:6:10",
														"type": ""
													}
												],
												"src": "16469:110:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16681:305:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16695:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16742:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16709:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16709:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16699:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16761:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16827:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16832:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16768:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16768:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16761:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16891:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16898:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16887:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16887:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16905:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16910:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16852:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16852:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16852:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16930:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16941:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16968:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16946:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16946:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16937:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16930:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16662:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16669:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16677:3:10",
														"type": ""
													}
												],
												"src": "16589:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17114:211:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17128:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17140:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17151:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17136:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17128:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17190:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17175:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17198:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17204:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17194:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17194:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17168:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17168:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17168:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17228:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17300:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17309:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17236:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17236:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17228:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17086:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17098:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17109:4:10",
														"type": ""
													}
												],
												"src": "16996:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17363:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17384:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17387:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17377:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17377:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17485:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17488:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17478:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17478:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17478:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17513:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17516:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17506:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17506:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17506:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17335:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17569:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17590:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17593:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17583:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17583:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17583:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17691:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17694:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17684:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17684:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17719:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17722:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17712:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17712:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17712:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17541:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17790:144:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17804:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17831:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17813:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17813:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17804:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17869:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17871:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17871:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17871:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17856:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17863:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17853:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17853:15:10"
															},
															"nodeType": "YulIf",
															"src": "17850:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17904:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17915:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17922:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17911:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17904:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17776:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17786:3:10",
														"type": ""
													}
												],
												"src": "17747:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18050:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18076:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18072:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18088:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18065:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18065:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18042:6:10",
														"type": ""
													}
												],
												"src": "17944:190:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18290:236:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18304:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18370:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18375:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18311:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18311:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18304:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18480:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "18391:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18391:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18391:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18497:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18508:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18504:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18497:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18278:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18286:3:10",
														"type": ""
													}
												],
												"src": "18144:382:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18707:264:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18721:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18733:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18744:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18729:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18729:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18721:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18772:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18783:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18768:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18791:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18797:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18787:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18787:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18761:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18761:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18821:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18955:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18829:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18829:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18821:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18687:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18702:4:10",
														"type": ""
													}
												],
												"src": "18536:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19009:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19030:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19033:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19023:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19023:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19023:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19131:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19134:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19124:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19124:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19124:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19159:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19162:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19152:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19152:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19152:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18981:196:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19229:163:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19243:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19266:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19248:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19248:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19243:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19281:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19304:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19286:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19286:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19281:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19332:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19334:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19334:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19334:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19329:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19322:9:10"
															},
															"nodeType": "YulIf",
															"src": "19319:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19368:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19377:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19380:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19373:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19373:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19368:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19218:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19221:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19227:1:10",
														"type": ""
													}
												],
												"src": "19187:205:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(memPtr) {\n\n        mstore(add(memPtr, 0), \"fallback hit\")\n\n    }\n\n    function abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO is over :( \")\n\n        }\n\n        function abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n            store_literal_in_memory_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd(memPtr) {\n\n            mstore(add(memPtr, 0), \"them/they please send metis\")\n\n        }\n\n        function abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n            store_literal_in_memory_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function panic_error_0x11() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n\n        function checked_add_t_uint256(x, y) -> sum {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            sum := add(x, y)\n\n            if gt(x, sum) { panic_error_0x11() }\n\n        }\n\n        function store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(memPtr) {\n\n            mstore(add(memPtr, 0), \"exceeds the total for sale\")\n\n        }\n\n        function abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n            store_literal_in_memory_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n            mstore(pos, cleanup_t_address(value))\n        }\n\n        function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n            mstore(pos, cleanup_t_uint256(value))\n        }\n\n        function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n            tail := add(headStart, 64)\n\n            abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        }\n\n        function validator_revert_t_bool(value) {\n            if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n        }\n\n        function abi_decode_t_bool_fromMemory(offset, end) -> value {\n            value := mload(offset)\n            validator_revert_t_bool(value)\n        }\n\n        function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n            if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n            {\n\n                let offset := 0\n\n                value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n            }\n\n        }\n\n        function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        }\n\n        function checked_mul_t_uint256(x, y) -> product {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            let product_raw := mul(x, y)\n            product := cleanup_t_uint256(product_raw)\n\n            // overflow, if x != 0 and y != product/x\n            if iszero(\n                or(\n                    iszero(x),\n                    eq(y, div(product, x))\n                )\n            ) { panic_error_0x11() }\n\n        }\n\n        function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n            mstore(add(memPtr, 32), \" roles for self\")\n\n        }\n\n        function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n            store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n            end := add(pos, 64)\n        }\n\n        function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709(memPtr) {\n\n            mstore(add(memPtr, 0), \"the supply is already burned\")\n\n        }\n\n        function abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n            store_literal_in_memory_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function checked_sub_t_uint256(x, y) -> diff {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            diff := sub(x, y)\n\n            if gt(diff, x) { panic_error_0x11() }\n\n        }\n\n        function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n            updated_pos := pos\n        }\n\n        function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n            mstore(add(memPtr, 0), \"AccessControl: account \")\n\n        }\n\n        function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n            store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n            end := add(pos, 23)\n        }\n\n        function array_length_t_string_memory_ptr(value) -> length {\n\n            length := mload(value)\n\n        }\n\n        function copy_memory_to_memory_with_cleanup(src, dst, length) {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, length)\n        }\n\n        function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n            mstore(add(memPtr, 0), \" is missing role \")\n\n        }\n\n        function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n            store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n            end := add(pos, 17)\n        }\n\n        function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n            pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n            pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n            pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n            end := pos\n        }\n\n        function round_up_to_mul_of_32(value) -> result {\n            result := and(add(value, 31), not(31))\n        }\n\n        function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n            let length := array_length_t_string_memory_ptr(value)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n            end := add(pos, round_up_to_mul_of_32(length))\n        }\n\n        function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        }\n\n        function panic_error_0x41() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n\n        function panic_error_0x32() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x32)\n            revert(0, 0x24)\n        }\n\n        function decrement_t_uint256(value) -> ret {\n            value := cleanup_t_uint256(value)\n            if eq(value, 0x00) { panic_error_0x11() }\n            ret := sub(value, 1)\n        }\n\n        function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n            mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n        }\n\n        function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n            store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n            end := add(pos, 32)\n        }\n\n        function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n            tail := add(headStart, 32)\n\n            mstore(add(headStart, 0), sub(tail, headStart))\n            tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n        }\n\n        function panic_error_0x12() {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n\n        function checked_div_t_uint256(x, y) -> r {\n            x := cleanup_t_uint256(x)\n            y := cleanup_t_uint256(y)\n            if iszero(y) { panic_error_0x12() }\n\n            r := div(x, y)\n        }\n\n    }\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1872": [
									{
										"length": 32,
										"start": 1798
									},
									{
										"length": 32,
										"start": 2114
									},
									{
										"length": 32,
										"start": 2269
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F42561 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB1AC51F8 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x368 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x73F42561 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x76082A5E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B7 JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4F248409 EQ PUSH2 0x24A JUMPI PUSH2 0x125 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1A4 JUMPI PUSH2 0x125 JUMP JUMPDEST CALLDATASIZE PUSH2 0x125 JUMPI PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x113 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x123 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x425 CALLVALUE PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD DUP3 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST LT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x680 JUMPI POP PUSH2 0x67F DUP3 PUSH2 0xCA0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 PUSH2 0x6F4 DUP2 PUSH2 0xD0A JUMP JUMPDEST TIMESTAMP PUSH1 0x12 PUSH1 0xD SLOAD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 PUSH2 0x740 DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP3 SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x829 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x964 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH1 0xD SLOAD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 PUSH2 0x87C DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x963 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH1 0xD SLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 PUSH2 0x917 DUP4 PUSH2 0xD1E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x95F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x971 DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x97A DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x984 DUP4 DUP4 PUSH2 0xD41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x991 PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA08 DUP3 DUP3 PUSH2 0xE29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0xA7A DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xACA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC1 SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE3 PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xB165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289 DUP2 JUMP JUMPDEST PUSH2 0xC6A DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0xC73 DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0xC7D DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 PUSH1 0xA SLOAD DUP4 PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0xD16 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3A PUSH2 0xD2B PUSH2 0xFBB JUMP JUMPDEST DUP4 PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xE1D JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC2 PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE33 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEAB PUSH2 0xE21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF40 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xFB7 JUMPI PUSH2 0xF4D DUP2 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0xF5B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF6C SWAP3 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1242 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFFF DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1019 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103C JUMPI PUSH2 0x103B PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x106E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10A6 JUMPI PUSH2 0x10A5 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x1109 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11F4 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11AD JUMPI PUSH2 0x11AC PUSH2 0x1AD7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x11ED SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1157 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122F SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B206869740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129F PUSH1 0xC DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AA DUP3 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CE DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP2 EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x132C DUP2 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1356 DUP5 DUP3 DUP6 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x135F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A8 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C5 DUP2 PUSH2 0x139F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13EF DUP5 DUP3 DUP6 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1401 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1435 DUP2 PUSH2 0x1422 JUMP JUMPDEST DUP2 EQ PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1452 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x147C DUP5 DUP3 DUP6 ADD PUSH2 0x1443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 DUP3 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C0 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DD DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FA JUMPI PUSH2 0x14F9 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP6 DUP3 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1519 DUP6 DUP3 DUP7 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F766572203A28200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1559 PUSH1 0xF DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x1564 DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1588 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468656D2F7468657920706C656173652073656E64206D657469730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C5 PUSH1 0x1B DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D0 DUP3 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1635 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1640 DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x657863656564732074686520746F74616C20666F722073616C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH1 0x1A DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x169F DUP3 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x1687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x171A DUP2 PUSH2 0x135F JUMP JUMPDEST DUP2 EQ PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1737 DUP2 PUSH2 0x1711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1761 DUP5 DUP3 DUP6 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1790 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17A9 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x17C0 JUMPI PUSH2 0x17BF PUSH2 0x15FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1823 PUSH1 0x2F DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x182E DUP3 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1852 DUP2 PUSH2 0x1816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520737570706C7920697320616C7265616479206275726E656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F PUSH1 0x1C DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x189A DUP3 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18BE DUP2 PUSH2 0x1882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DB DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18F3 JUMPI PUSH2 0x18F2 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x17 DUP4 PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1945 DUP3 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1979 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x195E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1990 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x199A DUP2 DUP6 PUSH2 0x18F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC PUSH1 0x11 DUP4 PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP3 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D DUP3 PUSH2 0x192D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A19 DUP3 DUP6 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A24 DUP3 PUSH2 0x19DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A30 DUP3 DUP5 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A58 DUP3 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1A62 DUP2 DUP6 PUSH2 0x1258 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x195B JUMP JUMPDEST PUSH2 0x1A7B DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA0 DUP2 DUP5 PUSH2 0x1A4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B11 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x15FB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B65 PUSH1 0x20 DUP4 PUSH2 0x1258 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B70 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B94 DUP2 PUSH2 0x1B58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP3 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BF0 JUMPI PUSH2 0x1BEF PUSH2 0x1B9B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH4 0x1EF16404 0xC6 0xBD CALLDATACOPY SGT CODECOPY LOG4 EXP 0xEC 0x1F 0xBE DUP11 0x22 SWAP7 0x1E SWAP3 0xAC 0xE5 0xEB SHR SWAP16 EQ PUSH8 0xCB38218664736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "266:3841:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2218:19;;;;;;:::i;:::-;;;;;;;;2247:5;:3;:5::i;:::-;;266:3841;;;;2606:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:62:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2712:694;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4803:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3412:275:8;;;;;;;;;;;;;:::i;:::-;;4032:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;333:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2266:440:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;473:70;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2266:440:8;2315:4;1702:8;;1684:15;:26;1676:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2350:1:::1;2338:9;:13;2330:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2392:17;2412:21;2423:9;2412:10;:21::i;:::-;2392:41;;2475:6;;2464:8;;2452:9;:20;;;;:::i;:::-;:29;2444:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2522:4;;;;;;;;;;;:12;;;2544:4;2551:9;2522:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2571:4;;;;;;;;;;;:13;;;2585:10;2597:9;2571:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2640:8;;2628:9;:20;;;;:::i;:::-;2617:8;:31;;;;2663:15;2668:9;2663:15;;;;;;:::i;:::-;;;;;;;;2695:4;2688:11;;;2266:440:::0;:::o;2606:202:0:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;405:62:8:-;443:24;405:62;:::o;2712:694::-;373:26;2505:16:0;2516:4;2505:10;:16::i;:::-;2829:15:8::1;2824:2;2816:5;;:10;;;;:::i;:::-;2800:13;:26;;;;:::i;:::-;:44;2795:596;;;2859:21;2882;2897:5;2882:14;:21::i;:::-;2859:44;;2917:4;;;;;;;;;;;:12;;;2939:4;2946:13;2917:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2982:10;2974:28;;:43;3003:13;2974:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2845:183;2795:596;;;3068:15;3063:2;3055:5;;:10;;;;:::i;:::-;3039:13;:26;;;;:::i;:::-;:44;3034:357;;;3098:21;3121;3136:5;3121:14;:21::i;:::-;3098:44;;3164:10;3156:28;;:43;3185:13;3156:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3084:126;3034:357;;;3249:15;3245:1;3237:5;;:9;;;;:::i;:::-;3221:13;:25;;;;:::i;:::-;:43;3216:175;;;3279:21;3302;3317:5;3302:14;:21::i;:::-;3279:44;;3345:10;3337:28;;:43;3366:13;3337:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3265:126;3216:175;3034:357;2795:596;2712:694:::0;;:::o;4803:145:0:-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;3412:275:8:-;1702:8;;1684:15;:26;1676:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;443:24:::1;2505:16:0;2516:4;2505:10;:16::i;:::-;1793:6:8::2;;;;;;;;;;;1792:7;1784:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3490:16:::3;3510:20;3521:8;;3510:6;;:10;;:20;;;;:::i;:::-;3490:41;;3541:4;;;;;;;;;;;:9;;;3551:8;3541:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;3480:207;1861:4:::2;1852:6;;:13;;;;;;;;;;;;;;;;;;1739:1:::1;3412:275::o:0;4032:73::-;4070:4;4092:6;;;;;;;;;;;4085:13;;4032:73;:::o;333:66::-;373:26;333:66;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;473:70:8:-;515:28;473:70;:::o;5228:147:0:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;3693:110:8:-;3749:7;3774:21;3784:10;;3774:5;:9;;:21;;;;:::i;:::-;3767:29;;3693:110;;;:::o;829:155:4:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;3809:116:8:-;3869:7;3894:24;3904:13;:11;:13::i;:::-;3894:5;:9;;:24;;;;:::i;:::-;3887:31;;3809:116;;;:::o;7461:233:0:-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3122:96:7:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;3931:96:8:-;3975:7;4000:20;4013:6;;4000:8;;:12;;:20;;;;:::i;:::-;3993:27;;3931:96;:::o;2102:149:3:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;3850:96:7:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:162::-;322:14;318:1;310:6;306:14;299:38;182:162;:::o;350:366::-;492:3;513:67;577:2;572:3;513:67;:::i;:::-;506:74;;589:93;678:3;589:93;:::i;:::-;707:2;702:3;698:12;691:19;;350:366;;;:::o;722:419::-;888:4;926:2;915:9;911:18;903:26;;975:9;969:4;965:20;961:1;950:9;946:17;939:47;1003:131;1129:4;1003:131;:::i;:::-;995:139;;722:419;;;:::o;1228:117::-;1337:1;1334;1327:12;1474:149;1510:7;1550:66;1543:5;1539:78;1528:89;;1474:149;;;:::o;1629:120::-;1701:23;1718:5;1701:23;:::i;:::-;1694:5;1691:34;1681:62;;1739:1;1736;1729:12;1681:62;1629:120;:::o;1755:137::-;1800:5;1838:6;1825:20;1816:29;;1854:32;1880:5;1854:32;:::i;:::-;1755:137;;;;:::o;1898:327::-;1956:6;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2131:1;2156:52;2200:7;2191:6;2180:9;2176:22;2156:52;:::i;:::-;2146:62;;2102:116;1898:327;;;;:::o;2231:90::-;2265:7;2308:5;2301:13;2294:21;2283:32;;2231:90;;;:::o;2327:109::-;2408:21;2423:5;2408:21;:::i;:::-;2403:3;2396:34;2327:109;;:::o;2442:210::-;2529:4;2567:2;2556:9;2552:18;2544:26;;2580:65;2642:1;2631:9;2627:17;2618:6;2580:65;:::i;:::-;2442:210;;;;:::o;2658:77::-;2695:7;2724:5;2713:16;;2658:77;;;:::o;2741:122::-;2814:24;2832:5;2814:24;:::i;:::-;2807:5;2804:35;2794:63;;2853:1;2850;2843:12;2794:63;2741:122;:::o;2869:139::-;2915:5;2953:6;2940:20;2931:29;;2969:33;2996:5;2969:33;:::i;:::-;2869:139;;;;:::o;3014:329::-;3073:6;3122:2;3110:9;3101:7;3097:23;3093:32;3090:119;;;3128:79;;:::i;:::-;3090:119;3248:1;3273:53;3318:7;3309:6;3298:9;3294:22;3273:53;:::i;:::-;3263:63;;3219:117;3014:329;;;;:::o;3349:118::-;3436:24;3454:5;3436:24;:::i;:::-;3431:3;3424:37;3349:118;;:::o;3473:222::-;3566:4;3604:2;3593:9;3589:18;3581:26;;3617:71;3685:1;3674:9;3670:17;3661:6;3617:71;:::i;:::-;3473:222;;;;:::o;3701:77::-;3738:7;3767:5;3756:16;;3701:77;;;:::o;3784:122::-;3857:24;3875:5;3857:24;:::i;:::-;3850:5;3847:35;3837:63;;3896:1;3893;3886:12;3837:63;3784:122;:::o;3912:139::-;3958:5;3996:6;3983:20;3974:29;;4012:33;4039:5;4012:33;:::i;:::-;3912:139;;;;:::o;4057:329::-;4116:6;4165:2;4153:9;4144:7;4140:23;4136:32;4133:119;;;4171:79;;:::i;:::-;4133:119;4291:1;4316:53;4361:7;4352:6;4341:9;4337:22;4316:53;:::i;:::-;4306:63;;4262:117;4057:329;;;;:::o;4392:126::-;4429:7;4469:42;4462:5;4458:54;4447:65;;4392:126;;;:::o;4524:96::-;4561:7;4590:24;4608:5;4590:24;:::i;:::-;4579:35;;4524:96;;;:::o;4626:122::-;4699:24;4717:5;4699:24;:::i;:::-;4692:5;4689:35;4679:63;;4738:1;4735;4728:12;4679:63;4626:122;:::o;4754:139::-;4800:5;4838:6;4825:20;4816:29;;4854:33;4881:5;4854:33;:::i;:::-;4754:139;;;;:::o;4899:474::-;4967:6;4975;5024:2;5012:9;5003:7;4999:23;4995:32;4992:119;;;5030:79;;:::i;:::-;4992:119;5150:1;5175:53;5220:7;5211:6;5200:9;5196:22;5175:53;:::i;:::-;5165:63;;5121:117;5277:2;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;:::i;:::-;5293:63;;5248:118;4899:474;;;;;:::o;5379:169::-;5519:17;5515:1;5507:6;5503:14;5496:41;5379:169;:::o;5558:382::-;5700:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5805:93;5894:3;5805:93;:::i;:::-;5927:2;5922:3;5918:12;5911:19;;5558:382;;;:::o;5950:435::-;6116:4;6158:2;6147:9;6143:18;6135:26;;6211:9;6205:4;6201:20;6197:1;6186:9;6182:17;6175:47;6243:131;6369:4;6243:131;:::i;:::-;6235:139;;5950:435;;;:::o;6395:185::-;6539:29;6535:1;6527:6;6523:14;6516:53;6395:185;:::o;6590:382::-;6732:3;6757:67;6821:2;6816:3;6757:67;:::i;:::-;6750:74;;6837:93;6926:3;6837:93;:::i;:::-;6959:2;6954:3;6950:12;6943:19;;6590:382;;;:::o;6982:435::-;7148:4;7190:2;7179:9;7175:18;7167:26;;7243:9;7237:4;7233:20;7229:1;7218:9;7214:17;7207:47;7275:131;7401:4;7275:131;:::i;:::-;7267:139;;6982:435;;;:::o;7427:196::-;7479:77;7476:1;7469:88;7580:4;7577:1;7570:15;7608:4;7605:1;7598:15;7633:211;7673:3;7696:20;7714:1;7696:20;:::i;:::-;7691:25;;7734:20;7752:1;7734:20;:::i;:::-;7729:25;;7781:1;7778;7774:9;7767:16;;7806:3;7803:1;7800:10;7797:36;;;7813:18;;:::i;:::-;7797:36;7633:211;;;;:::o;7854:184::-;7998:28;7994:1;7986:6;7982:14;7975:52;7854:184;:::o;8048:382::-;8190:3;8215:67;8279:2;8274:3;8215:67;:::i;:::-;8208:74;;8295:93;8384:3;8295:93;:::i;:::-;8417:2;8412:3;8408:12;8401:19;;8048:382;;;:::o;8440:435::-;8606:4;8648:2;8637:9;8633:18;8625:26;;8701:9;8695:4;8691:20;8687:1;8676:9;8672:17;8665:47;8733:131;8859:4;8733:131;:::i;:::-;8725:139;;8440:435;;;:::o;8885:126::-;8976:24;8994:5;8976:24;:::i;:::-;8971:3;8964:37;8885:126;;:::o;9021:::-;9112:24;9130:5;9112:24;:::i;:::-;9107:3;9100:37;9021:126;;:::o;9157:348::-;9278:4;9320:2;9309:9;9305:18;9297:26;;9337:71;9405:1;9394:9;9390:17;9381:6;9337:71;:::i;:::-;9422:72;9490:2;9479:9;9475:18;9466:6;9422:72;:::i;:::-;9157:348;;;;;:::o;9515:124::-;9589:21;9604:5;9589:21;:::i;:::-;9582:5;9579:32;9569:60;;9625:1;9622;9615:12;9569:60;9515:124;:::o;9649:149::-;9703:5;9738:6;9732:13;9723:22;;9758:30;9782:5;9758:30;:::i;:::-;9649:149;;;;:::o;9808:369::-;9875:6;9928:2;9916:9;9907:7;9903:23;9899:32;9896:119;;;9934:79;;:::i;:::-;9896:119;10062:1;10091:61;10144:7;10135:6;10124:9;10120:22;10091:61;:::i;:::-;10081:71;;10029:137;9808:369;;;;:::o;10187:234::-;10280:4;10322:2;10311:9;10307:18;10299:26;;10339:71;10407:1;10396:9;10392:17;10383:6;10339:71;:::i;:::-;10187:234;;;;:::o;10431:458::-;10471:7;10498:20;10516:1;10498:20;:::i;:::-;10493:25;;10536:20;10554:1;10536:20;:::i;:::-;10531:25;;10595:1;10592;10588:9;10621:30;10639:11;10621:30;:::i;:::-;10610:41;;10820:1;10811:7;10807:15;10804:1;10801:22;10777:1;10770:9;10746:95;10719:159;;10858:18;;:::i;:::-;10719:159;10479:410;10431:458;;;;:::o;10899:246::-;11043:34;11039:1;11031:6;11027:14;11020:58;11116:17;11111:2;11103:6;11099:15;11092:42;10899:246;:::o;11155:382::-;11297:3;11322:67;11386:2;11381:3;11322:67;:::i;:::-;11315:74;;11402:93;11491:3;11402:93;:::i;:::-;11524:2;11519:3;11515:12;11508:19;;11155:382;;;:::o;11547:435::-;11713:4;11755:2;11744:9;11740:18;11732:26;;11808:9;11802:4;11798:20;11794:1;11783:9;11779:17;11772:47;11840:131;11966:4;11840:131;:::i;:::-;11832:139;;11547:435;;;:::o;11992:186::-;12136:30;12132:1;12124:6;12120:14;12113:54;11992:186;:::o;12188:382::-;12330:3;12355:67;12419:2;12414:3;12355:67;:::i;:::-;12348:74;;12435:93;12524:3;12435:93;:::i;:::-;12557:2;12552:3;12548:12;12541:19;;12188:382;;;:::o;12580:435::-;12746:4;12788:2;12777:9;12773:18;12765:26;;12841:9;12835:4;12831:20;12827:1;12816:9;12812:17;12805:47;12873:131;12999:4;12873:131;:::i;:::-;12865:139;;12580:435;;;:::o;13025:214::-;13065:4;13089:20;13107:1;13089:20;:::i;:::-;13084:25;;13127:20;13145:1;13127:20;:::i;:::-;13122:25;;13175:1;13172;13168:9;13160:17;;13203:1;13197:4;13194:11;13191:37;;;13208:18;;:::i;:::-;13191:37;13025:214;;;;:::o;13249:156::-;13351:11;13392:3;13377:18;;13249:156;;;;:::o;13415:181::-;13559:25;13555:1;13547:6;13543:14;13536:49;13415:181;:::o;13606:418::-;13766:3;13791:85;13873:2;13868:3;13791:85;:::i;:::-;13784:92;;13889:93;13978:3;13889:93;:::i;:::-;14011:2;14006:3;14002:12;13995:19;;13606:418;;;:::o;14034:107::-;14086:6;14124:5;14118:12;14108:22;;14034:107;;;:::o;14151:274::-;14236:1;14250:125;14264:6;14261:1;14258:13;14250:125;;;14357:1;14352:3;14348:11;14342:18;14338:1;14333:3;14329:11;14322:39;14286:2;14283:1;14279:10;14274:15;;14250:125;;;14413:1;14404:6;14399:3;14395:16;14388:27;14213:212;14151:274;;;:::o;14435:410::-;14541:3;14573:39;14606:5;14573:39;:::i;:::-;14632:89;14714:6;14709:3;14632:89;:::i;:::-;14625:96;;14734:65;14792:6;14787:3;14780:4;14773:5;14769:16;14734:65;:::i;:::-;14828:6;14823:3;14819:16;14812:23;;14545:300;14435:410;;;;:::o;14855:175::-;14999:19;14995:1;14987:6;14983:14;14976:43;14855:175;:::o;15040:418::-;15200:3;15225:85;15307:2;15302:3;15225:85;:::i;:::-;15218:92;;15323:93;15412:3;15323:93;:::i;:::-;15445:2;15440:3;15436:12;15429:19;;15040:418;;;:::o;15468:991::-;15850:3;15876:148;16020:3;15876:148;:::i;:::-;15869:155;;16045:95;16136:3;16127:6;16045:95;:::i;:::-;16038:102;;16161:148;16305:3;16161:148;:::i;:::-;16154:155;;16330:95;16421:3;16412:6;16330:95;:::i;:::-;16323:102;;16446:3;16439:10;;15468:991;;;;;:::o;16469:110::-;16510:6;16565:2;16561:7;16556:2;16549:5;16545:14;16541:28;16531:38;;16469:110;;;:::o;16589:397::-;16677:3;16709:39;16742:5;16709:39;:::i;:::-;16768:71;16832:6;16827:3;16768:71;:::i;:::-;16761:78;;16852:65;16910:6;16905:3;16898:4;16891:5;16887:16;16852:65;:::i;:::-;16946:29;16968:6;16946:29;:::i;:::-;16941:3;16937:39;16930:46;;16681:305;16589:397;;;;:::o;16996:329::-;17109:4;17151:2;17140:9;17136:18;17128:26;;17204:9;17198:4;17194:20;17190:1;17179:9;17175:17;17168:47;17236:78;17309:4;17300:6;17236:78;:::i;:::-;17228:86;;16996:329;;;;:::o;17335:196::-;17387:77;17384:1;17377:88;17488:4;17485:1;17478:15;17516:4;17513:1;17506:15;17541:196;17593:77;17590:1;17583:88;17694:4;17691:1;17684:15;17722:4;17719:1;17712:15;17747:187;17786:3;17813:24;17831:5;17813:24;:::i;:::-;17804:33;;17863:4;17856:5;17853:15;17850:41;;17871:18;;:::i;:::-;17850:41;17922:1;17915:5;17911:13;17904:20;;17747:187;;;:::o;17944:190::-;18088:34;18084:1;18076:6;18072:14;18065:58;17944:190;:::o;18144:382::-;18286:3;18311:67;18375:2;18370:3;18311:67;:::i;:::-;18304:74;;18391:93;18480:3;18391:93;:::i;:::-;18513:2;18508:3;18504:12;18497:19;;18144:382;;;:::o;18536:435::-;18702:4;18744:2;18733:9;18729:18;18721:26;;18797:9;18791:4;18787:20;18783:1;18772:9;18768:17;18761:47;18829:131;18955:4;18829:131;:::i;:::-;18821:139;;18536:435;;;:::o;18981:196::-;19033:77;19030:1;19023:88;19134:4;19131:1;19124:15;19162:4;19159:1;19152:15;19187:205;19227:1;19248:20;19266:1;19248:20;:::i;:::-;19243:25;;19286:20;19304:1;19286:20;:::i;:::-;19281:25;;19329:1;19319:35;;19334:18;;:::i;:::-;19319:35;19380:1;19377;19373:9;19368:14;;19187:205;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1443400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "397",
								"DEFAULT_ADMIN_ROLE()": "357",
								"EXTEND_ICO_ROLE()": "395",
								"INVESTOR_ROLE()": "374",
								"burned()": "2502",
								"buy()": "infinite",
								"endICO()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3207",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"conversion(uint256)": "infinite",
								"percentFromICO(uint256)": "infinite",
								"soldPercent()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "430E23400"
								},
								{
									"begin": 742,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 742,
									"end": 770,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 809,
									"end": 823,
									"name": "PUSH",
									"source": 8,
									"value": "152D02C7E14AF6800000"
								},
								{
									"begin": 792,
									"end": 823,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 792,
									"end": 823,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 896,
									"end": 897,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 876,
									"end": 897,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 876,
									"end": 897,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 962,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 940,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 940,
									"end": 967,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 940,
									"end": 967,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 940,
									"end": 967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1021,
									"name": "PUSH",
									"source": 8,
									"value": "278D00"
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1048,
									"name": "PUSH",
									"source": 8,
									"value": "93A80"
								},
								{
									"begin": 1027,
									"end": 1048,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1027,
									"end": 1048,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1118,
									"end": 1586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 373,
									"end": 399,
									"name": "PUSH",
									"source": 8,
									"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
								},
								{
									"begin": 1257,
									"end": 1261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1231,
									"end": 1241,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1231,
									"end": 1241,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1231,
									"end": 1262,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1262,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 443,
									"end": 467,
									"name": "PUSH",
									"source": 8,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1272,
									"end": 1282,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1272,
									"end": 1282,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1301,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1272,
									"end": 1301,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1301,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1272,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 515,
									"end": 543,
									"name": "PUSH",
									"source": 8,
									"value": "305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289"
								},
								{
									"begin": 1339,
									"end": 1343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1344,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1344,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1344,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1311,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1370,
									"end": 1380,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1404,
									"end": 1409,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1391,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1445,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1420,
									"end": 1430,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 1446,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1472,
									"end": 1487,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1456,
									"end": 1487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1512,
									"end": 1515,
									"name": "PUSH",
									"source": 8,
									"value": "6F"
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1508,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1515,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1515,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1543,
									"name": "PUSH",
									"source": 8,
									"value": "DE"
								},
								{
									"begin": 1525,
									"end": 1534,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1535,
									"end": 1536,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1571,
									"name": "PUSH",
									"source": 8,
									"value": "14D"
								},
								{
									"begin": 1553,
									"end": 1562,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1564,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1118,
									"end": 1586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1872"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 4107,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc631ef16404c6bd371339a40aec1fbe8a22961e92ace5eb1c9f1467cb38218664736f6c63430008110033",
									".code": [
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "73F42561"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "A6F2AE3A"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "B1AC51F8"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "73F42561"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "76082A5E"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "4F248409"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "282C51F3"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2218,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2237,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 266,
											"end": 4107,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 405,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 405,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 405,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2712,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2712,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4032,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4032,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 333,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 333,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2266,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2266,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 473,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 473,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1702,
											"end": 1710,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1699,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1710,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1676,
											"end": 1729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2347,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2351,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2330,
											"end": 2382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2412,
											"end": 2433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2412,
											"end": 2433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2464,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2461,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2452,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2452,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2481,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2444,
											"end": 2512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2444,
											"end": 2512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2544,
											"end": 2548,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2522,
											"end": 2561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2522,
											"end": 2561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2585,
											"end": 2595,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2606,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2571,
											"end": 2607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2571,
											"end": 2607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2640,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2628,
											"end": 2648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2628,
											"end": 2648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2617,
											"end": 2648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2648,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "92F64CA637D023F354075A4BE751B169C1A8A9CCB6D33CDD0CB3520543995727"
										},
										{
											"begin": 2668,
											"end": 2677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2663,
											"end": 2678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2678,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2699,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 443,
											"end": 467,
											"name": "PUSH",
											"source": 8,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 405,
											"end": 467,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 405,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 399,
											"name": "PUSH",
											"source": 8,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 2844,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2816,
											"end": 2826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1872"
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2800,
											"end": 2826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2800,
											"end": 2826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2844,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2897,
											"end": 2902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2882,
											"end": 2903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2882,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2939,
											"end": 2943,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2917,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2917,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2992,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 3002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 3003,
											"end": 3016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2845,
											"end": 3028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3083,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3055,
											"end": 3060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3055,
											"end": 3060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3055,
											"end": 3065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3055,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1872"
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3039,
											"end": 3065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3083,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3136,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3121,
											"end": 3142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3121,
											"end": 3142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3142,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3174,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 3185,
											"end": 3198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3199,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3264,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3237,
											"end": 3242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3237,
											"end": 3242,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3237,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3237,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3234,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1872"
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3221,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3221,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3264,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3391,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3216,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3317,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3302,
											"end": 3323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3302,
											"end": 3323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3355,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 3366,
											"end": 3379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3216,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3034,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2795,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1702,
											"end": 1710,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1699,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1710,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1676,
											"end": 1729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1676,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 443,
											"end": 467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2516,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2505,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1793,
											"end": 1799,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1792,
											"end": 1799,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1784,
											"end": 1831,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1784,
											"end": 1831,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3506,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3521,
											"end": 3529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3521,
											"end": 3529,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3516,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3510,
											"end": 3516,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3520,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3510,
											"end": 3520,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3530,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3510,
											"end": 3530,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3531,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3531,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3545,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3550,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 3551,
											"end": 3559,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3541,
											"end": 3560,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3687,
											"modifierDepth": 3,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1852,
											"end": 1858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1852,
											"end": 1858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4070,
											"end": 4074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4032,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 373,
											"end": 399,
											"name": "PUSH",
											"source": 8,
											"value": "B165298935924F540E4181C03493A5D686C54A0AAEB3F6216DE85B7FFBBA7738"
										},
										{
											"begin": 333,
											"end": 399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 333,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "305786AB5904B5BB20FE6D91992844B39D648CDCB82F328EDC2D6A80BFBB3289"
										},
										{
											"begin": 473,
											"end": 543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3803,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3693,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3784,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3784,
											"end": 3794,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3925,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3809,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3904,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3904,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3904,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3904,
											"end": 3917,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3904,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3894,
											"end": 3903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3887,
											"end": 3918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3931,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4013,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4013,
											"end": 4019,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4008,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4000,
											"end": 4008,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4000,
											"end": 4012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4000,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3993,
											"end": 4020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3993,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 182,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "66616C6C6261636B206869740000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 350,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 577,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 513,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 513,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 513,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 513,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 506,
											"end": 580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 506,
											"end": 580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 678,
											"end": 681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 589,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 589,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 589,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 698,
											"end": 710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 691,
											"end": 710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 691,
											"end": 710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 350,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 911,
											"end": 929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 903,
											"end": 929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 903,
											"end": 929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 969,
											"end": 973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 965,
											"end": 985,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 946,
											"end": 963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 939,
											"end": 986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1003,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1003,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 722,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1228,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1617,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1701,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1701,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1691,
											"end": 1725,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1854,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 2008,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2011,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2011,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1973,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2156,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2156,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2315,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2423,
											"end": 2428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2408,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2430,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2624,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2580,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2580,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2814,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2839,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2794,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2969,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2969,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3128,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3273,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3436,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3617,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3857,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3882,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4039,
											"end": 4044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4012,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4012,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4168,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4171,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4171,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4133,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4350,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4316,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4316,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4512,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4590,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4699,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4689,
											"end": 4724,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4679,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4845,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4854,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4854,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4754,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5027,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 5030,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5030,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4992,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5209,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5175,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5303,
											"end": 5356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5536,
											"name": "PUSH",
											"source": 10,
											"value": "49434F206973206F766572203A28200000000000000000000000000000000000"
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 5725,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5805,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5805,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6221,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6369,
											"end": 6373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6243,
											"end": 6374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6243,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "PUSH",
											"source": 10,
											"value": "7468656D2F7468657920706C656173652073656E64206D657469730000000000"
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6516,
											"end": 6569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6757,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6757,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6750,
											"end": 6824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6750,
											"end": 6824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6837,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6837,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7233,
											"end": 7253,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7207,
											"end": 7254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7275,
											"end": 7406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7275,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7267,
											"end": 7406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7267,
											"end": 7406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 7417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7623,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7427,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7556,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7570,
											"end": 7585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7696,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7752,
											"end": 7753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7734,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7734,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7810,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7813,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7797,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8026,
											"name": "PUSH",
											"source": 10,
											"value": "657863656564732074686520746F74616C20666F722073616C65000000000000"
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 7996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 8027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 8038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8190,
											"end": 8193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 8274,
											"end": 8277,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8215,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8215,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8295,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8295,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8711,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 8859,
											"end": 8863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8733,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8994,
											"end": 8999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8976,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8976,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8964,
											"end": 9001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9147,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 9021,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 9130,
											"end": 9135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 9112,
											"end": 9136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9136,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 9112,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9107,
											"end": 9110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9297,
											"end": 9323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9297,
											"end": 9323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 9405,
											"end": 9406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 9337,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9408,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 9337,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 9490,
											"end": 9492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 9422,
											"end": 9494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9494,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 9422,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9639,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 9515,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9589,
											"end": 9610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9610,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9589,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9582,
											"end": 9587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9611,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9569,
											"end": 9629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9627,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9629,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9569,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9703,
											"end": 9708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9723,
											"end": 9745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9723,
											"end": 9745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9782,
											"end": 9787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 9758,
											"end": 9788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9649,
											"end": 9798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9916,
											"end": 9925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9907,
											"end": 9914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9903,
											"end": 9926,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 9931,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 10015,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9896,
											"end": 10015,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9934,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9934,
											"end": 10013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 10013,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9934,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 10015,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9896,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 10091,
											"end": 10152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10152,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 10091,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10081,
											"end": 10152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10081,
											"end": 10152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10339,
											"end": 10410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 10339,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10498,
											"end": 10518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10493,
											"end": 10518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10493,
											"end": 10518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 10554,
											"end": 10555,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10536,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 10536,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10556,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10595,
											"end": 10596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10588,
											"end": 10597,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10639,
											"end": 10650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10621,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10621,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10822,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10823,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10770,
											"end": 10779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10841,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10719,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10719,
											"end": 10878,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 10858,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10719,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10719,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10479,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 11145,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 10899,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11043,
											"end": 11077,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11027,
											"end": 11041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11116,
											"end": 11133,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11103,
											"end": 11109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 11145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 11145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11537,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 11155,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 11386,
											"end": 11388,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 11381,
											"end": 11384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 11322,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11402,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 11491,
											"end": 11494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11402,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 11402,
											"end": 11495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11402,
											"end": 11495,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 11402,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11524,
											"end": 11526,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11982,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 11547,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11713,
											"end": 11717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11744,
											"end": 11753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11732,
											"end": 11758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11732,
											"end": 11758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11808,
											"end": 11817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11802,
											"end": 11806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11818,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 11795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11792,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 11796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11772,
											"end": 11819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 11840,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11992,
											"end": 12178,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 11992,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12136,
											"end": 12166,
											"name": "PUSH",
											"source": 10,
											"value": "74686520737570706C7920697320616C7265616479206275726E656400000000"
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12124,
											"end": 12130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11992,
											"end": 12178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11992,
											"end": 12178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12570,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12188,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12355,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 12419,
											"end": 12421,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 12414,
											"end": 12417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12355,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 12355,
											"end": 12422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12355,
											"end": 12422,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 12355,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12348,
											"end": 12422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12348,
											"end": 12422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 12524,
											"end": 12527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 12435,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12528,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 12435,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12557,
											"end": 12559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12548,
											"end": 12560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12541,
											"end": 12560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12541,
											"end": 12560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 13015,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 12580,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12841,
											"end": 12850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12835,
											"end": 12839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12851,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12825,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12805,
											"end": 12852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 12999,
											"end": 13003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12873,
											"end": 13004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 13004,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 12873,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 13004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 13004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 13015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 13015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 13015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 13015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13089,
											"end": 13109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 13089,
											"end": 13109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13089,
											"end": 13109,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 13089,
											"end": 13109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 13127,
											"end": 13147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13147,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 13127,
											"end": 13147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13122,
											"end": 13147,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13122,
											"end": 13147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13175,
											"end": 13176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13194,
											"end": 13205,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13228,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 13191,
											"end": 13228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13208,
											"end": 13226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13228,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 13191,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13377,
											"end": 13395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13377,
											"end": 13395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13415,
											"end": 13596,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 13415,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13584,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13555,
											"end": 13556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13543,
											"end": 13557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13536,
											"end": 13585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13415,
											"end": 13596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13415,
											"end": 13596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14024,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 13606,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13791,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 13873,
											"end": 13875,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13868,
											"end": 13871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13791,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 13791,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13791,
											"end": 13876,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 13791,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 13978,
											"end": 13981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 13889,
											"end": 13982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13982,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 13889,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14011,
											"end": 14013,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 14006,
											"end": 14009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14002,
											"end": 14014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14141,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 14034,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14086,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14124,
											"end": 14129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14130,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14151,
											"end": 14425,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 14151,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14264,
											"end": 14270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14261,
											"end": 14262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14271,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14333,
											"end": 14336,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14329,
											"end": 14340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14286,
											"end": 14288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14283,
											"end": 14284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14279,
											"end": 14289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14250,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14395,
											"end": 14411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14388,
											"end": 14415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14151,
											"end": 14425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14151,
											"end": 14425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14151,
											"end": 14425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14151,
											"end": 14425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14541,
											"end": 14544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14573,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 14606,
											"end": 14611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14573,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 14573,
											"end": 14612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14573,
											"end": 14612,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 14573,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14632,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 14714,
											"end": 14720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14709,
											"end": 14712,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14632,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 14632,
											"end": 14721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14632,
											"end": 14721,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 14632,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14721,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 14792,
											"end": 14798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14787,
											"end": 14790,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14773,
											"end": 14778,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14769,
											"end": 14785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 14734,
											"end": 14799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14799,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 14734,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14828,
											"end": 14834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14823,
											"end": 14826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14819,
											"end": 14835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14812,
											"end": 14835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14812,
											"end": 14835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14545,
											"end": 14845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 15030,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 14855,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15018,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 14995,
											"end": 14996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 14993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 14997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14976,
											"end": 15019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 15030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 15030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15458,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 15040,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 15307,
											"end": 15309,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15302,
											"end": 15305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15225,
											"end": 15310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15310,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 15225,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15218,
											"end": 15310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15218,
											"end": 15310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15412,
											"end": 15415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 15323,
											"end": 15416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15416,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15323,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15447,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15436,
											"end": 15448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15429,
											"end": 15448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15429,
											"end": 15448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15850,
											"end": 15853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15876,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 16020,
											"end": 16023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15876,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 15876,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15876,
											"end": 16024,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 15876,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15869,
											"end": 16024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15869,
											"end": 16024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 16136,
											"end": 16139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16127,
											"end": 16133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16045,
											"end": 16140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 16305,
											"end": 16308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 16161,
											"end": 16309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16309,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 16161,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16154,
											"end": 16309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16154,
											"end": 16309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 16421,
											"end": 16424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16330,
											"end": 16425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16425,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 16330,
											"end": 16425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 16459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16579,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 16469,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16510,
											"end": 16516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16565,
											"end": 16567,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16561,
											"end": 16568,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16556,
											"end": 16558,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16549,
											"end": 16554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16545,
											"end": 16559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16569,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16531,
											"end": 16569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16531,
											"end": 16569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16469,
											"end": 16579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16677,
											"end": 16680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16709,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16742,
											"end": 16747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16709,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 16709,
											"end": 16748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16709,
											"end": 16748,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16709,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16832,
											"end": 16838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16827,
											"end": 16830,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 16768,
											"end": 16839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16839,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16768,
											"end": 16839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16761,
											"end": 16839,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16761,
											"end": 16839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 16910,
											"end": 16916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16905,
											"end": 16908,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16898,
											"end": 16902,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16891,
											"end": 16896,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16887,
											"end": 16903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16852,
											"end": 16917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16917,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 16852,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16946,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 16968,
											"end": 16974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16946,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 16946,
											"end": 16975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16946,
											"end": 16975,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 16946,
											"end": 16975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16941,
											"end": 16944,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16937,
											"end": 16976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16930,
											"end": 16976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16930,
											"end": 16976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16589,
											"end": 16986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17109,
											"end": 17113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17151,
											"end": 17153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17140,
											"end": 17149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17128,
											"end": 17154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17128,
											"end": 17154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17204,
											"end": 17213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17198,
											"end": 17202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17194,
											"end": 17214,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17190,
											"end": 17191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17175,
											"end": 17192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17168,
											"end": 17215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17236,
											"end": 17314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17309,
											"end": 17313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17300,
											"end": 17306,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17236,
											"end": 17314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 17236,
											"end": 17314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17236,
											"end": 17314,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17236,
											"end": 17314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16996,
											"end": 17325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17531,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 17335,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17387,
											"end": 17464,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17384,
											"end": 17385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17377,
											"end": 17465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17488,
											"end": 17492,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 17485,
											"end": 17486,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17478,
											"end": 17493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17516,
											"end": 17520,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17513,
											"end": 17514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17506,
											"end": 17521,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17541,
											"end": 17737,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 17541,
											"end": 17737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17593,
											"end": 17670,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17590,
											"end": 17591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17583,
											"end": 17671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17698,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17691,
											"end": 17692,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17684,
											"end": 17699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17722,
											"end": 17726,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17719,
											"end": 17720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17712,
											"end": 17727,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17934,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 17747,
											"end": 17934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17813,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17831,
											"end": 17836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17813,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 17813,
											"end": 17837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17813,
											"end": 17837,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17813,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17804,
											"end": 17837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17804,
											"end": 17837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17863,
											"end": 17867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 17868,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17850,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 17850,
											"end": 17891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 17871,
											"end": 17889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17850,
											"end": 17891,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 17850,
											"end": 17891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17915,
											"end": 17920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17911,
											"end": 17924,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 17924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 17924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 18134,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 17944,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18088,
											"end": 18122,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18076,
											"end": 18082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18072,
											"end": 18086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18065,
											"end": 18123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 18134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 18134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18526,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 18144,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18286,
											"end": 18289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18311,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 18375,
											"end": 18377,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18370,
											"end": 18373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 18311,
											"end": 18378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18378,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 18311,
											"end": 18378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18304,
											"end": 18378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18304,
											"end": 18378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 18480,
											"end": 18483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 18391,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18484,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 18391,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18513,
											"end": 18515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18508,
											"end": 18511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18504,
											"end": 18516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18497,
											"end": 18516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18497,
											"end": 18516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18536,
											"end": 18971,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 18536,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18702,
											"end": 18706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18744,
											"end": 18746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18733,
											"end": 18742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18729,
											"end": 18747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18721,
											"end": 18747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18721,
											"end": 18747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18797,
											"end": 18806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18791,
											"end": 18795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18787,
											"end": 18807,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 18784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18772,
											"end": 18781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18768,
											"end": 18785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18761,
											"end": 18808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18829,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 18955,
											"end": 18959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18829,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 18829,
											"end": 18960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18829,
											"end": 18960,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 18829,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18821,
											"end": 18960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18821,
											"end": 18960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18536,
											"end": 18971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18536,
											"end": 18971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18536,
											"end": 18971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18536,
											"end": 18971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18981,
											"end": 19177,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 18981,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19033,
											"end": 19110,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19030,
											"end": 19031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19023,
											"end": 19111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19138,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 19131,
											"end": 19132,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19124,
											"end": 19139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19162,
											"end": 19166,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19159,
											"end": 19160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19152,
											"end": 19167,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19227,
											"end": 19228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19248,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 19266,
											"end": 19267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19248,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 19248,
											"end": 19268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19248,
											"end": 19268,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 19248,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19243,
											"end": 19268,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19243,
											"end": 19268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19286,
											"end": 19306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 19304,
											"end": 19305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19286,
											"end": 19306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 19286,
											"end": 19306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19286,
											"end": 19306,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 19286,
											"end": 19306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19281,
											"end": 19306,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19281,
											"end": 19306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19329,
											"end": 19330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19319,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 19319,
											"end": 19354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19334,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 19334,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 19334,
											"end": 19352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19334,
											"end": 19352,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 19334,
											"end": 19352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19319,
											"end": 19354,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 19319,
											"end": 19354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19380,
											"end": 19381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19377,
											"end": 19378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19373,
											"end": 19382,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19368,
											"end": 19382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ICO.sol",
								"contracts/IEFTT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EXTEND_ICO_ROLE()": "b1ac51f8",
							"INVESTOR_ROLE()": "76082a5e",
							"burned()": "73f42561",
							"buy()": "a6f2ae3a",
							"endICO()": "4f248409",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eftt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTEND_ICO_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INVESTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amnt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/ICO.sol\":{\"keccak256\":\"0xc63820e42ee9e966d9b6a71d68960e982aed27793977cdbfee7520d40ef64d28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://476c537e434f19a98e13fd90aaa64bcb908f1f4def19d52caa06b89ce3586347\",\"dweb:/ipfs/QmStmisepQiGoyeHBDfhJPzqgSgc1wwHwiLDnaxoWqYyxL\"]},\"contracts/IEFTT.sol\":{\"keccak256\":\"0x73cf9b22b5e03ebf710f6acb27c641e26cda872b7865ca41a1a945cb6e458390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dc72ab8c304820108003b558b03ce557ab9bc99d5611a6f8e2583bba55315b0\",\"dweb:/ipfs/QmQAXZruD17gW4LxKeNjMYhoiBsxURQzczkHLKgfj5Lh61\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/ICO.sol:ICO",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1825,
								"contract": "contracts/ICO.sol:ICO",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 1827,
								"contract": "contracts/ICO.sol:ICO",
								"label": "devAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1833,
								"contract": "contracts/ICO.sol:ICO",
								"label": "minters_",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1835,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxSupply_",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1838,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1841,
								"contract": "contracts/ICO.sol:ICO",
								"label": "eftt",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IEFTT)2328"
							},
							{
								"astId": 1848,
								"contract": "contracts/ICO.sol:ICO",
								"label": "maxICO",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1850,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldInMetis",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1852,
								"contract": "contracts/ICO.sol:ICO",
								"label": "SoldEFTT",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1855,
								"contract": "contracts/ICO.sol:ICO",
								"label": "ratioMetis",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1859,
								"contract": "contracts/ICO.sol:ICO",
								"label": "timeLocks",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1862,
								"contract": "contracts/ICO.sol:ICO",
								"label": "BURNED",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1864,
								"contract": "contracts/ICO.sol:ICO",
								"label": "locked",
								"offset": 1,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1867,
								"contract": "contracts/ICO.sol:ICO",
								"label": "month",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1870,
								"contract": "contracts/ICO.sol:ICO",
								"label": "week",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1874,
								"contract": "contracts/ICO.sol:ICO",
								"label": "ICOtimeLock",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IEFTT)2328": {
								"encoding": "inplace",
								"label": "contract IEFTT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/ICO.sol:ICO",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/ICO.sol:ICO",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IEFTT.sol": {
				"IEFTT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IEFTT.sol\":\"IEFTT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IEFTT.sol\":{\"keccak256\":\"0x73cf9b22b5e03ebf710f6acb27c641e26cda872b7865ca41a1a945cb6e458390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dc72ab8c304820108003b558b03ce557ab9bc99d5611a6f8e2583bba55315b0\",\"dweb:/ipfs/QmQAXZruD17gW4LxKeNjMYhoiBsxURQzczkHLKgfj5Lh61\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							410
						],
						"ERC165": [
							609
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							621
						],
						"Math": [
							1486
						],
						"Strings": [
							585
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 411,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 586,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 610,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1841:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 609,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								609,
								621,
								388,
								410
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										608
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 608,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 315,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 315,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 315,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3791:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3801:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3830:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4009:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$585_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 584,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4116:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "4088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$585_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 564,
																							"src": "4088:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 315,
									"src": "3718:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4461:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4478:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4471:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4452:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:0"
									},
									"scope": 315,
									"src": "4378:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4906:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4877:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:0"
									},
									"scope": 315,
									"src": "4803:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5332:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5303:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:0"
									},
									"scope": 315,
									"src": "5228:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5989:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "6018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 315,
									"src": "5912:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6879:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6889:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:0"
									},
									"scope": 315,
									"src": "6811:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7119:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7129:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7257:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7229:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7083:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:0"
									},
									"scope": 315,
									"src": "7046:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7529:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7539:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7568:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7582:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "7664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7632:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:0"
									},
									"scope": 315,
									"src": "7461:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7934:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "7944:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7972:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "7993:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7986:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "8069:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8037:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:0"
									},
									"scope": 315,
									"src": "7865:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1806:6295:0",
							"usedErrors": []
						}
					],
					"src": "108:7994:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							410
						]
					},
					"id": 411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 410,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 404,
												"id": 407,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 410,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 411,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1486
						],
						"Strings": [
							585
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 1487,
							"src": "126:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585
							],
							"name": "Strings",
							"nameLocation": "196:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 417,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "210:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 415,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 420,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "270:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 418,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "486:625:3",
										"statements": [
											{
												"id": 466,
												"nodeType": "UncheckedBlock",
												"src": "496:609:3",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "520:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 436,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 432,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "548:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 430,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "537:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1486_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1323,
																	"src": "537:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:3"
													},
													{
														"assignments": [
															438
														],
														"declarations": [
															{
																"constant": false,
																"id": 438,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "572:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 437,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 443,
														"initialValue": {
															"arguments": [
																{
																	"id": 441,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "606:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 439,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:3"
													},
													{
														"assignments": [
															445
														],
														"declarations": [
															{
																"constant": false,
																"id": 445,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "627:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 446,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 438,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:3",
																"valueSize": 1
															},
															{
																"declaration": 429,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:3",
																"valueSize": 1
															},
															{
																"declaration": 445,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:3",
																"valueSize": 1
															}
														],
														"id": 447,
														"nodeType": "InlineAssembly",
														"src": "699:76:3"
													},
													{
														"body": {
															"id": 462,
															"nodeType": "Block",
															"src": "801:267:3",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:3",
																		"subExpression": {
																			"id": 449,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "819:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:3"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 417,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 445,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 423,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 452,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:3"
																},
																{
																	"expression": {
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "1003:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 456,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "1036:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 461,
																	"nodeType": "IfStatement",
																	"src": "1032:21:3",
																	"trueBody": {
																		"id": 460,
																		"nodeType": "Break",
																		"src": "1048:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 463,
														"nodeType": "WhileStatement",
														"src": "788:280:3"
													},
													{
														"expression": {
															"id": 464,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "1088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 427,
														"id": 465,
														"nodeType": "Return",
														"src": "1081:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "471:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:3"
									},
									"scope": 585,
									"src": "415:696:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1290:100:3",
										"statements": [
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "1343:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 480,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "1362:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 478,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1486,
																				"src": "1350:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1486_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1446,
																			"src": "1350:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 476,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	488,
																	564,
																	584
																],
																"referencedDeclaration": 564,
																"src": "1331:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 475,
														"id": 485,
														"nodeType": "Return",
														"src": "1324:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1237:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1275:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:3"
									},
									"scope": 585,
									"src": "1216:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "1603:347:3",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "1613:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 503,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1649:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 500,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:3"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 509,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1670:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 511,
														"indexExpression": {
															"hexValue": "30",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:3"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1695:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 517,
														"indexExpression": {
															"hexValue": "31",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:3"
											},
											{
												"body": {
													"id": 549,
													"nodeType": "Block",
													"src": "1765:83:3",
													"statements": [
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 535,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "1779:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 537,
																	"indexExpression": {
																		"id": 536,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "1786:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 538,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "1791:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 542,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "1800:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:3"
														},
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1753:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"initializationExpression": {
													"assignments": [
														522
													],
													"declarations": [
														{
															"constant": false,
															"id": 522,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 550,
															"src": "1725:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 521,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 528,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 524,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1741:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:3",
														"subExpression": {
															"id": 532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "1762:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "1865:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1936:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 558,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 497,
												"id": 562,
												"nodeType": "Return",
												"src": "1922:21:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1534:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1549:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1588:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:3"
									},
									"scope": 585,
									"src": "1513:437:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "2175:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 577,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 567,
																			"src": "2220:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 575,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 573,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 580,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "2228:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 572,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															488,
															564,
															584
														],
														"referencedDeclaration": 564,
														"src": "2192:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 571,
												"id": 582,
												"nodeType": "Return",
												"src": "2185:59:3"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2123:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2160:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:3"
									},
									"scope": 585,
									"src": "2102:149:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "188:2065:3",
							"usedErrors": []
						}
					],
					"src": "101:2153:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							609
						],
						"IERC165": [
							621
						]
					},
					"id": 610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 610,
							"sourceUnit": 622,
							"src": "124:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 590,
										"name": "IERC165",
										"nameLocations": [
											"754:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 621,
										"src": "754:7:4"
									},
									"id": 591,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 609,
							"linearizedBaseContracts": [
								609,
								621
							],
							"name": "ERC165",
							"nameLocation": "744:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "920:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "937:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "957:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$621_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$621_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 601,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$621",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 606,
												"nodeType": "Return",
												"src": "930:47:4"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 596,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:4"
									},
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "856:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 593,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "914:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:4"
									},
									"scope": 609,
									"src": "829:155:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 610,
							"src": "726:260:4",
							"usedErrors": []
						}
					],
					"src": "99:888:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							621
						]
					},
					"id": 622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 621,
							"linearizedBaseContracts": [
								621
							],
							"name": "IERC165",
							"nameLocation": "415:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "801:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 614,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "844:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:5"
									},
									"scope": 621,
									"src": "774:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 622,
							"src": "405:447:5",
							"usedErrors": []
						}
					],
					"src": "100:753:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 623,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 628,
									"members": [
										{
											"id": 625,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 626,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 627,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 638,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 639,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 642,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 641,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 644,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 1486,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 660,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 659,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 662,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 1486,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 675,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 677,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 678,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 679,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 681,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 673,
												"id": 685,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 1486,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 697,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 701,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 704,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 696,
												"id": 710,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 1486,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "1795:3797:6",
										"statements": [
											{
												"id": 832,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:6",
												"statements": [
													{
														"assignments": [
															725
														],
														"declarations": [
															{
																"constant": false,
																"id": 725,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2126:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 724,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 726,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:6"
													},
													{
														"assignments": [
															728
														],
														"declarations": [
															{
																"constant": false,
																"id": 728,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2198:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 727,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 729,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:6",
																"valueSize": 1
															}
														],
														"id": 730,
														"nodeType": "InlineAssembly",
														"src": "2269:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "2516:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 739,
														"nodeType": "IfStatement",
														"src": "2512:75:6",
														"trueBody": {
															"id": 738,
															"nodeType": "Block",
															"src": "2528:59:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 734,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "2553:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 735,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "2561:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 723,
																	"id": 737,
																	"nodeType": "Return",
																	"src": "2546:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 741,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "2697:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 742,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "2711:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 740,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 745,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:6"
													},
													{
														"assignments": [
															747
														],
														"declarations": [
															{
																"constant": false,
																"id": 747,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2973:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 748,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:6",
																"valueSize": 1
															}
														],
														"id": 749,
														"nodeType": "InlineAssembly",
														"src": "3004:300:6"
													},
													{
														"assignments": [
															751
														],
														"declarations": [
															{
																"constant": false,
																"id": 751,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "3611:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "3626:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:6",
																			"subExpression": {
																				"id": 753,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "3642:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 757,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:6",
																"valueSize": 1
															},
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:6",
																"valueSize": 1
															}
														],
														"id": 760,
														"nodeType": "InlineAssembly",
														"src": "3672:371:6"
													},
													{
														"expression": {
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 761,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "4109:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "4118:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 763,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4126:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 766,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:6"
													},
													{
														"assignments": [
															768
														],
														"declarations": [
															{
																"constant": false,
																"id": 768,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "4448:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 770,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "4471:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 772,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:6"
													},
													{
														"expression": {
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 776,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4704:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 778,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4719:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 779,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4733:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 783,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:6"
													},
													{
														"expression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 784,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 786,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4788:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 787,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4802:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:6"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4843:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4858:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:6"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4928:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4942:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:6"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4983:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4998:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5012:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:6"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "5069:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:6"
													},
													{
														"expression": {
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5524:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "5533:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 826,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "5541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 829,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:6"
													},
													{
														"expression": {
															"id": 830,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5569:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 723,
														"id": 831,
														"nodeType": "Return",
														"src": "5562:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1692:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1711:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1730:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:6"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:6"
									},
									"scope": 1486,
									"src": "1667:3925:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "5872:189:6",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "5882:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 852,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "5906:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 853,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "5909:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 854,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "5912:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															834,
															878
														],
														"referencedDeclaration": 834,
														"src": "5899:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$628",
															"typeString": "enum Math.Rounding"
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 857,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "5938:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$628",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 858,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "5950:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "5950:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$628",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 862,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "5972:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 863,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "5975:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 864,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "5978:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 861,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "5934:98:6",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "5996:36:6",
													"statements": [
														{
															"expression": {
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 869,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "6010:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 872,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 850,
													"src": "6048:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 848,
												"id": 876,
												"nodeType": "Return",
												"src": "6041:13:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5749:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5787:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5816:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 842,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "5816:8:6"
													},
													"referencedDeclaration": 628,
													"src": "5816:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5863:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:6"
									},
									"scope": 1486,
									"src": "5724:337:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "6337:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6351:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "6347:45:6",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "6359:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 885,
															"id": 890,
															"nodeType": "Return",
															"src": "6373:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "7071:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 897,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "7099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 896,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1158,
																			1194
																		],
																		"referencedDeclaration": 1158,
																		"src": "7094:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 901,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:6"
											},
											{
												"id": 988,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:6",
												"statements": [
													{
														"expression": {
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 904,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7532:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 905,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7542:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 906,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7551:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 907,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7555:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 910,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 914,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:6"
													},
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 915,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7581:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 916,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7591:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 917,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7600:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 918,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7604:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:6"
													},
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 926,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7630:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 927,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7640:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 928,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7649:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 929,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7653:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 932,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:6"
													},
													{
														"expression": {
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 937,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7679:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 938,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7689:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 939,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7698:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 940,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7702:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 947,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:6"
													},
													{
														"expression": {
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 948,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7728:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7738:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 950,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7747:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 951,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7751:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 958,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:6"
													},
													{
														"expression": {
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 959,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 960,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7787:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7796:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 962,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7800:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 965,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 969,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:6"
													},
													{
														"expression": {
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 970,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7826:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 971,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7836:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 972,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7845:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 973,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7849:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 976,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 980,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 982,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "7886:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 983,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "7894:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 984,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "7898:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 981,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "7882:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 885,
														"id": 987,
														"nodeType": "Return",
														"src": "7875:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6294:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6328:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:6"
									},
									"scope": 1486,
									"src": "6280:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "8098:161:6",
										"statements": [
											{
												"id": 1024,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:6",
												"statements": [
													{
														"assignments": [
															1002
														],
														"declarations": [
															{
																"constant": false,
																"id": 1002,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1024,
																"src": "8132:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1006,
														"initialValue": {
															"arguments": [
																{
																	"id": 1004,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "8154:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1003,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	990,
																	1026
																],
																"referencedDeclaration": 990,
																"src": "8149:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "8177:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1008,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "8187:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1009,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "8199:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1010,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "8199:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1012,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1002,
																						"src": "8214:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1013,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1002,
																						"src": "8223:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1015,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "8232:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1000,
														"id": 1023,
														"nodeType": "Return",
														"src": "8170:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8036:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8047:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 994,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "8047:8:6"
													},
													"referencedDeclaration": 628,
													"src": "8047:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:6"
									},
									"scope": 1486,
									"src": "8022:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "8444:922:6",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1157,
														"src": "8454:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"hexValue": "30",
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:6"
											},
											{
												"id": 1154,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8510:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "8506:99:6",
														"trueBody": {
															"id": 1051,
															"nodeType": "Block",
															"src": "8528:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8546:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1046,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:6"
																},
																{
																	"expression": {
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8577:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1050,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8622:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1067,
														"nodeType": "IfStatement",
														"src": "8618:96:6",
														"trueBody": {
															"id": 1066,
															"nodeType": "Block",
															"src": "8639:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8657:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:6"
																},
																{
																	"expression": {
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8687:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1065,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1082,
														"nodeType": "IfStatement",
														"src": "8727:96:6",
														"trueBody": {
															"id": 1081,
															"nodeType": "Block",
															"src": "8748:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8766:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:6"
																},
																{
																	"expression": {
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8796:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1080,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8840:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "8836:96:6",
														"trueBody": {
															"id": 1096,
															"nodeType": "Block",
															"src": "8857:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:6"
																},
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8905:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8949:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "8945:93:6",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "8965:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:6"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9012:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9055:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1127,
														"nodeType": "IfStatement",
														"src": "9051:93:6",
														"trueBody": {
															"id": 1126,
															"nodeType": "Block",
															"src": "9071:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "9089:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:6"
																},
																{
																	"expression": {
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1122,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9118:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1125,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9161:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "9157:93:6",
														"trueBody": {
															"id": 1141,
															"nodeType": "Block",
															"src": "9177:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "9195:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1136,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:6"
																},
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9224:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9267:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1153,
														"nodeType": "IfStatement",
														"src": "9263:64:6",
														"trueBody": {
															"id": 1152,
															"nodeType": "Block",
															"src": "9283:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9301:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1155,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "9353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1156,
												"nodeType": "Return",
												"src": "9346:13:6"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "8397:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "8435:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:6"
									},
									"scope": 1486,
									"src": "8383:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "9599:165:6",
										"statements": [
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:6",
												"statements": [
													{
														"assignments": [
															1170
														],
														"declarations": [
															{
																"constant": false,
																"id": 1170,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1192,
																"src": "9633:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1174,
														"initialValue": {
															"arguments": [
																{
																	"id": 1172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "9655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1171,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1158,
																	1194
																],
																"referencedDeclaration": 1158,
																"src": "9650:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1175,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "9682:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1176,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1164,
																					"src": "9692:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1177,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "9704:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "9704:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1181,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1170,
																						"src": "9724:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1183,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "9733:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1168,
														"id": 1191,
														"nodeType": "Return",
														"src": "9675:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9533:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9548:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1162,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "9548:8:6"
													},
													"referencedDeclaration": 628,
													"src": "9548:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:6"
									},
									"scope": 1486,
									"src": "9519:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "9951:828:6",
										"statements": [
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1322,
														"src": "9961:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"hexValue": "30",
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:6"
											},
											{
												"id": 1319,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10017:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "10013:99:6",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "10034:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10052:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1216,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:6"
																},
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10085:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10129:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1239,
														"nodeType": "IfStatement",
														"src": "10125:99:6",
														"trueBody": {
															"id": 1238,
															"nodeType": "Block",
															"src": "10146:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10164:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1233,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:6"
																},
																{
																	"expression": {
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1234,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10197:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1237,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10241:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1256,
														"nodeType": "IfStatement",
														"src": "10237:99:6",
														"trueBody": {
															"id": 1255,
															"nodeType": "Block",
															"src": "10258:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10276:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1250,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:6"
																},
																{
																	"expression": {
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10309:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1254,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10353:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1273,
														"nodeType": "IfStatement",
														"src": "10349:96:6",
														"trueBody": {
															"id": 1272,
															"nodeType": "Block",
															"src": "10369:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10387:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1267,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:6"
																},
																{
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1268,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10462:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1290,
														"nodeType": "IfStatement",
														"src": "10458:96:6",
														"trueBody": {
															"id": 1289,
															"nodeType": "Block",
															"src": "10478:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10496:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:6"
																},
																{
																	"expression": {
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10528:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1288,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10571:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "10567:96:6",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "10587:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10605:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:6"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10637:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10680:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1318,
														"nodeType": "IfStatement",
														"src": "10676:64:6",
														"trueBody": {
															"id": 1317,
															"nodeType": "Block",
															"src": "10696:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10714:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1316,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1320,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1203,
													"src": "10766:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1321,
												"nodeType": "Return",
												"src": "10759:13:6"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "9904:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "9942:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:6"
									},
									"scope": 1486,
									"src": "9889:890:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "11014:165:6",
										"statements": [
											{
												"id": 1357,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:6",
												"statements": [
													{
														"assignments": [
															1335
														],
														"declarations": [
															{
																"constant": false,
																"id": 1335,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1357,
																"src": "11048:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1339,
														"initialValue": {
															"arguments": [
																{
																	"id": 1337,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "11071:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1336,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1323,
																	1359
																],
																"referencedDeclaration": 1323,
																"src": "11065:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "11098:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1341,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "11108:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1342,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "11120:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "11120:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1345,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1346,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1335,
																						"src": "11139:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1348,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "11148:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1333,
														"id": 1356,
														"nodeType": "Return",
														"src": "11091:71:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10948:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10963:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1327,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "10963:8:6"
													},
													"referencedDeclaration": 628,
													"src": "10963:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:6"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "11005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:6"
									},
									"scope": 1486,
									"src": "10933:246:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "11493:600:6",
										"statements": [
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "11503:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"hexValue": "30",
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:6"
											},
											{
												"id": 1442,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1385,
														"nodeType": "IfStatement",
														"src": "11555:98:6",
														"trueBody": {
															"id": 1384,
															"nodeType": "Block",
															"src": "11577:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11595:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:6"
																},
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11626:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11670:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1400,
														"nodeType": "IfStatement",
														"src": "11666:95:6",
														"trueBody": {
															"id": 1399,
															"nodeType": "Block",
															"src": "11687:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11705:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:6"
																},
																{
																	"expression": {
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1395,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11735:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1398,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11778:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1415,
														"nodeType": "IfStatement",
														"src": "11774:95:6",
														"trueBody": {
															"id": 1414,
															"nodeType": "Block",
															"src": "11795:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11813:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1409,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:6"
																},
																{
																	"expression": {
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1410,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11843:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1413,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1416,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11886:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1430,
														"nodeType": "IfStatement",
														"src": "11882:95:6",
														"trueBody": {
															"id": 1429,
															"nodeType": "Block",
															"src": "11903:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11921:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1424,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:6"
																},
																{
																	"expression": {
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1425,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11951:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1428,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11994:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1441,
														"nodeType": "IfStatement",
														"src": "11990:64:6",
														"trueBody": {
															"id": 1440,
															"nodeType": "Block",
															"src": "12010:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1439,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1443,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1368,
													"src": "12080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1444,
												"nodeType": "Return",
												"src": "12073:13:6"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11484:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:6"
									},
									"scope": 1486,
									"src": "11430:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "12329:173:6",
										"statements": [
											{
												"id": 1483,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:6",
												"statements": [
													{
														"assignments": [
															1458
														],
														"declarations": [
															{
																"constant": false,
																"id": 1458,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1483,
																"src": "12363:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1462,
														"initialValue": {
															"arguments": [
																{
																	"id": 1460,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "12387:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1459,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1446,
																	1485
																],
																"referencedDeclaration": 1446,
																"src": "12380:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "12414:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1464,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1452,
																					"src": "12424:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1465,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "12436:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "12436:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1471,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1469,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1458,
																									"src": "12457:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1470,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1472,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1474,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1449,
																					"src": "12471:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1456,
														"id": 1482,
														"nodeType": "Return",
														"src": "12407:78:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12263:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12278:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1450,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "12278:8:6"
													},
													"referencedDeclaration": 628,
													"src": "12278:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:6"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12320:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:6"
									},
									"scope": 1486,
									"src": "12247:255:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "202:12302:6",
							"usedErrors": []
						}
					],
					"src": "103:12402:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1798
						]
					},
					"id": 1799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1798,
							"linearizedBaseContracts": [
								1798
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1519,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1502
														],
														"declarations": [
															{
																"constant": false,
																"id": 1502,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1519,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1506,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1508,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1514,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1500,
															"id": 1513,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1516,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1517,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1500,
														"id": 1518,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1798,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1547,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1534,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1532,
															"id": 1539,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1542,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1543,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1532,
														"id": 1546,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1798,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1589,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1568,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1560,
															"id": 1567,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1570
														],
														"declarations": [
															{
																"constant": false,
																"id": 1570,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1589,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1574,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1576,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1578,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1584,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1560,
															"id": 1583,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1586,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1560,
														"id": 1588,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1798,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1617,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1610,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1602,
															"id": 1609,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1612,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1613,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1615,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1602,
														"id": 1616,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1798,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1645,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1638,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1636,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1630,
															"id": 1637,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1640,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1641,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1630,
														"id": 1644,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1798,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1657,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1658,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1656,
												"id": 1660,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1798,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1672,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1673,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1671,
												"id": 1675,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1798,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1690,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1798,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1702,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1703,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1705,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1798,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1720,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1798,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "5084:106:7",
										"statements": [
											{
												"id": 1745,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1735,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "5126:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1736,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "5131:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1738,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "5134:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1734,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1740,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1741,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "5168:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1742,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "5172:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1733,
														"id": 1744,
														"nodeType": "Return",
														"src": "5161:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "4981:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5000:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5019:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:7"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5075:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:7"
									},
									"scope": 1798,
									"src": "4959:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "5799:105:7",
										"statements": [
											{
												"id": 1770,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1760,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5841:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1763,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "5848:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1759,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1765,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "5882:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1767,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "5886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1758,
														"id": 1769,
														"nodeType": "Return",
														"src": "5875:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5696:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5715:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5734:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:7"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5790:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:7"
									},
									"scope": 1798,
									"src": "5674:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "6675:105:7",
										"statements": [
											{
												"id": 1795,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "6717:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1788,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "6724:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1784,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1790,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1791,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "6758:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1792,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "6762:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1783,
														"id": 1794,
														"nodeType": "Return",
														"src": "6751:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6572:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6591:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1778,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:7"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:7"
									},
									"scope": 1798,
									"src": "6550:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1799,
							"src": "482:6300:7",
							"usedErrors": []
						}
					],
					"src": "107:6676:7"
				},
				"id": 7
			},
			"contracts/ICO.sol": {
				"ast": {
					"absolutePath": "contracts/ICO.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							410
						],
						"ERC165": [
							609
						],
						"IAccessControl": [
							388
						],
						"ICO": [
							2245
						],
						"IEFTT": [
							2328
						],
						"IERC165": [
							621
						],
						"Math": [
							1486
						],
						"SafeMath": [
							1798
						],
						"Strings": [
							585
						]
					},
					"id": 2246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "contracts/IEFTT.sol",
							"file": "./IEFTT.sol",
							"id": 1801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2246,
							"sourceUnit": 2329,
							"src": "126:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2246,
							"sourceUnit": 1799,
							"src": "148:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2246,
							"sourceUnit": 316,
							"src": "206:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1804,
										"name": "AccessControl",
										"nameLocations": [
											"282:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "282:13:8"
									},
									"id": 1805,
									"nodeType": "InheritanceSpecifier",
									"src": "282:13:8"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2245,
							"linearizedBaseContracts": [
								2245,
								315,
								609,
								621,
								388,
								410
							],
							"name": "ICO",
							"nameLocation": "275:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1808,
									"libraryName": {
										"id": 1806,
										"name": "SafeMath",
										"nameLocations": [
											"307:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1798,
										"src": "307:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "301:27:8",
									"typeName": {
										"id": 1807,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "76082a5e",
									"id": 1813,
									"mutability": "constant",
									"name": "INVESTOR_ROLE",
									"nameLocation": "357:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "333:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1809,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "333:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "494e564553544f525f524f4c45",
												"id": 1811,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "383:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												},
												"value": "INVESTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b165298935924f540e4181c03493a5d686c54a0aaeb3f6216de85b7ffbba7738",
													"typeString": "literal_string \"INVESTOR_ROLE\""
												}
											],
											"id": 1810,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "373:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "373:26:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1818,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "429:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "405:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1814,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1816,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "453:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1815,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "443:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "443:24:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b1ac51f8",
									"id": 1823,
									"mutability": "constant",
									"name": "EXTEND_ICO_ROLE",
									"nameLocation": "497:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "473:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1819,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "473:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455854454e445f49434f5f524f4c45",
												"id": 1821,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "525:17:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289",
													"typeString": "literal_string \"EXTEND_ICO_ROLE\""
												},
												"value": "EXTEND_ICO_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_305786ab5904b5bb20fe6d91992844b39d648cdcb82f328edc2d6a80bfbb3289",
													"typeString": "literal_string \"EXTEND_ICO_ROLE\""
												}
											],
											"id": 1820,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "515:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "515:28:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1825,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "566:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "550:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1824,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "550:15:8",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1827,
									"mutability": "mutable",
									"name": "devAddress",
									"nameLocation": "601:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "577:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "577:15:8",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1830,
									"mutability": "constant",
									"name": "burnAddres",
									"nameLocation": "634:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "617:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1828,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1829,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "646:42:8",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1833,
									"mutability": "mutable",
									"name": "minters_",
									"nameLocation": "704:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "694:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1831,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "694:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1832,
										"nodeType": "ArrayTypeName",
										"src": "694:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1835,
									"mutability": "mutable",
									"name": "maxSupply_",
									"nameLocation": "726:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "718:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1834,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1838,
									"mutability": "mutable",
									"name": "timeLock",
									"nameLocation": "750:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "742:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1836,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "742:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138303030303030303030",
										"id": 1837,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "759:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18000000000_by_1",
											"typeString": "int_const 18000000000"
										},
										"value": "18000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1841,
									"mutability": "mutable",
									"name": "eftt",
									"nameLocation": "782:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "776:10:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEFTT_$2328",
										"typeString": "contract IEFTT"
									},
									"typeName": {
										"id": 1840,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1839,
											"name": "IEFTT",
											"nameLocations": [
												"776:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2328,
											"src": "776:5:8"
										},
										"referencedDeclaration": 2328,
										"src": "776:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEFTT_$2328",
											"typeString": "contract IEFTT"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1848,
									"mutability": "mutable",
									"name": "maxICO",
									"nameLocation": "800:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "792:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1842,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"id": 1847,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030",
											"id": 1843,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "809:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000_by_1",
												"typeString": "int_const 100000"
											},
											"value": "100000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1846,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1844,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "817:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1845,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "821:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "817:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "809:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1850,
									"mutability": "mutable",
									"name": "SoldInMetis",
									"nameLocation": "837:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "829:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1849,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1852,
									"mutability": "mutable",
									"name": "SoldEFTT",
									"nameLocation": "862:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "854:16:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "854:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1855,
									"mutability": "mutable",
									"name": "ratioMetis",
									"nameLocation": "884:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "876:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1853,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1854,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "896:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1859,
									"mutability": "mutable",
									"name": "timeLocks",
									"nameLocation": "925:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "903:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1858,
										"keyType": {
											"id": 1856,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "911:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "903:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1857,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "919:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1862,
									"mutability": "mutable",
									"name": "BURNED",
									"nameLocation": "953:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "940:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1860,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "940:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "962:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1864,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "987:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "973:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1863,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "973:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1867,
									"mutability": "mutable",
									"name": "month",
									"nameLocation": "1007:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "999:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32353932303030",
										"id": 1866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1014:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "2592000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1870,
									"mutability": "mutable",
									"name": "week",
									"nameLocation": "1035:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1027:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1027:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363034383030",
										"id": 1869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1042:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "604800"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1872,
									"mutability": "immutable",
									"name": "creationtTime",
									"nameLocation": "1072:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1054:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1054:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1874,
									"mutability": "mutable",
									"name": "ICOtimeLock",
									"nameLocation": "1099:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1091:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1873,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "1167:419:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "INVESTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "1242:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1883,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "1257:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1881,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1231:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "1231:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1887,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "1283:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1888,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "1296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1886,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1272:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "1272:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1892,
															"name": "EXTEND_ICO_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "1322:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1893,
															"name": "_dev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "1339:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1891,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1311:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "1311:33:8"
											},
											{
												"expression": {
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1896,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "1354:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1899,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1370:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1374:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1370:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1362:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1362:8:8",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1362:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1354:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "1354:27:8"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1904,
														"name": "eftt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "1391:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEFTT_$2328",
															"typeString": "contract IEFTT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1906,
																"name": "_eftt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "1404:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1905,
															"name": "IEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "1398:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IEFTT_$2328_$",
																"typeString": "type(contract IEFTT)"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1398:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEFTT_$2328",
															"typeString": "contract IEFTT"
														}
													},
													"src": "1391:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEFTT_$2328",
														"typeString": "contract IEFTT"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "1391:19:8"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1910,
														"name": "devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "1420:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1913,
																"name": "_dev",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "1441:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1433:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1433:8:8",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1433:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1420:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "1420:26:8"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "creationtTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "1456:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1918,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1472:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1472:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1456:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "1456:31:8"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1922,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1497:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1924,
														"indexExpression": {
															"hexValue": "30",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1507:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1497:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313131",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_111_by_1",
															"typeString": "int_const 111"
														},
														"value": "111"
													},
													"src": "1497:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "1497:18:8"
											},
											{
												"expression": {
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1928,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1525:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1930,
														"indexExpression": {
															"hexValue": "31",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1535:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1525:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323232",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1540:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_222_by_1",
															"typeString": "int_const 222"
														},
														"value": "222"
													},
													"src": "1525:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "1525:18:8"
											},
											{
												"expression": {
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1934,
															"name": "timeLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1553:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1936,
														"indexExpression": {
															"hexValue": "32",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1563:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1553:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1568:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "1553:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "1553:18:8"
											}
										]
									},
									"id": 1941,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "_eftt",
												"nameLocation": "1138:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1130:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "1153:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1145:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:29:8"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1167:0:8"
									},
									"scope": 2245,
									"src": "1118:468:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 1945,
									"name": "Log",
									"nameLocation": "1599:3:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"indexed": false,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "1610:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1603:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1603:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:13:8"
									},
									"src": "1593:23:8"
								},
								{
									"anonymous": false,
									"eventSelector": "92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727",
									"id": 1949,
									"name": "Sold",
									"nameLocation": "1627:4:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1632:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1632:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:6:8"
									},
									"src": "1621:17:8"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "1666:81:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1952,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1684:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1690:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1684:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1954,
																"name": "timeLock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "1702:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f206973206f766572203a2820",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1711:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															},
															"value": "ICO is over :( "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18915724992a5e7073417532388d506a4dcbb7e1ab06fb1df273ca97e0daaa36",
																"typeString": "literal_string \"ICO is over :( \""
															}
														],
														"id": 1951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1676:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "1676:53:8"
											},
											{
												"id": 1959,
												"nodeType": "PlaceholderStatement",
												"src": "1739:1:8"
											}
										]
									},
									"id": 1961,
									"name": "_timeCheck",
									"nameLocation": "1654:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1664:2:8"
									},
									"src": "1645:102:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "1774:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1792:7:8",
															"subExpression": {
																"id": 1964,
																"name": "BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "1793:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74686520737570706c7920697320616c7265616479206275726e6564",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1800:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																"typeString": "literal_string \"the supply is already burned\""
															},
															"value": "the supply is already burned"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc7475dc17e204b97c5124a9773635b361913f3c158ee1acba0a3bddbddc709",
																"typeString": "literal_string \"the supply is already burned\""
															}
														],
														"id": 1963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1784:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "1784:47:8"
											},
											{
												"id": 1969,
												"nodeType": "PlaceholderStatement",
												"src": "1841:1:8"
											},
											{
												"expression": {
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1970,
														"name": "BURNED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "1852:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1861:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1852:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "1852:13:8"
											}
										]
									},
									"id": 1975,
									"name": "_burnCheck",
									"nameLocation": "1762:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:8"
									},
									"src": "1753:119:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "1898:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1978,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1916:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1979,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1925:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1929:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1925:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1916:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75277265206e6f7420746865206f776e6572",
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1936:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															},
															"value": "You're not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															}
														],
														"id": 1977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1908:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "1908:51:8"
											},
											{
												"id": 1985,
												"nodeType": "PlaceholderStatement",
												"src": "1969:1:8"
											}
										]
									},
									"id": 1987,
									"name": "_onlyOwner",
									"nameLocation": "1886:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1896:2:8"
									},
									"src": "1877:100:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2009:109:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2027:7:8",
															"subExpression": {
																"id": 1990,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "2028:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072652d656e7472616e6379",
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
																"typeString": "literal_string \"No re-entrancy\""
															},
															"value": "No re-entrancy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
																"typeString": "literal_string \"No re-entrancy\""
															}
														],
														"id": 1989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2019:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "2019:34:8"
											},
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1995,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2063:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2072:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2063:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "2063:13:8"
											},
											{
												"id": 1999,
												"nodeType": "PlaceholderStatement",
												"src": "2086:1:8"
											},
											{
												"expression": {
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2000,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2097:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2106:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2097:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "2097:14:8"
											}
										]
									},
									"id": 2005,
									"name": "_noReentry",
									"nameLocation": "1996:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:8"
									},
									"src": "1987:131:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "2155:104:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "66616c6c6261636b20686974",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															},
															"value": "fallback hit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_53a8fc1bfa8858b84bdf5e7d62623a6e828688580cdc7c5058ea1ee84444730a",
																"typeString": "literal_string \"fallback hit\""
															}
														],
														"id": 2008,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "2218:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "EmitStatement",
												"src": "2213:24:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2012,
														"name": "buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "2247:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:5:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "2247:5:8"
											}
										]
									},
									"id": 2016,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:8"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:8"
									},
									"scope": 2245,
									"src": "2128:131:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "2320:386:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2024,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2338:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2342:5:8",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2338:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2350:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2338:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468656d2f7468657920706c656173652073656e64206d65746973",
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2352:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																"typeString": "literal_string \"them/they please send metis\""
															},
															"value": "them/they please send metis"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb9d703df530060108f698d39633a3d044b01cd48739979d6c51457a676bc0bd",
																"typeString": "literal_string \"them/they please send metis\""
															}
														],
														"id": 2023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2330:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "2330:52:8"
											},
											{
												"assignments": [
													2032
												],
												"declarations": [
													{
														"constant": false,
														"id": 2032,
														"mutability": "mutable",
														"name": "buyAmount",
														"nameLocation": "2400:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 2077,
														"src": "2392:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2392:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2034,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2423:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2427:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2423:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"name": "conversion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "2412:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2039,
																	"name": "buyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "2452:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2040,
																	"name": "SoldEFTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "2464:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2452:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2042,
																"name": "maxICO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "2475:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2452:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "657863656564732074686520746f74616c20666f722073616c65",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															},
															"value": "exceeds the total for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6208506c60d8faa91d613aea9271bf011e474f379207304187586417e986be9c",
																"typeString": "literal_string \"exceeds the total for sale\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2444:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "2444:68:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2052,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2544:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2245",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2245",
																		"typeString": "contract ICO"
																	}
																],
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2536:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2536:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2536:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2054,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2551:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2047,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2522:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2328",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2527:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2310,
														"src": "2522:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "2522:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2585:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2589:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2585:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2062,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2597:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2057,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2571:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2328",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2576:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2290,
														"src": "2571:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2571:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "2571:36:8"
											},
											{
												"expression": {
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2065,
														"name": "SoldEFTT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "2617:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2066,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2628:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2067,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "2640:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2628:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2617:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "2617:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2072,
															"name": "buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2668:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2071,
														"name": "Sold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "2663:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2074,
												"nodeType": "EmitStatement",
												"src": "2658:20:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2695:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2022,
												"id": 2076,
												"nodeType": "Return",
												"src": "2688:11:8"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2019,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2018,
												"name": "_timeCheck",
												"nameLocations": [
													"2296:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1961,
												"src": "2296:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2296:10:8"
										}
									],
									"name": "buy",
									"nameLocation": "2275:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2278:2:8"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "2315:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2315:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:6:8"
									},
									"scope": 2245,
									"src": "2266:440:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "2776:630:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2086,
															"name": "creationtTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "2800:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2087,
																"name": "month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "2816:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2824:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2816:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2800:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2091,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2829:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2835:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2829:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2800:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2120,
																"name": "creationtTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "3039:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2121,
																	"name": "month",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "3055:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3132",
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3063:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	},
																	"value": "12"
																},
																"src": "3055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3039:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2125,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3068:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3074:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3068:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3039:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2144,
																	"name": "creationtTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "3221:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2145,
																		"name": "month",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "3237:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3245:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "3237:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3221:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2149,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3249:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3255:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3249:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2168,
														"nodeType": "IfStatement",
														"src": "3216:175:8",
														"trueBody": {
															"id": 2167,
															"nodeType": "Block",
															"src": "3265:126:8",
															"statements": [
																{
																	"assignments": [
																		2153
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2153,
																			"mutability": "mutable",
																			"name": "convertedAmnt",
																			"nameLocation": "3287:13:8",
																			"nodeType": "VariableDeclaration",
																			"scope": 2167,
																			"src": "3279:21:8",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2152,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3279:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2157,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 2155,
																				"name": "_amnt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2080,
																				"src": "3317:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2154,
																			"name": "percentFromICO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "3302:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3302:21:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3279:44:8"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2164,
																				"name": "convertedAmnt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "3366:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2160,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3345:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 2161,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3349:6:8",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3345:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3337:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 2158,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3337:8:8",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3337:19:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3357:8:8",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"src": "3337:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																				"typeString": "function (uint256)"
																			}
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3337:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2166,
																	"nodeType": "ExpressionStatement",
																	"src": "3337:43:8"
																}
															]
														}
													},
													"id": 2169,
													"nodeType": "IfStatement",
													"src": "3034:357:8",
													"trueBody": {
														"id": 2143,
														"nodeType": "Block",
														"src": "3084:126:8",
														"statements": [
															{
																"assignments": [
																	2129
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2129,
																		"mutability": "mutable",
																		"name": "convertedAmnt",
																		"nameLocation": "3106:13:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 2143,
																		"src": "3098:21:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2128,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3098:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2133,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2131,
																			"name": "_amnt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2080,
																			"src": "3136:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2130,
																		"name": "percentFromICO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "3121:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3121:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3098:44:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2140,
																			"name": "convertedAmnt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "3185:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2136,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3164:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3168:6:8",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3164:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3156:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2134,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3156:8:8",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3156:19:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3176:8:8",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"src": "3156:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3156:43:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2142,
																"nodeType": "ExpressionStatement",
																"src": "3156:43:8"
															}
														]
													}
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "2795:596:8",
												"trueBody": {
													"id": 2119,
													"nodeType": "Block",
													"src": "2845:183:8",
													"statements": [
														{
															"assignments": [
																2095
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2095,
																	"mutability": "mutable",
																	"name": "convertedAmnt",
																	"nameLocation": "2867:13:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2119,
																	"src": "2859:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2859:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2099,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2097,
																		"name": "_amnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2080,
																		"src": "2897:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2096,
																	"name": "percentFromICO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "2882:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2882:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2859:44:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2105,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2939:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ICO_$2245",
																					"typeString": "contract ICO"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ICO_$2245",
																					"typeString": "contract ICO"
																				}
																			],
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2931:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2931:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2931:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2107,
																		"name": "convertedAmnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "2946:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2100,
																		"name": "eftt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "2917:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEFTT_$2328",
																			"typeString": "contract IEFTT"
																		}
																	},
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2922:7:8",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2310,
																	"src": "2917:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2917:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2109,
															"nodeType": "ExpressionStatement",
															"src": "2917:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2116,
																		"name": "convertedAmnt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "3003:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2112,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2982:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2986:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2982:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2974:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2110,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2974:8:8",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2974:19:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2994:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2974:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2118,
															"nodeType": "ExpressionStatement",
															"src": "2974:43:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2083,
													"name": "INVESTOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "2754:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2082,
												"name": "onlyRole",
												"nameLocations": [
													"2745:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2745:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2745:23:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "2721:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "2738:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "2730:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:15:8"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2776:0:8"
									},
									"scope": 2245,
									"src": "2712:694:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "3480:207:8",
										"statements": [
											{
												"assignments": [
													2183
												],
												"declarations": [
													{
														"constant": false,
														"id": 2183,
														"mutability": "mutable",
														"name": "burnAmnt",
														"nameLocation": "3498:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2196,
														"src": "3490:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3490:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2186,
																	"name": "SoldEFTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "3521:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2184,
																	"name": "maxICO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "3510:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3517:3:8",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1677,
																"src": "3510:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3510:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2188,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3509:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2193,
															"name": "burnAmnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "3551:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2190,
															"name": "eftt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3541:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEFTT_$2328",
																"typeString": "contract IEFTT"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3546:4:8",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2327,
														"src": "3541:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "3541:19:8"
											}
										]
									},
									"functionSelector": "4f248409",
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2175,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2174,
												"name": "_timeCheck",
												"nameLocations": [
													"3437:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1961,
												"src": "3437:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3437:10:8"
										},
										{
											"arguments": [
												{
													"id": 2177,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1818,
													"src": "3457:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2176,
												"name": "onlyRole",
												"nameLocations": [
													"3448:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3448:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3448:21:8"
										},
										{
											"id": 2180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2179,
												"name": "_burnCheck",
												"nameLocations": [
													"3470:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1975,
												"src": "3470:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3470:10:8"
										}
									],
									"name": "endICO",
									"nameLocation": "3421:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3427:2:8"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3480:0:8"
									},
									"scope": 2245,
									"src": "3412:275:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "3757:46:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2206,
																	"name": "ratioMetis",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "3784:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2204,
																	"name": "_amnt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "3774:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3780:3:8",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1692,
																"src": "3774:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3774:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3773:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2203,
												"id": 2209,
												"nodeType": "Return",
												"src": "3767:29:8"
											}
										]
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "conversion",
									"nameLocation": "3702:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "3721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3713:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3712:15:8"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3749:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:9:8"
									},
									"scope": 2245,
									"src": "3693:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "3877:48:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2220,
																"name": "soldPercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "3904:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3904:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2218,
															"name": "_amnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "3894:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3900:3:8",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1692,
														"src": "3894:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2223,
												"nodeType": "Return",
												"src": "3887:31:8"
											}
										]
									},
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentFromICO",
									"nameLocation": "3818:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "_amnt",
												"nameLocation": "3841:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "3833:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:15:8"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "3869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3868:9:8"
									},
									"scope": 2245,
									"src": "3809:116:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "3983:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2232,
															"name": "maxICO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "4013:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2230,
															"name": "SoldEFTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "4000:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4009:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1707,
														"src": "4000:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4000:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2234,
												"nodeType": "Return",
												"src": "3993:27:8"
											}
										]
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "soldPercent",
									"nameLocation": "3940:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3951:2:8"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3975:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:8"
									},
									"scope": 2245,
									"src": "3931:96:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "4075:30:8",
										"statements": [
											{
												"expression": {
													"id": 2241,
													"name": "BURNED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1862,
													"src": "4092:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2240,
												"id": 2242,
												"nodeType": "Return",
												"src": "4085:13:8"
											}
										]
									},
									"functionSelector": "73f42561",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burned",
									"nameLocation": "4041:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4047:2:8"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "4070:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4070:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:6:8"
									},
									"scope": 2245,
									"src": "4032:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2246,
							"src": "266:3841:8",
							"usedErrors": []
						}
					],
					"src": "32:4075:8"
				},
				"id": 8
			},
			"contracts/IEFTT.sol": {
				"ast": {
					"absolutePath": "contracts/IEFTT.sol",
					"exportedSymbols": {
						"IEFTT": [
							2328
						]
					},
					"id": 2329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEFTT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2248,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2328,
							"linearizedBaseContracts": [
								2328
							],
							"name": "IEFTT",
							"nameLocation": "212:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "224:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2257,
									"name": "Transfer",
									"nameLocation": "393:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "418:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "402:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "440:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "424:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "452:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "444:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:57:9"
									},
									"src": "387:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "465:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2266,
									"name": "Approval",
									"nameLocation": "624:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "649:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "633:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "672:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "656:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "689:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "681:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:63:9"
									},
									"src": "618:78:9"
								},
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "702:66:9",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "782:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:9"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "819:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:9"
									},
									"scope": 2328,
									"src": "773:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "834:72:9",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "930:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:9"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "970:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:9"
									},
									"scope": 2328,
									"src": "911:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "985:202:9",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1201:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1218:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "1210:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1230:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "1222:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:28:9"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "1256:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:9"
									},
									"scope": 2328,
									"src": "1192:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "1268:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1546:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1564:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "1556:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1579:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "1571:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:32:9"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "1611:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:9:9"
									},
									"scope": 2328,
									"src": "1537:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "1626:642:9",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2282:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2298:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "2290:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2315:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "2307:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:33:9"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "2341:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2341:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:6:9"
									},
									"scope": 2328,
									"src": "2273:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "2353:287:9",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2654:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2684:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "2676:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2706:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "2698:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2726:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "2718:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:72:9"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "2757:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:6:9"
									},
									"scope": 2328,
									"src": "2645:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2791:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "2783:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:16:9"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:0:9"
									},
									"scope": 2328,
									"src": "2769:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2329,
							"src": "202:2608:9",
							"usedErrors": []
						}
					],
					"src": "106:2705:9"
				},
				"id": 9
			}
		}
	}
}